{"ast":null,"code":"import _classCallCheck from \"D:/eway/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/eway/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Const, ServiceHandle } from '../utilities';\nexport var FacilityService = /*#__PURE__*/function () {\n  function FacilityService() {\n    _classCallCheck(this, FacilityService);\n  }\n\n  _createClass(FacilityService, [{\n    key: \"getWhFacilitiesByOwner\",\n    value: function getWhFacilitiesByOwner(params) {\n      return ServiceHandle.get(Const.API.GetWhFacilitiesByOwner, {\n        params: params\n      }).then(function (res) {\n        return res.data.data;\n      });\n    }\n  }, {\n    key: \"getFacilityRequireDateConfig\",\n    value: function getFacilityRequireDateConfig() {\n      return ServiceHandle.get(Const.API.GetFacilitiesWithDateConfig_Log, {}).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getListProductFacility\",\n    value: function getListProductFacility() {\n      return ServiceHandle.get(Const.API.GetListProductFacilityUseView_Log, {}).then(function (res) {\n        return res.data;\n      });\n    }\n    /**\r\n     *\r\n     * @param {*} facilityId\r\n     * @returns Facility detail\r\n     */\n\n  }, {\n    key: \"getFacility\",\n    value: function getFacility(facilityId) {\n      return ServiceHandle.get(Const.API.Facilities + \"/\".concat(facilityId)).then(function (res) {\n        return res.data;\n      });\n    }\n    /**\r\n     *\r\n     * @param {*} params\r\n     * @returns Page{facilityList, totalRecords}\r\n     */\n\n  }, {\n    key: \"getFacilities\",\n    value: function getFacilities(params) {\n      return ServiceHandle.get(Const.API.Facilities, {\n        params: params\n      }).then(function (res) {\n        return {\n          facilityList: res.data,\n          totalRecords: res.headers['x-total-count']\n        };\n      });\n    }\n  }, {\n    key: \"createFacility\",\n    value: function createFacility(params) {\n      return ServiceHandle.post(Const.API.Facilities, params).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"updateFacility\",\n    value: function updateFacility(facilityId, params) {\n      return ServiceHandle.patch(Const.API.Facilities + \"/\".concat(facilityId), params).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"deleteContactMech\",\n    value: function deleteContactMech(facilityId, contactMechId, contactMechPurposeId) {\n      return ServiceHandle.delete(Const.API.Facilities + \"/\".concat(facilityId, \"/contactMechs/\").concat(contactMechId), {\n        contactMechPurposeId: contactMechPurposeId\n      }).then(function (res) {\n        return res.data;\n      });\n    } //########################  postalAddress\n\n  }, {\n    key: \"getPostalAddresses\",\n    value: function getPostalAddresses(facilityId, params) {\n      return ServiceHandle.get(Const.API.Facilities + \"/\".concat(facilityId, \"/contactMechs/postalAddresses\"), {\n        params: params\n      }).then(function (res) {\n        return {\n          postalAddressList: res.data,\n          totalRecords: res.headers['x-total-count']\n        };\n      });\n    }\n    /**\r\n     *\r\n     * @param {*} facilityId\r\n     * @param {*} contactMechId\r\n     * @param {*} params\r\n     * @returns contactMechId\r\n     */\n\n  }, {\n    key: \"updatePostalAddress\",\n    value: function updatePostalAddress(facilityId, contactMechId, params) {\n      return ServiceHandle.patch(Const.API.Facilities + \"/\".concat(facilityId, \"/contactMechs/\").concat(contactMechId, \"/postalAddress\"), params).then(function (res) {\n        return res.data;\n      });\n    } //######################## telecomNumbers\n\n  }, {\n    key: \"getTelecomNumbers\",\n    value: function getTelecomNumbers(facilityId, params) {\n      return ServiceHandle.get(Const.API.Facilities + \"/\".concat(facilityId, \"/contactMechs/telecomNumbers\"), {\n        params: params\n      }).then(function (res) {\n        return {\n          telecomNumberList: res.data,\n          totalRecords: res.headers['x-total-count']\n        };\n      });\n    }\n    /**\r\n     *\r\n     * @param {*} facilityId\r\n     * @param {*} contactMechId\r\n     * @param {*} params\r\n     * @returns contactMechId\r\n     */\n\n  }, {\n    key: \"updateTelecomNumber\",\n    value: function updateTelecomNumber(facilityId, contactMechId, params) {\n      return ServiceHandle.patch(Const.API.Facilities + \"/\".concat(facilityId, \"/contactMechs/\").concat(contactMechId, \"/telecomNumber\"), params).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getAllFacilities\",\n    value: function getAllFacilities() {\n      return ServiceHandle.get(Const.API.Facilities, {}).then(function (res) {\n        return res.data;\n      });\n    } // POST http://localhost:8080/rest/s1/log/setProductFacility\n\n  }, {\n    key: \"saveProductFacility\",\n    value: function saveProductFacility(params, invoiceId) {\n      return ServiceHandle.post(\"/rest/s1/log/setProductFacility\", params).then(function (res) {\n        return res;\n      });\n    }\n  }]);\n\n  return FacilityService;\n}();","map":{"version":3,"sources":["D:/eway/src/service/FacilityService.js"],"names":["Const","ServiceHandle","FacilityService","params","get","API","GetWhFacilitiesByOwner","then","res","data","GetFacilitiesWithDateConfig_Log","GetListProductFacilityUseView_Log","facilityId","Facilities","facilityList","totalRecords","headers","post","patch","contactMechId","contactMechPurposeId","delete","postalAddressList","telecomNumberList","invoiceId"],"mappings":"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","sourcesContent":["import { Const, ServiceHandle } from '../utilities';\r\n\r\nexport class FacilityService {\r\n\r\n    getWhFacilitiesByOwner(params) {\r\n        return ServiceHandle.get(Const.API.GetWhFacilitiesByOwner, { params: params }).then(res => {\r\n            return res.data.data\r\n        });\r\n    }\r\n\r\n    getFacilityRequireDateConfig(){\r\n        return ServiceHandle.get(Const.API.GetFacilitiesWithDateConfig_Log, {}).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    getListProductFacility(){\r\n        return ServiceHandle.get(Const.API.GetListProductFacilityUseView_Log, {}).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {*} facilityId\r\n     * @returns Facility detail\r\n     */\r\n     getFacility(facilityId) {\r\n        return ServiceHandle.get(Const.API.Facilities + `/${facilityId}` ).then(res => {\r\n            return  res.data;\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} params\r\n     * @returns Page{facilityList, totalRecords}\r\n     */\r\n    getFacilities(params) {\r\n        return ServiceHandle.get(Const.API.Facilities, { params: params }).then(res => {\r\n            return {\r\n                facilityList: res.data,\r\n                totalRecords: res.headers['x-total-count']\r\n            }\r\n        });\r\n    }\r\n\r\n    createFacility(params) {\r\n        return ServiceHandle.post(Const.API.Facilities, params).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    updateFacility(facilityId, params) {\r\n        return ServiceHandle.patch(Const.API.Facilities + `/${facilityId}`, params).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n\r\n    deleteContactMech(facilityId, contactMechId, contactMechPurposeId) {\r\n        return ServiceHandle.delete(Const.API.Facilities + `/${facilityId}/contactMechs/${contactMechId}`, {contactMechPurposeId: contactMechPurposeId}).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    //########################  postalAddress\r\n\r\n    getPostalAddresses(facilityId, params) {\r\n        return ServiceHandle.get(Const.API.Facilities + `/${facilityId}/contactMechs/postalAddresses`, { params: params }).then(res => {\r\n            return {\r\n                postalAddressList: res.data,\r\n                totalRecords: res.headers['x-total-count']\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} facilityId\r\n     * @param {*} contactMechId\r\n     * @param {*} params\r\n     * @returns contactMechId\r\n     */\r\n    updatePostalAddress(facilityId, contactMechId, params) {\r\n        return ServiceHandle.patch(Const.API.Facilities + `/${facilityId}/contactMechs/${contactMechId}/postalAddress`, params).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    //######################## telecomNumbers\r\n\r\n    getTelecomNumbers(facilityId, params) {\r\n        return ServiceHandle.get(Const.API.Facilities + `/${facilityId}/contactMechs/telecomNumbers`, { params: params }).then(res => {\r\n            return {\r\n                telecomNumberList: res.data,\r\n                totalRecords: res.headers['x-total-count']\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param {*} facilityId\r\n     * @param {*} contactMechId\r\n     * @param {*} params\r\n     * @returns contactMechId\r\n     */\r\n    updateTelecomNumber(facilityId, contactMechId, params) {\r\n        return ServiceHandle.patch(Const.API.Facilities + `/${facilityId}/contactMechs/${contactMechId}/telecomNumber`, params).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    getAllFacilities(){\r\n        return ServiceHandle.get(Const.API.Facilities, {}).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    // POST http://localhost:8080/rest/s1/log/setProductFacility\r\n    saveProductFacility(params, invoiceId){\r\n        return ServiceHandle.post(\"/rest/s1/log/setProductFacility\", params)\r\n          .then(res => res);\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}