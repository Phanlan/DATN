{"ast":null,"code":"import React, { Component } from 'react';\nimport CompanyService from './CompanyService';\nimport './CompanyTable.css'; // import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CompanyTable = function CompanyTable() {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         companies: [],\n  //         id: 0,\n  //         name: \"\",\n  //         taxCode: \"\",\n  //         authorizedCapital: 0.0,\n  //         fieldOfActivity: \"\",\n  //         floor: \"\",\n  //         hotline: \"\",\n  //         area: 0.0,\n  //         numberOfEmployee: 0\n  //     }\n  //     toast.configure();\n  // }\n  // isChange = (event) => {\n  //     const name = event.target.name;\n  //     const value = event.target.value;\n  //     console.log(name);\n  //     console.log(value);\n  //     this.setState({\n  //         [name]: value\n  //     })\n  // }\n  // changeButton = (id) => {\n  //     if (id === 0) {\n  //         return <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={(name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => this.addNewCompany(\n  //             name = this.state.name,\n  //             taxCode = this.state.taxCode,\n  //             authorizedCapital = this.state.authorizedCapital,\n  //             fieldOfActivity = this.state.fieldOfActivity,\n  //             floor = this.state.floor,\n  //             hotline = this.state.hotline,\n  //             area = this.state.area,\n  //             numberOfEmployee = this.state.numberOfEmployee)\n  //         }>Add New</button>\n  //     } else {\n  //         return <button type=\"button\" className=\"btn btn-warning\" data-bs-dismiss=\"modal\" onClick={(id, name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => this.editCompany(\n  //             id = this.state.id,\n  //             name = this.state.name,\n  //             taxCode = this.state.taxCode,\n  //             authorizedCapital = this.state.authorizedCapital,\n  //             fieldOfActivity = this.state.fieldOfActivity,\n  //             floor = this.state.floor,\n  //             hotline = this.state.hotline,\n  //             area = this.state.area,\n  //             numberOfEmployee = this.state.numberOfEmployee)}>Update</button>\n  //     }\n  // }\n  // getName = (nameLike) => {\n  //     const value = nameLike.target.value;\n  //     // console.log(name);\n  //     // console.log(value);\n  //     this.setState({\n  //         name: value\n  //     })\n  // }\n  // searchName = () => {\n  //     // console.log(value);\n  //     // console.log(this.state)\n  //     CompanyService.searchByName(this.state.name).then((response) => {\n  //         this.setState({ companies: response.data.data })\n  //     });\n  // }\n  // addNewCompany = (name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => {\n  //     if (name === \"\" || taxCode == \"\" || authorizedCapital === \"\" || fieldOfActivity === \"\" || floor === \"\" || hotline === \"\" || area === \"\" || numberOfEmployee === \"\") {\n  //         toast.error('Please fill all the empty!!')\n  //     }\n  //     else {\n  //         var company = {};\n  //         company.name = name;\n  //         company.taxCode = taxCode;\n  //         company.authorizedCapital = parseFloat(authorizedCapital);\n  //         company.fieldOfActivity = fieldOfActivity;\n  //         company.floor = floor;\n  //         company.hotline = hotline;\n  //         company.area = parseFloat(area);\n  //         company.numberOfEmployee = parseInt(numberOfEmployee);\n  //         console.log(company)\n  //         CompanyService.createCompany(company).then(() => {\n  //             this.componentDidMount();\n  //         })\n  //         toast.success('Added Company successfully!!!');\n  //         this.setState({\n  //             id: 0,\n  //             name: \"\",\n  //             taxCode: \"\",\n  //             authorizedCapital: 0.0,\n  //             fieldOfActivity: \"\",\n  //             floor: \"\",\n  //             hotline: \"\",\n  //             area: 0.0,\n  //             numberOfEmployee: 0\n  //         });\n  //     }\n  // }\n  // editCompany = (id, name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => {\n  //     var company = {};\n  //     company.id = parseInt(id);\n  //     company.name = name;\n  //     company.taxCode = taxCode;\n  //     company.authorizedCapital = parseFloat(authorizedCapital);\n  //     company.fieldOfActivity = fieldOfActivity;\n  //     company.floor = floor;\n  //     company.hotline = hotline;\n  //     company.area = parseFloat(area);\n  //     company.numberOfEmployee = parseInt(numberOfEmployee);\n  //     CompanyService.updateCompany(company.id, company).then(() => {\n  //         this.componentDidMount();\n  //     })\n  //     toast.info('Updated Company successfully!!!');\n  //     this.setState({\n  //         id: 0,\n  //         name: \"\",\n  //         taxCode: \"\",\n  //         authorizedCapital: 0.0,\n  //         fieldOfActivity: \"\",\n  //         floor: \"\",\n  //         hotline: \"\",\n  //         area: 0.0,\n  //         numberOfEmployee: 0\n  //     });\n  // }\n  // getCompany = (company) => {\n  //     this.setState({\n  //         id: company.id,\n  //         name: company.name,\n  //         taxCode: company.taxCode,\n  //         authorizedCapital: company.authorizedCapital,\n  //         fieldOfActivity: company.fieldOfActivity,\n  //         floor: company.floor,\n  //         hotline: company.hotline,\n  //         area: company.area,\n  //         numberOfEmployee: company.numberOfEmployee\n  //     });\n  // }\n  // deleteCompany = (id) => {\n  //     CompanyService.deleteCompany(parseInt(id)).then(() => {\n  //         this.componentDidMount();\n  //     });\n  //     toast.error('Deleted Company successfully!!!');\n  // }\n  // componentDidMount() {\n  //     CompanyService.getAllCompany().then((response) => {\n  //         this.setState({ companies: response.data.data })\n  //     })\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = CompanyTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyTable\");","map":{"version":3,"sources":["D:/ĐA/src/components/company-table/CompanyTable.js"],"names":["React","Component","CompanyService","CompanyTable"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,oBAAP,C,CACA;AACA;;;;AAEA,OAAO,IAAOC,YAAY,GAAC,SAAbA,YAAa,GAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACI,sBACI,qCADJ;AAIH,CApKE;KAAOA,Y","sourcesContent":["import React, { Component } from 'react';\nimport CompanyService from './CompanyService';\nimport './CompanyTable.css';\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nexport const  CompanyTable=() =>  {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         companies: [],\n    //         id: 0,\n    //         name: \"\",\n    //         taxCode: \"\",\n    //         authorizedCapital: 0.0,\n    //         fieldOfActivity: \"\",\n    //         floor: \"\",\n    //         hotline: \"\",\n    //         area: 0.0,\n    //         numberOfEmployee: 0\n    //     }\n    //     toast.configure();\n    // }\n\n    // isChange = (event) => {\n    //     const name = event.target.name;\n    //     const value = event.target.value;\n    //     console.log(name);\n    //     console.log(value);\n    //     this.setState({\n    //         [name]: value\n    //     })\n    // }\n    // changeButton = (id) => {\n    //     if (id === 0) {\n    //         return <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={(name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => this.addNewCompany(\n    //             name = this.state.name,\n    //             taxCode = this.state.taxCode,\n    //             authorizedCapital = this.state.authorizedCapital,\n    //             fieldOfActivity = this.state.fieldOfActivity,\n    //             floor = this.state.floor,\n    //             hotline = this.state.hotline,\n    //             area = this.state.area,\n    //             numberOfEmployee = this.state.numberOfEmployee)\n    //         }>Add New</button>\n    //     } else {\n    //         return <button type=\"button\" className=\"btn btn-warning\" data-bs-dismiss=\"modal\" onClick={(id, name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => this.editCompany(\n    //             id = this.state.id,\n    //             name = this.state.name,\n    //             taxCode = this.state.taxCode,\n    //             authorizedCapital = this.state.authorizedCapital,\n    //             fieldOfActivity = this.state.fieldOfActivity,\n    //             floor = this.state.floor,\n    //             hotline = this.state.hotline,\n    //             area = this.state.area,\n    //             numberOfEmployee = this.state.numberOfEmployee)}>Update</button>\n    //     }\n    // }\n\n\n    // getName = (nameLike) => {\n    //     const value = nameLike.target.value;\n    //     // console.log(name);\n    //     // console.log(value);\n    //     this.setState({\n    //         name: value\n    //     })\n\n    // }\n\n\n    // searchName = () => {\n    //     // console.log(value);\n    //     // console.log(this.state)\n    //     CompanyService.searchByName(this.state.name).then((response) => {\n    //         this.setState({ companies: response.data.data })\n    //     });\n    // }\n\n    // addNewCompany = (name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => {\n    //     if (name === \"\" || taxCode == \"\" || authorizedCapital === \"\" || fieldOfActivity === \"\" || floor === \"\" || hotline === \"\" || area === \"\" || numberOfEmployee === \"\") {\n    //         toast.error('Please fill all the empty!!')\n    //     }\n    //     else {\n    //         var company = {};\n    //         company.name = name;\n    //         company.taxCode = taxCode;\n    //         company.authorizedCapital = parseFloat(authorizedCapital);\n    //         company.fieldOfActivity = fieldOfActivity;\n    //         company.floor = floor;\n    //         company.hotline = hotline;\n    //         company.area = parseFloat(area);\n    //         company.numberOfEmployee = parseInt(numberOfEmployee);\n    //         console.log(company)\n    //         CompanyService.createCompany(company).then(() => {\n    //             this.componentDidMount();\n    //         })\n    //         toast.success('Added Company successfully!!!');\n    //         this.setState({\n    //             id: 0,\n    //             name: \"\",\n    //             taxCode: \"\",\n    //             authorizedCapital: 0.0,\n    //             fieldOfActivity: \"\",\n    //             floor: \"\",\n    //             hotline: \"\",\n    //             area: 0.0,\n    //             numberOfEmployee: 0\n    //         });\n    //     }\n    // }\n\n    // editCompany = (id, name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => {\n    //     var company = {};\n    //     company.id = parseInt(id);\n    //     company.name = name;\n    //     company.taxCode = taxCode;\n    //     company.authorizedCapital = parseFloat(authorizedCapital);\n    //     company.fieldOfActivity = fieldOfActivity;\n    //     company.floor = floor;\n    //     company.hotline = hotline;\n    //     company.area = parseFloat(area);\n    //     company.numberOfEmployee = parseInt(numberOfEmployee);\n    //     CompanyService.updateCompany(company.id, company).then(() => {\n    //         this.componentDidMount();\n    //     })\n    //     toast.info('Updated Company successfully!!!');\n    //     this.setState({\n    //         id: 0,\n    //         name: \"\",\n    //         taxCode: \"\",\n    //         authorizedCapital: 0.0,\n    //         fieldOfActivity: \"\",\n    //         floor: \"\",\n    //         hotline: \"\",\n    //         area: 0.0,\n    //         numberOfEmployee: 0\n    //     });\n    // }\n\n    // getCompany = (company) => {\n    //     this.setState({\n    //         id: company.id,\n    //         name: company.name,\n    //         taxCode: company.taxCode,\n    //         authorizedCapital: company.authorizedCapital,\n    //         fieldOfActivity: company.fieldOfActivity,\n    //         floor: company.floor,\n    //         hotline: company.hotline,\n    //         area: company.area,\n    //         numberOfEmployee: company.numberOfEmployee\n    //     });\n    // }\n\n    // deleteCompany = (id) => {\n    //     CompanyService.deleteCompany(parseInt(id)).then(() => {\n    //         this.componentDidMount();\n    //     });\n    //     toast.error('Deleted Company successfully!!!');\n    // }\n\n    // componentDidMount() {\n    //     CompanyService.getAllCompany().then((response) => {\n    //         this.setState({ companies: response.data.data })\n    //     })\n    // }\n        return (\n            <>\n            </>\n        );\n    }\n\n"]},"metadata":{},"sourceType":"module"}