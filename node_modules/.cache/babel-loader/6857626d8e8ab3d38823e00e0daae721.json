{"ast":null,"code":"import _asyncToGenerator from \"D:/eway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/eway/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\eway\\\\src\\\\components\\\\facility\\\\FacilityTelecomNumberList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\eway\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { ConfirmDialog } from 'primereact/confirmdialog';\nimport { FacilityService } from '../../service/FacilityService';\nimport { ContactMechService } from '../../service/ContactMechService';\nimport { TelecomNumberEdit } from './TelecomNumberEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var FacilityTelecomNumberList = function FacilityTelecomNumberList(props) {\n  _s();\n\n  var emptyTelecomNumber = {\n    \"facilityId\": props.facilityId,\n    \"contactMechId\": \"\",\n    \"contactMechPurposeId\": \"\",\n    \"countryCode\": \"\",\n    \"areaCode\": \"\",\n    \"contactNumber\": \"\",\n    \"askForName\": \"\",\n    \"lastUpdatedStamp\": null\n  };\n  var toast = useRef(null);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; //\n\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      telecomNumbers = _useState2[0],\n      setTelecomNumbers = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedTelecomNumber = _useState4[0],\n      setSelectedTelecomNumber = _useState4[1]; // const [countries, setCountries] = useState([{}]);\n\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      contactMechPurposes = _useState6[0],\n      setContactMechPurposes = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editDialog = _useState8[0],\n      setEditDialog = _useState8[1];\n\n  useEffect(function () {\n    var contactMechService = new ContactMechService();\n\n    var getAllContactMechPurposes = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                contactMechService.getPurposeByTelecomNumbers().then(function (data) {\n                  return setContactMechPurposes(data.contactMechPurposeList);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getAllContactMechPurposes() {\n        return _ref.apply(this, arguments);\n      };\n    }(); // const getAllCountry = async() => {\n    //     geoService.getGeos({\"pageNoLimit\": \"true\"}).then(data => {\n    //         let _countryList =  data.geoList.filter(item => (item.geoTypeEnumId === 'GEOT_COUNTRY'));\n    //         setCountries(_countryList);\n    //     }); \n    // }\n\n\n    getAllContactMechPurposes(); // getAllCountry();\n\n    getAllTelecomNumbers();\n    return function () {\n      setTelecomNumbers([{}]);\n      setContactMechPurposes([{}]);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  var getAllTelecomNumbers = function getAllTelecomNumbers() {\n    var facilityService = new FacilityService();\n    facilityService.getTelecomNumbers(props.facilityId, {\n      \"pageNoLimit\": true\n    }).then(function (data) {\n      var _telecomNumberList = data.telecomNumberList.filter(function (item) {\n        return !item.thruDate;\n      });\n\n      setTelecomNumbers(_telecomNumberList);\n    });\n  };\n\n  var openNew = function openNew() {\n    setSelectedTelecomNumber(emptyTelecomNumber);\n    setEditDialog(true);\n  };\n\n  var openEdit = function openEdit(telecomNumber) {\n    setSelectedTelecomNumber(telecomNumber);\n    setEditDialog(true);\n  };\n\n  var onSaveTelecomNumber = function onSaveTelecomNumber(telecomNumberSaved) {\n    setEditDialog(false);\n\n    if (telecomNumberSaved.replacesContactMechId) {\n      // updated \n      toast.current.show({\n        severity: 'success',\n        summary: 'Successful',\n        detail: t('common:facility.telecomNumber.updated'),\n        life: 5000\n      });\n    } else {\n      toast.current.show({\n        severity: 'success',\n        summary: 'Successful',\n        detail: t('common:facility.telecomNumber.updated'),\n        life: 5000\n      });\n    } // reload table \n\n\n    getAllTelecomNumbers();\n  };\n\n  var confirmDelete = function confirmDelete(telecomNumber) {\n    ConfirmDialog({\n      message: 'Do you want to delete this record?',\n      header: 'Delete Confirmation',\n      icon: 'pi pi-info-circle',\n      acceptClassName: 'p-button-danger',\n      accept: function accept() {\n        return acceptDelete(telecomNumber);\n      }\n    });\n  };\n\n  var acceptDelete = function acceptDelete(telecomNumber) {\n    var facilityService = new FacilityService();\n    facilityService.deleteContactMech(telecomNumber === null || telecomNumber === void 0 ? void 0 : telecomNumber.facilityId, telecomNumber === null || telecomNumber === void 0 ? void 0 : telecomNumber.contactMechId, telecomNumber === null || telecomNumber === void 0 ? void 0 : telecomNumber.contactMechPurposeId).then(function (data) {\n      toast.current.show({\n        severity: 'info',\n        summary: 'Confirmed',\n        detail: t('common:facility.telecomNumber.deleted'),\n        life: 3000\n      });\n      getAllTelecomNumbers(); // reload table \n    });\n  };\n\n  var rightToolbarTemplate = function rightToolbarTemplate() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        label: t('common:facility.telecomNumber.new'),\n        icon: \"pi pi-plus\",\n        className: \"p-button-success p-mr-2\",\n        onClick: openNew\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var dateBodyTemplate = function dateBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: new Date(rowData.fromDate).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var telecomNumberBodyTemplate = function telecomNumberBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"+\", rowData.countryCode, rowData.areaCode, rowData.contactNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, _this);\n  }; // const countryBodyTemplate = (rowData) => {\n  //     return (\n  //         <React.Fragment>\n  //                 <span>\n  //                     {countries?.find(item => item.geoId === rowData.countryGeoId)?.geoName}\n  //                 </span>\n  //         </React.Fragment> \n  //     )\n  // }\n\n\n  var purposeBodyTemplate = function purposeBodyTemplate(rowData) {\n    var _contactMechPurposes$;\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: contactMechPurposes === null || contactMechPurposes === void 0 ? void 0 : (_contactMechPurposes$ = contactMechPurposes.find(function (item) {\n          return item.contactMechPurposeId === rowData.contactMechPurposeId;\n        })) === null || _contactMechPurposes$ === void 0 ? void 0 : _contactMechPurposes$.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var actionBodyTemplate = function actionBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: \"pi pi-pencil\",\n        className: \"p-button-rounded p-button-success p-mr-2\",\n        onClick: function onClick() {\n          return openEdit(rowData);\n        },\n        disabled: rowData.thruDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: function onClick() {\n          return confirmDelete(rowData);\n        },\n        disabled: rowData.thruDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        className: \"p-mb-4\",\n        right: rightToolbarTemplate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(DataTable, {\n        value: telecomNumbers,\n        selectionMode: \"single\",\n        selection: selectedTelecomNumber,\n        onSelectionChange: function onSelectionChange(e) {\n          return setSelectedTelecomNumber(e.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"contactMechPurposeId\",\n          header: t('common:facility.telecomNumber.contactMechPurposeId'),\n          body: purposeBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          header: t('common:facility.telecomNumber.contactNumber'),\n          body: telecomNumberBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"askForName\",\n          header: t('common:facility.telecomNumber.askForName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"fromDate\",\n          header: t('common:facility.telecomNumber.fromDate'),\n          body: dateBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          body: actionBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      visible: editDialog,\n      style: {\n        width: '450px'\n      },\n      header: t('common:facility.telecomNumber.detail'),\n      modal: true,\n      closable: false,\n      children: /*#__PURE__*/_jsxDEV(TelecomNumberEdit, {\n        telecomNumber: selectedTelecomNumber,\n        onCancel: function onCancel() {\n          return setEditDialog(false);\n        },\n        onSave: onSaveTelecomNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FacilityTelecomNumberList, \"zkXFD4nyKQBzx0Mxpx9KPZUvwP0=\", false, function () {\n  return [useTranslation];\n});\n\n_c = FacilityTelecomNumberList;\nFacilityTelecomNumberList.propTypes = {\n  facilityId: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilityTelecomNumberList\");","map":{"version":3,"sources":["D:/eway/src/components/facility/FacilityTelecomNumberList.js"],"names":["React","useState","useEffect","useRef","useTranslation","PropTypes","DataTable","Column","Toast","Button","Toolbar","Dialog","ConfirmDialog","FacilityService","ContactMechService","TelecomNumberEdit","FacilityTelecomNumberList","props","emptyTelecomNumber","facilityId","toast","t","telecomNumbers","setTelecomNumbers","selectedTelecomNumber","setSelectedTelecomNumber","contactMechPurposes","setContactMechPurposes","editDialog","setEditDialog","contactMechService","getAllContactMechPurposes","getPurposeByTelecomNumbers","then","data","contactMechPurposeList","getAllTelecomNumbers","facilityService","getTelecomNumbers","_telecomNumberList","telecomNumberList","filter","item","thruDate","openNew","openEdit","telecomNumber","onSaveTelecomNumber","telecomNumberSaved","replacesContactMechId","current","show","severity","summary","detail","life","confirmDelete","message","header","icon","acceptClassName","accept","acceptDelete","deleteContactMech","contactMechId","contactMechPurposeId","rightToolbarTemplate","dateBodyTemplate","rowData","Date","fromDate","toLocaleString","telecomNumberBodyTemplate","countryCode","areaCode","contactNumber","purposeBodyTemplate","find","description","actionBodyTemplate","e","value","width","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PropTypes from 'prop-types'; \r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { ConfirmDialog } from 'primereact/confirmdialog';\r\n\r\nimport { FacilityService } from '../../service/FacilityService';\r\nimport { ContactMechService } from '../../service/ContactMechService';\r\nimport { TelecomNumberEdit } from './TelecomNumberEdit';\r\n\r\n\r\nexport const FacilityTelecomNumberList = (props) => {\r\n    \r\n    let emptyTelecomNumber = {\r\n        \"facilityId\": props.facilityId,\r\n        \"contactMechId\": \"\",\r\n        \"contactMechPurposeId\": \"\",\r\n        \"countryCode\": \"\",\r\n        \"areaCode\": \"\",\r\n        \"contactNumber\": \"\",\r\n        \"askForName\": \"\",\r\n        \"lastUpdatedStamp\": null\r\n    }\r\n\r\n    const toast = useRef(null);\r\n    const { t } = useTranslation();\r\n    //\r\n    const [telecomNumbers, setTelecomNumbers] = useState(null);\r\n    const [selectedTelecomNumber, setSelectedTelecomNumber] = useState(null);\r\n\r\n    // const [countries, setCountries] = useState([{}]);\r\n    const [contactMechPurposes, setContactMechPurposes] = useState(null);\r\n\r\n    const [editDialog, setEditDialog] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const contactMechService = new ContactMechService();\r\n        const getAllContactMechPurposes = async() =>{\r\n            contactMechService.getPurposeByTelecomNumbers().then(data => setContactMechPurposes(data.contactMechPurposeList));\r\n        }\r\n    \r\n        // const getAllCountry = async() => {\r\n        //     geoService.getGeos({\"pageNoLimit\": \"true\"}).then(data => {\r\n        //         let _countryList =  data.geoList.filter(item => (item.geoTypeEnumId === 'GEOT_COUNTRY'));\r\n        //         setCountries(_countryList);\r\n        //     }); \r\n        // }\r\n\r\n        getAllContactMechPurposes();\r\n        // getAllCountry();\r\n\r\n        getAllTelecomNumbers();\r\n        return ()  => {\r\n            setTelecomNumbers([{}]);\r\n            setContactMechPurposes([{}]);\r\n        }    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n    \r\n    const getAllTelecomNumbers = () =>{\r\n        const facilityService = new FacilityService();\r\n        facilityService.getTelecomNumbers(props.facilityId, {\"pageNoLimit\": true}).then(data => {\r\n            let _telecomNumberList =  data.telecomNumberList.filter(item => !item.thruDate);\r\n            setTelecomNumbers(_telecomNumberList);\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    const openNew = () => {\r\n        setSelectedTelecomNumber(emptyTelecomNumber);\r\n        setEditDialog(true);\r\n    }\r\n\r\n    const openEdit = (telecomNumber) => {\r\n        setSelectedTelecomNumber(telecomNumber);\r\n        setEditDialog(true);\r\n    }\r\n\r\n    const onSaveTelecomNumber = (telecomNumberSaved) => {\r\n        setEditDialog(false);\r\n        if(telecomNumberSaved.replacesContactMechId){ // updated \r\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: t('common:facility.telecomNumber.updated'), life: 5000 });\r\n        }else{\r\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: t('common:facility.telecomNumber.updated'), life: 5000 });\r\n        }\r\n        // reload table \r\n        getAllTelecomNumbers();\r\n\r\n    }\r\n\r\n    const confirmDelete = (telecomNumber) => {\r\n        ConfirmDialog({\r\n            message: 'Do you want to delete this record?',\r\n            header: 'Delete Confirmation',\r\n            icon: 'pi pi-info-circle',\r\n            acceptClassName: 'p-button-danger',\r\n            accept: () => acceptDelete(telecomNumber) \r\n        });\r\n    };\r\n\r\n    const acceptDelete = (telecomNumber) => {\r\n       const facilityService = new FacilityService();\r\n       facilityService.deleteContactMech(telecomNumber?.facilityId\r\n            , telecomNumber?.contactMechId\r\n            , telecomNumber?.contactMechPurposeId).then(data =>{\r\n                toast.current.show({ severity: 'info', summary: 'Confirmed', detail: t('common:facility.telecomNumber.deleted'), life: 3000 });\r\n                getAllTelecomNumbers();  // reload table \r\n            });\r\n       \r\n    }\r\n\r\n    const rightToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label={t('common:facility.telecomNumber.new')} icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const dateBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{new Date(rowData.fromDate).toLocaleString()}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const telecomNumberBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span>+{rowData.countryCode}{rowData.areaCode}{rowData.contactNumber}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    // const countryBodyTemplate = (rowData) => {\r\n    //     return (\r\n    //         <React.Fragment>\r\n    //                 <span>\r\n    //                     {countries?.find(item => item.geoId === rowData.countryGeoId)?.geoName}\r\n    //                 </span>\r\n    //         </React.Fragment> \r\n    //     )\r\n    // }\r\n\r\n    const purposeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                    <span>\r\n                        {contactMechPurposes?.find(item => item.contactMechPurposeId === rowData.contactMechPurposeId)?.description}\r\n                    </span>\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => openEdit(rowData)} disabled={rowData.thruDate} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => confirmDelete(rowData)} disabled={rowData.thruDate}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" right={rightToolbarTemplate}></Toolbar>\r\n                <DataTable value={telecomNumbers}  selectionMode=\"single\" selection={selectedTelecomNumber} onSelectionChange={e => setSelectedTelecomNumber(e.value)}>\r\n                    {/* <Column field=\"contactMechId\" header=\"contactMechId\" ></Column> */}\r\n                    <Column field=\"contactMechPurposeId\" header={t('common:facility.telecomNumber.contactMechPurposeId')} body={purposeBodyTemplate}></Column>\r\n                    {/* <Column field=\"countryCode\" header=\"countryCode\" ></Column>\r\n                    <Column field=\"areaCode\" header=\"areaCode\" ></Column>\r\n                    <Column field=\"contactNumber\" header=\"contactNumber\" ></Column> */}\r\n                    <Column header={t('common:facility.telecomNumber.contactNumber')} body={telecomNumberBodyTemplate}></Column>\r\n                    <Column field=\"askForName\" header={t('common:facility.telecomNumber.askForName')}></Column>\r\n                    <Column field=\"fromDate\" header={t('common:facility.telecomNumber.fromDate')} body={dateBodyTemplate} ></Column>\r\n                    <Column body={actionBodyTemplate} ></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={editDialog} style={{ width: '450px' }} header={t('common:facility.telecomNumber.detail')} modal closable={false}>\r\n                <TelecomNumberEdit telecomNumber={selectedTelecomNumber} onCancel={() => setEditDialog(false)} onSave={onSaveTelecomNumber}/>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nFacilityTelecomNumberList.propTypes  = {\r\n    facilityId: PropTypes.string.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}