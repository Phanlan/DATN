{"ast":null,"code":"import _objectSpread from \"D:/eway/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"D:/eway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/eway/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\eway\\\\src\\\\components\\\\logistics\\\\DeliveryCluster\\\\DeliveryClusterList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\eway\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport Moment from \"react-moment\";\nimport { useTranslation } from \"react-i18next\";\nimport { DeliveryClusterService } from \"../../../service/DeliveryClusterService\";\nimport { Toolbar } from 'primereact/toolbar';\nimport { Button } from 'primereact/button';\nimport { useHistory } from 'react-router-dom';\nimport 'primeflex/primeflex.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var DeliveryClusterList = function DeliveryClusterList() {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totalRecords = _useState4[0],\n      setTotalRecords = _useState4[1];\n\n  var history = useHistory();\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customers = _useState6[0],\n      setCustomers = _useState6[1];\n\n  var _useState7 = useState({\n    first: 0,\n    rows: 10,\n    page: 0,\n    sortField: \"lastUpdatedStamp\",\n    sortOrder: -1,\n    filters: {}\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lazyParams = _useState8[0],\n      setLazyParams = _useState8[1];\n\n  var loadLazyTimeout = null;\n  useEffect(function () {\n    var loadLazyData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var deliveryCluster;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                deliveryCluster = new DeliveryClusterService();\n                setLoading(true);\n\n                if (loadLazyTimeout) {\n                  clearTimeout(loadLazyTimeout);\n                } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n                loadLazyTimeout = setTimeout(function () {\n                  // deliveryClusterId\n                  deliveryCluster.getDeliveryClusters(_objectSpread({}, transformRequest())).then(function (data) {\n                    setTotalRecords(data.totalRecords);\n                    setCustomers(data.deliveryClusterList);\n                    setLoading(false);\n                  });\n                }, 250);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function loadLazyData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    loadLazyData();\n  }, [lazyParams]);\n\n  var onSort = function onSort(event) {\n    var _lazyParams = _objectSpread(_objectSpread({}, lazyParams), event);\n\n    setLazyParams(_lazyParams);\n  };\n\n  var onFilter = function onFilter(event) {\n    var _lazyParams = _objectSpread(_objectSpread({}, lazyParams), event);\n\n    _lazyParams['first'] = 0;\n    setLazyParams(_lazyParams);\n  };\n\n  var onPage = function onPage(event) {\n    setLazyParams(event);\n  };\n\n  var transformRequest = function transformRequest() {\n    var params = {\n      pageIndex: lazyParams.page,\n      pageSize: lazyParams.rows\n    }; // sort object\n\n    if (lazyParams.sortOrder) {\n      params['orderByField'] = (lazyParams.sortOrder === -1 ? \"-\" : \"\") + lazyParams.sortField; // simple for single sort\n    } // filters object\n\n\n    if (lazyParams.filters) {\n      for (var _i = 0, _Object$entries = Object.entries(lazyParams.filters); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        params[key] = value.value;\n      }\n    }\n\n    return params;\n  };\n\n  var idBodyTemplate = function idBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#/logistics/poscluster/detail/\".concat(rowData.deliveryClusterId),\n        style: {\n          color: \"#2196f3\"\n        },\n        children: [\"  \", rowData.deliveryClusterId, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var leftContents = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"p-m-0\",\n      children: [t('common:logistics.deliveryCluster.listCluster'), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, _this);\n\n  var dateBodyTemplate = function dateBodyTemplate(rowData, props) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", rowData[props.field] != null && /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"DD/MM/YYYY HH:mm\",\n          children: rowData[props.field]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 58\n        }, _this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 18\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var rowIndexBodyTemplate = function rowIndexBodyTemplate(rowData, props) {\n    var index = parseInt(props.rowIndex + 1);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, _this);\n  };\n\n  var rightContents = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      label: t('common:homepage.logistics.addNew'),\n      icon: \"pi pi-plus\",\n      onClick: function onClick() {\n        return history.push('/logistics/addposcluster');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 18\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        left: leftContents,\n        right: rightContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 18\n      }, _this), /*#__PURE__*/_jsxDEV(DataTable, {\n        dataKey: \"deliveryClusterId\",\n        value: customers,\n        filterDisplay: \"row\",\n        totalRecords: totalRecords,\n        lazy: true,\n        onFilter: onFilter,\n        onSort: onSort,\n        sortField: lazyParams.sortField,\n        sortOrder: lazyParams.sortOrder,\n        filters: lazyParams.filters,\n        loading: loading,\n        selectionMode: \"single\",\n        onPage: onPage,\n        paginator: true,\n        first: lazyParams.first,\n        rows: lazyParams.rows,\n        rowsPerPageOptions: [10, 25, 50, 100],\n        paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n        currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords}\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          header: \"#\",\n          body: rowIndexBodyTemplate,\n          headerStyle: {\n            width: \"4rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"deliveryClusterId\",\n          header: t('common:logistics.deliveryCluster.id'),\n          sortable: true,\n          filter: true,\n          body: idBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"deliveryClusterCode\",\n          sortable: true,\n          header: t('common:logistics.addDeliveryCluster.clusterCode'),\n          filter: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"deliveryClusterName\",\n          sortable: true,\n          header: t('common:logistics.addDeliveryCluster.clusterName'),\n          filter: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"createdDate\",\n          sortable: true,\n          header: t('common:logistics.deliveryCluster.createdDate'),\n          body: dateBodyTemplate,\n          filter: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"lastUpdatedStamp\",\n          sortable: true,\n          header: t('common:acc.invoiceType.lastUpdatedStamp'),\n          filter: true,\n          body: dateBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 18\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DeliveryClusterList, \"AdgWtTt9gX6YNmdVWtjhxCoB5Xw=\", false, function () {\n  return [useTranslation, useHistory];\n});\n\n_c = DeliveryClusterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryClusterList\");","map":{"version":3,"sources":["D:/eway/src/components/logistics/DeliveryCluster/DeliveryClusterList.js"],"names":["React","useState","useEffect","DataTable","Column","Moment","useTranslation","DeliveryClusterService","Toolbar","Button","useHistory","DeliveryClusterList","t","loading","setLoading","totalRecords","setTotalRecords","history","customers","setCustomers","first","rows","page","sortField","sortOrder","filters","lazyParams","setLazyParams","loadLazyTimeout","loadLazyData","deliveryCluster","clearTimeout","setTimeout","getDeliveryClusters","transformRequest","then","data","deliveryClusterList","onSort","event","_lazyParams","onFilter","onPage","params","pageIndex","pageSize","Object","entries","key","value","idBodyTemplate","rowData","deliveryClusterId","color","leftContents","dateBodyTemplate","props","field","rowIndexBodyTemplate","index","parseInt","rowIndex","rightContents","push","width"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Moment from \"react-moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {DeliveryClusterService} from \"../../../service/DeliveryClusterService\";\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport {Button} from 'primereact/button';\r\nimport {useHistory} from 'react-router-dom';\r\nimport 'primeflex/primeflex.css';\r\n\r\nexport const DeliveryClusterList = () => {\r\n    const { t } = useTranslation();\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const history = useHistory();\r\n    const [customers, setCustomers] = useState(null);\r\n   \r\n    const [lazyParams, setLazyParams] = useState({\r\n        first: 0,\r\n        rows: 10,\r\n        page: 0,\r\n        sortField: \"lastUpdatedStamp\",\r\n        sortOrder: -1,\r\n        filters: {\r\n        }\r\n    });\r\n    \r\n    let loadLazyTimeout = null;\r\n\r\n    useEffect(() => {\r\n\r\n        const loadLazyData = async() => {\r\n            const deliveryCluster = new DeliveryClusterService();\r\n\r\n            setLoading(true);\r\n            if (loadLazyTimeout) {\r\n                clearTimeout(loadLazyTimeout);\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            loadLazyTimeout = setTimeout(() => {\r\n                // deliveryClusterId\r\n                deliveryCluster.getDeliveryClusters({...transformRequest()}).then(data => {\r\n                    setTotalRecords(data.totalRecords);\r\n                    setCustomers(data.deliveryClusterList)                    \r\n                    setLoading(false);\r\n                });\r\n            }, 250);\r\n        }\r\n\r\n        loadLazyData();\r\n    }, [lazyParams]);\r\n\r\n    \r\n    const onSort = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onFilter = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        _lazyParams['first'] = 0;\r\n        setLazyParams(_lazyParams);\r\n    }\r\n    \r\n    const onPage = (event) => {\r\n        setLazyParams(event);\r\n    }\r\n\r\n    const transformRequest = () => {\r\n        let params = {\r\n            pageIndex: lazyParams.page,\r\n            pageSize: lazyParams.rows\r\n        }\r\n        // sort object\r\n        if(lazyParams.sortOrder){\r\n            params['orderByField'] = (lazyParams.sortOrder === -1? \"-\":\"\") + lazyParams.sortField // simple for single sort\r\n        }\r\n        // filters object\r\n        if(lazyParams.filters){\r\n            for (let [key, value] of Object.entries(lazyParams.filters)) {\r\n                params[key] = value.value ; \r\n            }\r\n        }\r\n        return params;\r\n    }\r\n\r\n    const idBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <a href={`#/logistics/poscluster/detail/${rowData.deliveryClusterId}`} style={{ color: \"#2196f3\" }} >  {rowData.deliveryClusterId} </a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const leftContents = (\r\n        <React.Fragment>\r\n\r\n            <h5 className='p-m-0'>{t('common:logistics.deliveryCluster.listCluster')} </h5>\r\n        </React.Fragment>\r\n    );\r\n    const dateBodyTemplate = (rowData, props) => {\r\n        return (\r\n            <React.Fragment>\r\n                 <span> {rowData[props.field] != null && <Moment format=\"DD/MM/YYYY HH:mm\">{rowData[props.field]}</Moment>} </span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const rowIndexBodyTemplate = (rowData, props) => {\r\n        let index = parseInt(props.rowIndex + 1);\r\n        return (\r\n          <React.Fragment>\r\n            <span>{index}</span>\r\n          </React.Fragment>\r\n        );\r\n      };\r\n      \r\n      const rightContents = (\r\n        <React.Fragment>\r\n                \r\n                 <Button label={t('common:homepage.logistics.addNew')} icon=\"pi pi-plus\" onClick={()=>history.push('/logistics/addposcluster')}/>\r\n\r\n        </React.Fragment>\r\n    );\r\n    return (\r\n        <div >\r\n                 <div className=\"card\">\r\n                 <Toolbar left={leftContents} right={rightContents}></Toolbar>\r\n                <DataTable dataKey=\"deliveryClusterId\" value={customers} filterDisplay=\"row\"\r\n                    totalRecords={totalRecords} lazy\r\n                    onFilter={onFilter}\r\n                    onSort={onSort} sortField={lazyParams.sortField} \r\n                    sortOrder={lazyParams.sortOrder}\r\n                    filters={lazyParams.filters} loading={loading} selectionMode=\"single\"\r\n                    onPage={onPage} \r\n                    paginator first={lazyParams.first} rows={lazyParams.rows}\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords}\"         \r\n                >\r\n                    <Column header=\"#\" body={rowIndexBodyTemplate} headerStyle={{ width: \"4rem\" }}/>\r\n                    <Column field=\"deliveryClusterId\" header={t('common:logistics.deliveryCluster.id')} sortable  filter   body={idBodyTemplate} />\r\n                    <Column field=\"deliveryClusterCode\" sortable header={t('common:logistics.addDeliveryCluster.clusterCode')}  filter  />\r\n                    <Column field=\"deliveryClusterName\" sortable header={t('common:logistics.addDeliveryCluster.clusterName')}  filter  />\r\n                    <Column field=\"createdDate\" sortable  header={t('common:logistics.deliveryCluster.createdDate')}  body={dateBodyTemplate} filter  />\r\n                    <Column field=\"lastUpdatedStamp\" sortable header={t('common:acc.invoiceType.lastUpdatedStamp')} filter  body={dateBodyTemplate}  />\r\n\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}