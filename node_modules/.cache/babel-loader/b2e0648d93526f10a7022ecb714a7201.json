{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0110A\\\\src\\\\components\\\\utils\\\\NumberFormat.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var NumberFormat = function NumberFormat(props) {\n  _s();\n\n  var value = props.value,\n      style = props.style;\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var numberFormat = function numberFormat() {\n    return new Intl.NumberFormat(i18n.language === \"vi\" ? \"vi-VN\" : \"en-US\", {}).format(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: style,\n    children: value == null ? '' : numberFormat()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(NumberFormat, \"9F94k15HcPTZUlG5WJ6hySC2iEY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = NumberFormat;\nNumberFormat.propTypes = {\n  value: PropTypes.number\n};\nNumberFormat.defaultProps = {\n  value: 0\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberFormat\");","map":{"version":3,"sources":["D:/ĐA/src/components/utils/NumberFormat.js"],"names":["React","PropTypes","useTranslation","NumberFormat","props","value","style","i18n","numberFormat","Intl","language","format","propTypes","number","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,cAAR,QAA6B,eAA7B;;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAErC,MAAOC,KAAP,GAAuBD,KAAvB,CAAOC,KAAP;AAAA,MAAcC,KAAd,GAAuBF,KAAvB,CAAcE,KAAd;;AAEA,wBAAeJ,cAAc,EAA7B;AAAA,MAAOK,IAAP,mBAAOA,IAAP;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WACnB,IAAIC,IAAI,CAACN,YAAT,CAAsBI,IAAI,CAACG,QAAL,KAAkB,IAAlB,GAAyB,OAAzB,GAAmC,OAAzD,EAAkE,EAAlE,EAAsEC,MAAtE,CAA6EN,KAA7E,CADmB;AAAA,GAArB;;AAGA,sBACI;AAAM,IAAA,KAAK,EAAEC,KAAb;AAAA,cAAqBD,KAAK,IAAI,IAAT,GAAe,EAAf,GAAmBG,YAAY;AAApD;AAAA;AAAA;AAAA;AAAA,WADJ;AAGD,CAZM;;GAAML,Y;UAIID,c;;;KAJJC,Y;AAcbA,YAAY,CAACS,SAAb,GAA0B;AACxBP,EAAAA,KAAK,EAAEJ,SAAS,CAACY;AADO,CAA1B;AAIAV,YAAY,CAACW,YAAb,GAA4B;AAC1BT,EAAAA,KAAK,EAAE;AADmB,CAA5B","sourcesContent":["import React, { } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nexport const NumberFormat = (props) => {\r\n\r\n  const {value, style} = props;\r\n\r\n  const {i18n} = useTranslation();\r\n\r\n  const numberFormat = () =>\r\n    new Intl.NumberFormat(i18n.language === \"vi\" ? \"vi-VN\" : \"en-US\", {}).format(value);\r\n\r\n  return (\r\n      <span style={style}>{value == null? '': numberFormat()}</span>\r\n  );\r\n}\r\n\r\nNumberFormat.propTypes  = {\r\n  value: PropTypes.number\r\n};\r\n\r\nNumberFormat.defaultProps = {\r\n  value: 0\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}