{"ast":null,"code":"import _classCallCheck from \"D:/eway/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/eway/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Const, ServiceHandle } from '../utilities';\nexport var ProductService = /*#__PURE__*/function () {\n  function ProductService() {\n    _classCallCheck(this, ProductService);\n  }\n\n  _createClass(ProductService, [{\n    key: \"getCategoryListRollup\",\n    value: function getCategoryListRollup(params) {\n      return ServiceHandle.get(Const.API.GetCategoryListRollup, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getProductPrice\",\n    value: function getProductPrice(params) {\n      return ServiceHandle.get(Const.API.GetProductPrice, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getProductDimensions\",\n    value: function getProductDimensions(params) {\n      return ServiceHandle.get(Const.API.GetProductDimensions, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getAllProducts\",\n    value: function getAllProducts(params) {\n      return ServiceHandle.get(Const.API.getProducts, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getProductDetail\",\n    value: function getProductDetail(params) {\n      return ServiceHandle.get(Const.API.GetProductDetail, {\n        params: params\n      }).then(function (res) {\n        return res.data.data;\n      });\n    }\n  }, {\n    key: \"getCategoryList\",\n    value: function getCategoryList(params) {\n      return ServiceHandle.get(Const.API.GetCategoryList, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getProductCategoryList\",\n    value: function getProductCategoryList(params) {\n      return ServiceHandle.get(Const.API.GetProductCategoryList, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"createProductAdvance\",\n    value: function createProductAdvance(params) {\n      return ServiceHandle.post(Const.API.CreateProductAdvance, params).then(function (res) {\n        return res.data;\n      });\n    }\n    /**\r\n     * ProductStore detail\r\n     * @param {*} productStore \r\n     * @returns \r\n     */\n\n  }, {\n    key: \"getProductStore\",\n    value: function getProductStore(productStoreId) {\n      return ServiceHandle.get(Const.API.Mantle.Products + \"/stores/\".concat(productStoreId)).then(function (res) {\n        return res.data;\n      });\n    }\n    /**\r\n     * ProductStore list\r\n     * @param {*} params \r\n     * @returns Page{shipmentList, totalRecords}\r\n     */\n\n  }, {\n    key: \"getProductStores\",\n    value: function getProductStores(params) {\n      return ServiceHandle.get(Const.API.Logistic.Products + \"/stores\", {\n        params: params\n      }).then(function (res) {\n        return {\n          productStoreList: res.data,\n          totalRecords: res.headers['x-total-count']\n        };\n      });\n    }\n  }]);\n\n  return ProductService;\n}();","map":{"version":3,"sources":["D:/eway/src/service/ProductService.js"],"names":["Const","ServiceHandle","ProductService","params","get","API","GetCategoryListRollup","then","res","data","GetProductPrice","GetProductDimensions","getProducts","GetProductDetail","GetCategoryList","GetProductCategoryList","post","CreateProductAdvance","productStoreId","Mantle","Products","Logistic","productStoreList","totalRecords","headers"],"mappings":"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","sourcesContent":["import { Const, ServiceHandle } from '../utilities';\r\n\r\nexport class ProductService {\r\n    getCategoryListRollup(params) {\r\n        return ServiceHandle.get(Const.API.GetCategoryListRollup,{params: params}).then((res) => res.data);\r\n    }\r\n\r\n    getProductPrice(params) {\r\n        return ServiceHandle.get(Const.API.GetProductPrice,{params: params}).then((res) => res.data);\r\n    }\r\n\r\n    getProductDimensions(params) {\r\n        return ServiceHandle.get(Const.API.GetProductDimensions,{params: params}).then((res) => res.data);\r\n    }\r\n\r\n    getAllProducts(params) {\r\n        return ServiceHandle.get(Const.API.getProducts,{params: params}).then((res) => res.data);\r\n    }\r\n\r\n    getProductDetail(params) {\r\n        return ServiceHandle.get(Const.API.GetProductDetail,{ params: params})\r\n            .then(res => res.data.data);\r\n    }\r\n\r\n    getCategoryList(params) {\r\n        return ServiceHandle.get(Const.API.GetCategoryList,{params: params}).then((res) => res.data);\r\n    }\r\n\r\n    getProductCategoryList(params) {\r\n      return ServiceHandle.get(Const.API.GetProductCategoryList,{params: params}).then((res) => res.data);\r\n    }\r\n\r\n    createProductAdvance(params){\r\n      return ServiceHandle.post(Const.API.CreateProductAdvance, params).then((res) => res.data);\r\n    }\r\n\r\n    \r\n    /**\r\n     * ProductStore detail\r\n     * @param {*} productStore \r\n     * @returns \r\n     */\r\n    getProductStore(productStoreId) {\r\n        return ServiceHandle.get(Const.API.Mantle.Products + `/stores/${productStoreId}`).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ProductStore list\r\n     * @param {*} params \r\n     * @returns Page{shipmentList, totalRecords}\r\n     */\r\n     getProductStores(params) {\r\n        return ServiceHandle.get(Const.API.Logistic.Products + `/stores`, {params}).then((res) => {\r\n          return {\r\n            productStoreList: res.data,\r\n            totalRecords: res.headers['x-total-count']\r\n          };\r\n        });\r\n      }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}