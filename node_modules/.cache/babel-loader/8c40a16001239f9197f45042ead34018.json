{"ast":null,"code":"import _objectSpread from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport i18n from '../i18n';\nimport { Const, ServiceHandle } from '../utilities';\nexport var UomService = /*#__PURE__*/function () {\n  function UomService() {\n    _classCallCheck(this, UomService);\n  }\n\n  _createClass(UomService, [{\n    key: \"getUom\",\n    value: function getUom(uomId) {\n      return ServiceHandle.get(Const.API.Uoms + \"/\".concat(uomId)).then(function (res) {\n        return res.data;\n      });\n    }\n    /**\r\n     * \r\n     * @param {*} params \r\n     * @returns Page{uomList, totalRecords}\r\n     */\n\n  }, {\n    key: \"getUoms\",\n    value: function getUoms(params) {\n      return ServiceHandle.get(Const.API.Uoms, {\n        params: params\n      }).then(function (res) {\n        var _data = _toConsumableArray(res.data);\n\n        _data.map(function (item) {\n          return item.description = i18n.t(\"uom:\".concat(item.uomTypeEnumId, \".\").concat(item.uomId), item.description);\n        });\n\n        return {\n          uomList: res.data,\n          totalRecords: res.headers['x-total-count']\n        };\n      });\n    } // add more overload for enum types\n\n  }, {\n    key: \"getAreaMeasure\",\n    value: function getAreaMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_AREA_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getCurrencyMeasure\",\n    value: function getCurrencyMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_CURRENCY_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getDataMeasure\",\n    value: function getDataMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_DATA_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getDataspdMeasure\",\n    value: function getDataspdMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_DATASPD_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getDensityMeas\",\n    value: function getDensityMeas(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_DENSITY_MEAS',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getEnergyMeasure\",\n    value: function getEnergyMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_ENERGY_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getLengthMeasure\",\n    value: function getLengthMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_LENGTH_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getOtherMeasure\",\n    value: function getOtherMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_OTHER_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getPowerMeasure\",\n    value: function getPowerMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_POWER_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getPressureMeasure\",\n    value: function getPressureMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_PRESSURE_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getTempMeasure\",\n    value: function getTempMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_TEMP_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getTimeFreqMeasure\",\n    value: function getTimeFreqMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_TIME_FREQ_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getVelocityMeasure\",\n    value: function getVelocityMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_VELOCITY_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getVolumeDryMeas\",\n    value: function getVolumeDryMeas(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_VOLUME_DRY_MEAS',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getVolumeLiqMeas\",\n    value: function getVolumeLiqMeas(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_VOLUME_LIQ_MEAS',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }, {\n    key: \"getWeightMeasure\",\n    value: function getWeightMeasure(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'uomTypeEnumId': 'UT_WEIGHT_MEASURE',\n        'pageNoLimit': true\n      }), params); // merge all\n\n\n      return this.getUoms(_params);\n    }\n  }]);\n\n  return UomService;\n}();","map":{"version":3,"sources":["D:/ƒêA/src/service/UomService.js"],"names":["i18n","Const","ServiceHandle","UomService","uomId","get","API","Uoms","then","res","data","params","_data","map","item","description","t","uomTypeEnumId","uomList","totalRecords","headers","_params","getUoms"],"mappings":"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","sourcesContent":["import i18n from '../i18n';\r\nimport { Const, ServiceHandle } from '../utilities';\r\n\r\nexport class UomService {\r\n    \r\n    getUom(uomId) {\r\n        return ServiceHandle.get(Const.API.Uoms + `/${uomId}`).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} params \r\n     * @returns Page{uomList, totalRecords}\r\n     */\r\n    getUoms(params) {\r\n        return ServiceHandle.get(Const.API.Uoms, { params: params }).then(res => {\r\n            let _data=[...res.data]\r\n            _data.map(item => {\r\n                return (item.description = i18n.t(`uom:${item.uomTypeEnumId}.${item.uomId}`, item.description));\r\n              });\r\n              \r\n            return {\r\n                uomList: res.data,\r\n                totalRecords: res.headers['x-total-count']\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    // add more overload for enum types\r\n    getAreaMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_AREA_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getCurrencyMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_CURRENCY_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getDataMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_DATA_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getDataspdMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_DATASPD_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getDensityMeas(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_DENSITY_MEAS', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getEnergyMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_ENERGY_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getLengthMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_LENGTH_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getOtherMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_OTHER_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getPowerMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_POWER_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getPressureMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_PRESSURE_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getTempMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_TEMP_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getTimeFreqMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_TIME_FREQ_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getVelocityMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_VELOCITY_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getVolumeDryMeas(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_VOLUME_DRY_MEAS', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getVolumeLiqMeas(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_VOLUME_LIQ_MEAS', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    }\r\n    getWeightMeasure(params) {\r\n        let _params = { ...{ 'uomTypeEnumId': 'UT_WEIGHT_MEASURE', 'pageNoLimit': true }, ...params }; // merge all\r\n        return this.getUoms(_params);\r\n    } \r\n}"]},"metadata":{},"sourceType":"module"}