{"ast":null,"code":"import _objectSpread from \"D:/eway/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"D:/eway/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/eway/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Const, ServiceHandle } from '../utilities';\nexport var AssetService = /*#__PURE__*/function () {\n  function AssetService() {\n    _classCallCheck(this, AssetService);\n  }\n\n  _createClass(AssetService, [{\n    key: \"getAsset\",\n    value:\n    /**\r\n     * \r\n     * @param {*} assetId \r\n     * @returns Asset\r\n     */\n    function getAsset(assetId) {\n      return ServiceHandle.get(Const.API.Assets + \"/\".concat(assetId)).then(function (res) {\n        return res.data;\n      });\n    }\n    /**\r\n     * \r\n     * @param {*} assetId \r\n     * @returns AssetDisplayInfo\r\n     *  {\r\n            \"asset\": {},\r\n            \"isFixedAsset\": true,\r\n            \"statusItem\": {},\r\n            \"statusId\": \"string\",\r\n            \"statusHistoryList\": [\r\n                {}\r\n            ],\r\n            \"product\": {},\r\n            \"facility\": {},\r\n            \"facilityLocation\": {},\r\n            \"originFacility\": {},\r\n            \"assetDetailList\": [\r\n                {}\r\n            ],\r\n            \"assetReservationList\": [\r\n                {}\r\n            ]\r\n            }\r\n     */\n\n  }, {\n    key: \"getAssetDisplayInfo\",\n    value: function getAssetDisplayInfo(assetId) {\n      return ServiceHandle.get(Const.API.Assets + \"/\".concat(assetId, \"/displayInfo\")).then(function (res) {\n        return res.data;\n      });\n    }\n    /**\r\n     * \r\n     * @param {*} params \r\n     * @returns Page{assetList, totalRecords}\r\n     */\n\n  }, {\n    key: \"getAssets\",\n    value: function getAssets(params) {\n      return ServiceHandle.get(Const.API.Assets, {\n        params: params\n      }).then(function (res) {\n        return {\n          assetList: res.data,\n          totalRecords: res.headers['x-total-count']\n        };\n      });\n    }\n    /**\r\n     * Inventory\r\n     * @param {*} params \r\n     * @returns \r\n     */\n\n  }, {\n    key: \"getAssetsByAstTpInventory\",\n    value: function getAssetsByAstTpInventory(params) {\n      var _params = _objectSpread(_objectSpread({}, {\n        'assetTypeEnumId': 'AstTpInventory'\n      }), params);\n\n      return this.getAssets(_params);\n    }\n  }]);\n\n  return AssetService;\n}();","map":{"version":3,"sources":["D:/eway/src/service/AssetService.js"],"names":["Const","ServiceHandle","AssetService","assetId","get","API","Assets","then","res","data","params","assetList","totalRecords","headers","_params","getAssets"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,aAAhB,QAAqC,cAArC;AAEA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAEI;AACJ;AACA;AACA;AACA;AACI,sBAASC,OAAT,EAAkB;AACd,aAAOF,aAAa,CAACG,GAAd,CAAkBJ,KAAK,CAACK,GAAN,CAAUC,MAAV,cAAuBH,OAAvB,CAAlB,EAAqDI,IAArD,CAA0D,UAAAC,GAAG,EAAI;AACpE,eAAQA,GAAG,CAACC,IAAZ;AACH,OAFM,CAAP;AAGH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApCA;AAAA;AAAA,WAqCI,6BAAoBN,OAApB,EAA6B;AACzB,aAAOF,aAAa,CAACG,GAAd,CAAkBJ,KAAK,CAACK,GAAN,CAAUC,MAAV,cAAuBH,OAAvB,iBAAlB,EAAiEI,IAAjE,CAAsE,UAAAC,GAAG,EAAI;AAChF,eAAQA,GAAG,CAACC,IAAZ;AACH,OAFM,CAAP;AAGH;AAGD;AACJ;AACA;AACA;AACA;;AAhDA;AAAA;AAAA,WAiDI,mBAAUC,MAAV,EAAkB;AACd,aAAOT,aAAa,CAACG,GAAd,CAAkBJ,KAAK,CAACK,GAAN,CAAUC,MAA5B,EAAoC;AAAEI,QAAAA,MAAM,EAAEA;AAAV,OAApC,EAAwDH,IAAxD,CAA6D,UAAAC,GAAG,EAAI;AACvE,eAAO;AACHG,UAAAA,SAAS,EAAEH,GAAG,CAACC,IADZ;AAEHG,UAAAA,YAAY,EAAEJ,GAAG,CAACK,OAAJ,CAAY,eAAZ;AAFX,SAAP;AAIH,OALM,CAAP;AAMH;AAED;AACJ;AACA;AACA;AACA;;AA9DA;AAAA;AAAA,WA+DI,mCAA0BH,MAA1B,EAAkC;AAC9B,UAAII,OAAO,mCAAQ;AAAE,2BAAmB;AAArB,OAAR,GAAmDJ,MAAnD,CAAX;;AACA,aAAO,KAAKK,SAAL,CAAeD,OAAf,CAAP;AACH;AAlEL;;AAAA;AAAA","sourcesContent":["import { Const, ServiceHandle } from '../utilities';\r\n\r\nexport class AssetService {\r\n\r\n    /**\r\n     * \r\n     * @param {*} assetId \r\n     * @returns Asset\r\n     */\r\n    getAsset(assetId) {\r\n        return ServiceHandle.get(Const.API.Assets + `/${assetId}` ).then(res => {\r\n            return  res.data;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} assetId \r\n     * @returns AssetDisplayInfo\r\n     *  {\r\n            \"asset\": {},\r\n            \"isFixedAsset\": true,\r\n            \"statusItem\": {},\r\n            \"statusId\": \"string\",\r\n            \"statusHistoryList\": [\r\n                {}\r\n            ],\r\n            \"product\": {},\r\n            \"facility\": {},\r\n            \"facilityLocation\": {},\r\n            \"originFacility\": {},\r\n            \"assetDetailList\": [\r\n                {}\r\n            ],\r\n            \"assetReservationList\": [\r\n                {}\r\n            ]\r\n            }\r\n     */\r\n    getAssetDisplayInfo(assetId) {\r\n        return ServiceHandle.get(Const.API.Assets + `/${assetId}/displayInfo` ).then(res => {\r\n            return  res.data;\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {*} params \r\n     * @returns Page{assetList, totalRecords}\r\n     */\r\n    getAssets(params) {\r\n        return ServiceHandle.get(Const.API.Assets, { params: params }).then(res => {\r\n            return {\r\n                assetList: res.data,\r\n                totalRecords: res.headers['x-total-count']\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Inventory\r\n     * @param {*} params \r\n     * @returns \r\n     */\r\n    getAssetsByAstTpInventory(params) {\r\n        let _params = { ...{ 'assetTypeEnumId': 'AstTpInventory'}, ...params };\r\n        return this.getAssets(_params);\r\n    }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}