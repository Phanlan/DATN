{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\\\u0110A\\\\src\\\\pages\\\\SalesDashboard\\\\OrdersLineChart.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\\\u0110A\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'primereact/button';\nimport { LineChart } from '../../components/Report';\nimport { DialogDateStore } from './Dialog';\nimport { SalesReportService } from '../../service/SalesReportService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var OrdersLineChart = function OrdersLineChart(props) {\n  _s();\n\n  var options = props.options,\n      cycles = props.cycles,\n      storeItems = props.storeItems,\n      height = props.height;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      display = _useState4[0],\n      setDisplay = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      store = _useState6[0],\n      setStore = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      option = _useState8[0],\n      setOption = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cycle = _useState10[0],\n      setCycle = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fromDate = _useState12[0],\n      setFromDate = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      toDate = _useState14[0],\n      setToDate = _useState14[1];\n\n  var _useTranslation = useTranslation('common'),\n      _useTranslation2 = _slicedToArray(_useTranslation, 1),\n      t = _useTranslation2[0];\n\n  var init = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var endDate, startDate, salesReportService, params, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setOption({\n              name: t('report.option'),\n              code: 'option'\n            });\n            setCycle({\n              name: t('report.week'),\n              code: 'week'\n            });\n            endDate = new Date();\n            startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n            setToDate(endDate);\n            setFromDate(startDate);\n            salesReportService = new SalesReportService();\n            params = {\n              startDate: startDate.toISOString().slice(0, 10),\n              endDate: endDate.toISOString().slice(0, 10),\n              dateType: 'week'\n            };\n            _context.next = 10;\n            return salesReportService.olapChartLineSynQtyOrder(params);\n\n          case 10:\n            res = _context.sent;\n            setData(res); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  useEffect(function () {\n    init(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var search = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var salesReportService, params, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            salesReportService = new SalesReportService();\n            params = {\n              startDate: fromDate.toISOString().slice(0, 10),\n              endDate: toDate.toISOString().slice(0, 10),\n              dateType: cycle.code,\n              productStoreId: store === null || store === void 0 ? void 0 : store.code\n            };\n            _context2.next = 4;\n            return salesReportService.olapChartLineSynQtyOrder(params);\n\n          case 4:\n            res = _context2.sent;\n            setData(res);\n            setDisplay(false);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [fromDate, toDate, cycle, store]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card height-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: t('report.olapChartLineSynQtyOrder')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: \"pi pi-cog\",\n          onClick: function onClick() {\n            return setDisplay(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(DialogDateStore, {\n      cycles: cycles,\n      storeItems: storeItems,\n      search: search,\n      options: options,\n      display: display,\n      setDisplay: setDisplay,\n      store: store,\n      setStore: setStore,\n      option: option,\n      setOption: setOption,\n      cycle: cycle,\n      setCycle: setCycle,\n      fromDate: fromDate,\n      setFromDate: setFromDate,\n      toDate: toDate,\n      setToDate: setToDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(OrdersLineChart, \"wh5N25DwY06AnZ/adzW6Qof99z8=\", false, function () {\n  return [useTranslation];\n});\n\n_c = OrdersLineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersLineChart\");","map":{"version":3,"sources":["D:/ƒêA/src/pages/SalesDashboard/OrdersLineChart.js"],"names":["React","useCallback","useEffect","useState","useTranslation","Button","LineChart","DialogDateStore","SalesReportService","OrdersLineChart","props","options","cycles","storeItems","height","data","setData","display","setDisplay","store","setStore","option","setOption","cycle","setCycle","fromDate","setFromDate","toDate","setToDate","t","init","name","code","endDate","Date","startDate","getFullYear","getMonth","salesReportService","params","toISOString","slice","dateType","olapChartLineSynQtyOrder","res","search","productStoreId"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Button } from 'primereact/button';\r\n\r\nimport { LineChart } from '../../components/Report';\r\nimport { DialogDateStore } from './Dialog';\r\n\r\nimport { SalesReportService } from '../../service/SalesReportService';\r\n\r\nexport const OrdersLineChart = (props) => {\r\n    const { options, cycles, storeItems, height } = props;\r\n\r\n    const [data, setData ] = useState({});\r\n    const [display, setDisplay] = useState(false);\r\n\r\n    const [store, setStore] = useState({});\r\n    const [option, setOption] = useState();\r\n    const [cycle, setCycle] = useState({});\r\n    const [fromDate, setFromDate] = useState(null);\r\n    const [toDate, setToDate] = useState(null);\r\n\r\n    const [ t ] = useTranslation('common');\r\n\r\n    const init = useCallback(async () => {\r\n\r\n        setOption({ name: t('report.option'), code: 'option' });\r\n        setCycle({ name: t('report.week'), code: 'week' });\r\n\r\n        let endDate = new Date();\r\n        let startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\r\n        setToDate(endDate);\r\n        setFromDate(startDate);\r\n\r\n        const salesReportService = new SalesReportService();\r\n\r\n        let params = {\r\n            startDate: startDate.toISOString().slice(0,10), \r\n            endDate: endDate.toISOString().slice(0,10),\r\n            dateType: 'week'\r\n        }\r\n        let res = await salesReportService.olapChartLineSynQtyOrder(params);\r\n\r\n        setData(res);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const search = useCallback(async () => {\r\n        const salesReportService = new SalesReportService();\r\n\r\n        let params = {\r\n            startDate: fromDate.toISOString().slice(0,10), \r\n            endDate: toDate.toISOString().slice(0,10),\r\n            dateType: cycle.code,\r\n            productStoreId: store?.code\r\n        }\r\n        let res = await salesReportService.olapChartLineSynQtyOrder(params);\r\n\r\n        setData(res);\r\n        setDisplay(false);\r\n    }, [fromDate, toDate, cycle, store]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card height-100\">\r\n                <div className=\"card-header\">\r\n                        <h5>{t('report.olapChartLineSynQtyOrder')}</h5>\r\n                        <Button icon=\"pi pi-cog\" onClick={() => setDisplay(true)} />\r\n                    </div>\r\n                <LineChart data={data} height={height} />\r\n            </div>\r\n\r\n            <DialogDateStore \r\n                cycles={cycles} storeItems={storeItems} \r\n                search={search} options={options} \r\n                display={display} setDisplay={setDisplay} \r\n                store={store} setStore={setStore} \r\n                option={option} setOption={setOption} \r\n                cycle={cycle} setCycle={setCycle} \r\n                fromDate={fromDate} setFromDate={setFromDate} \r\n                toDate={toDate} setToDate={setToDate} \r\n            />\r\n        </>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}