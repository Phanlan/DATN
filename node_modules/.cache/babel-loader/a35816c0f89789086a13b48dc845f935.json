{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0110A\\\\src\\\\components\\\\utils\\\\CurrencyFormat.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CurrencyFormat = function CurrencyFormat(props) {\n  _s();\n\n  var value = props.value,\n      currency = props.currency,\n      style = props.style;\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var numberFormat = function numberFormat() {\n    return new Intl.NumberFormat(i18n.language === \"vi\" ? \"vi-VN\" : \"en-US\", {\n      style: \"currency\",\n      currency: currency\n    }).format(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: style,\n    children: value == null ? '' : numberFormat()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CurrencyFormat, \"9F94k15HcPTZUlG5WJ6hySC2iEY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = CurrencyFormat;\nCurrencyFormat.propTypes = {\n  value: PropTypes.number,\n  currency: PropTypes.string\n};\nCurrencyFormat.defaultProps = {\n  value: 0,\n  currency: 'VND'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyFormat\");","map":{"version":3,"sources":["D:/ĐA/src/components/utils/CurrencyFormat.js"],"names":["React","PropTypes","useTranslation","CurrencyFormat","props","value","currency","style","i18n","numberFormat","Intl","NumberFormat","language","format","propTypes","number","string","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,cAAR,QAA6B,eAA7B;;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA;;AAEvC,MAAOC,KAAP,GAAiCD,KAAjC,CAAOC,KAAP;AAAA,MAAcC,QAAd,GAAiCF,KAAjC,CAAcE,QAAd;AAAA,MAAwBC,KAAxB,GAAiCH,KAAjC,CAAwBG,KAAxB;;AAEA,wBAAeL,cAAc,EAA7B;AAAA,MAAOM,IAAP,mBAAOA,IAAP;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WACnB,IAAIC,IAAI,CAACC,YAAT,CAAsBH,IAAI,CAACI,QAAL,KAAkB,IAAlB,GAAyB,OAAzB,GAAmC,OAAzD,EAAkE;AAChEL,MAAAA,KAAK,EAAE,UADyD;AAEhED,MAAAA,QAAQ,EAAEA;AAFsD,KAAlE,EAGGO,MAHH,CAGUR,KAHV,CADmB;AAAA,GAArB;;AAMA,sBACE;AAAM,IAAA,KAAK,EAAEE,KAAb;AAAA,cAAqBF,KAAK,IAAI,IAAT,GAAe,EAAf,GAAmBI,YAAY;AAApD;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CAfM;;GAAMN,c;UAIID,c;;;KAJJC,c;AAiBbA,cAAc,CAACW,SAAf,GAA4B;AAC1BT,EAAAA,KAAK,EAAEJ,SAAS,CAACc,MADS;AAE1BT,EAAAA,QAAQ,EAAEL,SAAS,CAACe;AAFM,CAA5B;AAKAb,cAAc,CAACc,YAAf,GAA8B;AAC5BZ,EAAAA,KAAK,EAAE,CADqB;AAE5BC,EAAAA,QAAQ,EAAE;AAFkB,CAA9B","sourcesContent":["import React, { } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nexport const CurrencyFormat = (props) => {\r\n\r\n  const {value, currency, style} = props;\r\n\r\n  const {i18n} = useTranslation();\r\n\r\n  const numberFormat = () =>\r\n    new Intl.NumberFormat(i18n.language === \"vi\" ? \"vi-VN\" : \"en-US\", {\r\n      style: \"currency\",\r\n      currency: currency,\r\n    }).format(value);\r\n\r\n  return (\r\n    <span style={style}>{value == null? '': numberFormat()}</span>\r\n  );\r\n}\r\n\r\nCurrencyFormat.propTypes  = {\r\n  value: PropTypes.number,\r\n  currency: PropTypes.string\r\n};\r\n\r\nCurrencyFormat.defaultProps = {\r\n  value: 0,\r\n  currency: 'VND'\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}