{"ast":null,"code":"import _objectSpread from \"D:/eway/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"D:/eway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/eway/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\eway\\\\src\\\\components\\\\logistics\\\\salesorder\\\\SalesOrderPartList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\eway\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dropdown } from 'primereact/dropdown';\nimport Moment from 'react-moment';\nimport { OrderService } from '../../../service/OrderService';\nimport { StatusItemService } from '../../../service/StatusItemService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var SalesOrderPartList = function SalesOrderPartList() {\n  _s();\n\n  var toast = useRef(null);\n  var dt = useRef(null);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // table lazy\n\n\n  var _useState = useState({\n    first: 0,\n    rows: 10,\n    page: 0,\n    filters: {},\n    // presort\n    sortField: \"orderId\",\n    sortOrder: -1\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      lazyParams = _useState2[0],\n      setLazyParams = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      totalRecords = _useState6[0],\n      setTotalRecords = _useState6[1];\n\n  var loadLazyTimeout = null; //\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      orders = _useState8[0],\n      setOrders = _useState8[1];\n\n  var _useState9 = useState([{}]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      orderStatuses = _useState10[0],\n      setOrderStatuses = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedOrderStatus = _useState12[0],\n      setSelectedOrderStatus = _useState12[1];\n\n  useEffect(function () {\n    var statusItemService = new StatusItemService();\n\n    var getOrderStatuses = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                statusItemService.getOrderHeaders().then(function (data) {\n                  setOrderStatuses(data.statusList);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getOrderStatuses() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getOrderStatuses();\n    return function () {\n      setOrderStatuses([{}]);\n    };\n  }, []);\n  useEffect(function () {\n    var orderService = new OrderService();\n\n    var loadLazyData = function loadLazyData() {\n      setLoading(true);\n\n      if (loadLazyTimeout) {\n        clearTimeout(loadLazyTimeout);\n      } //imitate delay of a backend call\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n      loadLazyTimeout = setTimeout(function () {\n        orderService.getOrders(_objectSpread({}, transformRequest())).then(function (data) {\n          setTotalRecords(data.totalRecords);\n          setOrders(data.orderList);\n          setLoading(false);\n        });\n      }, Math.random() * 1000 + 250);\n    };\n\n    loadLazyData();\n  }, [lazyParams]);\n\n  var transformRequest = function transformRequest() {\n    var params = {\n      pageIndex: lazyParams.page,\n      pageSize: lazyParams.rows\n    }; // sort object\n\n    if (lazyParams.sortOrder) {\n      params['orderByField'] = (lazyParams.sortOrder === -1 ? \"-\" : \"\") + lazyParams.sortField; // simple for single sort\n    } // filters object\n\n\n    if (lazyParams.filters) {\n      for (var _i = 0, _Object$entries = Object.entries(lazyParams.filters); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        params[key] = value.value; // equal for all\n      }\n    }\n\n    return params;\n  };\n\n  var onPage = function onPage(event) {\n    var _lazyParams = _objectSpread(_objectSpread({}, lazyParams), event);\n\n    setLazyParams(_lazyParams);\n  };\n\n  var onSort = function onSort(event) {\n    var _lazyParams = _objectSpread(_objectSpread({}, lazyParams), event);\n\n    setLazyParams(_lazyParams);\n  };\n\n  var onFilter = function onFilter(event) {\n    var _lazyParams = _objectSpread(_objectSpread({}, lazyParams), event);\n\n    _lazyParams['first'] = 0;\n    _lazyParams['page'] = 0;\n    setLazyParams(_lazyParams);\n  };\n\n  var onStatusChange = function onStatusChange(e) {\n    dt.current.filter(e.value, 'statusId', 'equals'); // dt.current.filter(e.value, 'statusIds', 'equals');\n\n    setSelectedOrderStatus(e.value);\n  };\n\n  var rowIndexBodyTemplate = function rowIndexBodyTemplate(rowData, props) {\n    var index = parseInt(props.rowIndex + 1);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var partTotalTemplate = function partTotalTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [rowData.partTotal, \" \", rowData.currencyUomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 18\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var dateTimeTemplate = function dateTimeTemplate(rowData, props) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", rowData[props.field] != null && /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"DD/MM/YYYY HH:mm\",\n          children: rowData[props.field]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 58\n        }, _this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 18\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var orderIdBodyTemplate = function orderIdBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#/logistics/order/detail/\".concat(rowData.orderId, \"/\").concat(rowData.orderPartSeqId),\n        style: {\n          color: \"#2196f3\"\n        },\n        children: [rowData.orderId, \" #\", rowData.orderPartSeqId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var leftContents = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"p-m-0\",\n      children: t('common:order.orderList')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, _this);\n\n  var rightContents = /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, _this);\n\n  var statusBodyTemplate = function statusBodyTemplate(rowData) {\n    var _orderStatuses$find;\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: orderStatuses === null || orderStatuses === void 0 ? void 0 : (_orderStatuses$find = orderStatuses.find(function (item) {\n          return item.statusId === rowData.statusId;\n        })) === null || _orderStatuses$find === void 0 ? void 0 : _orderStatuses$find.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var statusFilter = /*#__PURE__*/_jsxDEV(Dropdown, {\n    value: selectedOrderStatus,\n    options: orderStatuses,\n    optionLabel: \"description\",\n    optionValue: \"statusId\",\n    onChange: onStatusChange,\n    className: \"p-column-filter\",\n    showClear: true,\n    filter: true,\n    filterBy: \"description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 26\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datatable-crud\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: toast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        left: leftContents,\n        right: rightContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(DataTable, {\n        ref: dt,\n        value: orders,\n        dataKey: \"orderId\",\n        selectionMode: \"single\",\n        paginator: true,\n        lazy: true,\n        loading: loading,\n        first: lazyParams.first,\n        rows: lazyParams.rows,\n        totalRecords: totalRecords,\n        onPage: onPage,\n        onSort: onSort,\n        sortField: lazyParams.sortField,\n        sortOrder: lazyParams.sortOrder,\n        onFilter: onFilter,\n        filters: lazyParams.filters,\n        rowsPerPageOptions: [10, 25, 50, 100],\n        paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n        currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords}\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          header: \"#\",\n          body: rowIndexBodyTemplate,\n          headerStyle: {\n            width: \"4rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"orderId\",\n          header: t('common:order.orderId'),\n          sortable: true,\n          filter: true,\n          body: orderIdBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"statusId\",\n          header: t('common:order.status'),\n          sortable: true,\n          filter: true,\n          body: statusBodyTemplate,\n          filterElement: statusFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"productStoreId\",\n          header: t('common:order.productStore'),\n          sortable: true,\n          filter: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"customerPartyId\",\n          header: t('common:order.customerParty'),\n          sortable: true,\n          filter: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"entryDate\",\n          header: t('common:order.entryDate'),\n          sortable: true,\n          filter: true,\n          body: dateTimeTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"approvedDate\",\n          header: t('common:order.approvedDate'),\n          sortable: true,\n          filter: true,\n          body: dateTimeTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"shipBeforeDate\",\n          header: t('common:order.shipBeforeDate'),\n          sortable: true,\n          filter: true,\n          body: dateTimeTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"partTotal\",\n          header: t('common:order.partTotal'),\n          sortable: true,\n          filter: true,\n          body: partTotalTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(SalesOrderPartList, \"GOubXHCnnHUgimySKZldLInpqio=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SalesOrderPartList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesOrderPartList\");","map":{"version":3,"sources":["D:/eway/src/components/logistics/salesorder/SalesOrderPartList.js"],"names":["React","useState","useEffect","useRef","useTranslation","DataTable","Column","Toast","Toolbar","Dropdown","Moment","OrderService","StatusItemService","SalesOrderPartList","toast","dt","t","first","rows","page","filters","sortField","sortOrder","lazyParams","setLazyParams","loading","setLoading","totalRecords","setTotalRecords","loadLazyTimeout","orders","setOrders","orderStatuses","setOrderStatuses","selectedOrderStatus","setSelectedOrderStatus","statusItemService","getOrderStatuses","getOrderHeaders","then","data","statusList","orderService","loadLazyData","clearTimeout","setTimeout","getOrders","transformRequest","orderList","Math","random","params","pageIndex","pageSize","Object","entries","key","value","onPage","event","_lazyParams","onSort","onFilter","onStatusChange","e","current","filter","rowIndexBodyTemplate","rowData","props","index","parseInt","rowIndex","partTotalTemplate","partTotal","currencyUomId","dateTimeTemplate","field","orderIdBodyTemplate","orderId","orderPartSeqId","color","leftContents","rightContents","statusBodyTemplate","find","item","statusId","description","statusFilter","width"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport Moment from 'react-moment';\r\n\r\nimport { OrderService } from '../../../service/OrderService';\r\nimport { StatusItemService } from '../../../service/StatusItemService';\r\n\r\nexport const SalesOrderPartList = () => {\r\n\r\n    const toast = useRef(null);\r\n    const dt = useRef(null);\r\n    const { t } = useTranslation();\r\n\r\n    // table lazy\r\n    const [lazyParams, setLazyParams] = useState({\r\n        first: 0,\r\n        rows: 10,\r\n        page: 0,\r\n        filters: {},\r\n        // presort\r\n        sortField: \"orderId\",\r\n        sortOrder: -1\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    let loadLazyTimeout = null;\r\n\r\n    //\r\n    const [orders, setOrders] = useState(null);\r\n    const [orderStatuses, setOrderStatuses] = useState([{}]);\r\n    const [selectedOrderStatus, setSelectedOrderStatus] = useState({});\r\n\r\n    useEffect(() => {\r\n        const statusItemService = new StatusItemService();\r\n\r\n        const getOrderStatuses = async() =>{\r\n            statusItemService.getOrderHeaders().then(data => {setOrderStatuses(data.statusList)});\r\n        }\r\n\r\n        getOrderStatuses();\r\n        return ()  => {\r\n            setOrderStatuses([{}]);\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        const orderService = new OrderService();\r\n\r\n        const loadLazyData = () => {\r\n            setLoading(true);\r\n            if (loadLazyTimeout) {\r\n                clearTimeout(loadLazyTimeout);\r\n            }\r\n            //imitate delay of a backend call\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            loadLazyTimeout = setTimeout(() => {\r\n                orderService.getOrders({...transformRequest()}).then(data => {\r\n                    setTotalRecords(data.totalRecords);\r\n                    setOrders(data.orderList);\r\n                    setLoading(false);\r\n                });\r\n            }, Math.random() * 1000 + 250);\r\n        }     \r\n\r\n        loadLazyData();\r\n    },[lazyParams]);\r\n\r\n    const transformRequest = () => {\r\n        let params = {\r\n            pageIndex: lazyParams.page,\r\n            pageSize: lazyParams.rows\r\n        }\r\n        // sort object\r\n        if(lazyParams.sortOrder){\r\n            params['orderByField'] = (lazyParams.sortOrder === -1? \"-\":\"\") + lazyParams.sortField // simple for single sort\r\n        }\r\n        // filters object\r\n        if(lazyParams.filters){\r\n            for (let [key, value] of Object.entries(lazyParams.filters)) {\r\n                params[key] = value.value ; // equal for all\r\n            }\r\n        }\r\n        return params;\r\n    }\r\n\r\n    const onPage = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onSort = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onFilter = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        _lazyParams['first'] = 0;\r\n        _lazyParams['page'] = 0;\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        dt.current.filter(e.value, 'statusId', 'equals');\r\n        // dt.current.filter(e.value, 'statusIds', 'equals');\r\n        setSelectedOrderStatus(e.value);\r\n    }\r\n     \r\n    const rowIndexBodyTemplate = (rowData, props) => {\r\n        let index = parseInt(props.rowIndex + 1);\r\n        return (\r\n            <React.Fragment>\r\n                <span>{index}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const partTotalTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                 <span>{rowData.partTotal} {rowData.currencyUomId}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const dateTimeTemplate = (rowData, props) => {\r\n        return (\r\n            <React.Fragment>\r\n                 <span> {rowData[props.field] != null && <Moment format=\"DD/MM/YYYY HH:mm\">{rowData[props.field]}</Moment>} </span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const orderIdBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                {/* <span className=\"p-button-link\" onClick={(e) => detailOrder(rowData)} style={{color: '#2196f3'}}> {rowData.orderId} #{rowData.orderPartSeqId}</span> */}\r\n\r\n                <a href={`#/logistics/order/detail/${rowData.orderId}/${rowData.orderPartSeqId}`}\r\n                    style={{ color: \"#2196f3\" }}\r\n                    >\r\n                    {rowData.orderId} #{rowData.orderPartSeqId}\r\n                    </a>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const leftContents = (\r\n        <React.Fragment>\r\n            <h5 className='p-m-0'>{t('common:order.orderList')}</h5>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const rightContents = (\r\n        <React.Fragment>\r\n            {/* <Button label={t('common:facility.new')} icon=\"pi pi-plus\" className=\"p-button p-mr-2\" /> */}\r\n        </React.Fragment>\r\n    );\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                    <span>\r\n                        {orderStatuses?.find(item => item.statusId === rowData.statusId)?.description}\r\n                    </span>\r\n            </React.Fragment> \r\n        )\r\n    }\r\n\r\n    const statusFilter = <Dropdown value={selectedOrderStatus} options={orderStatuses} optionLabel=\"description\" optionValue=\"statusId\" \r\n                                onChange={onStatusChange} className=\"p-column-filter\" showClear filter filterBy=\"description\"/>;\r\n \r\n    return (\r\n        <div className=\"datatable-crud\">\r\n            <div className=\"card\">\r\n                <Toast ref={toast} />\r\n                <Toolbar left={leftContents} right={rightContents} />\r\n                <DataTable ref={dt} value={orders}  dataKey=\"orderId\" \r\n                    selectionMode=\"single\"\r\n                    paginator lazy loading={loading} first={lazyParams.first} rows={lazyParams.rows} totalRecords={totalRecords} \r\n                    onPage={onPage}\r\n                    onSort={onSort} sortField={lazyParams.sortField} sortOrder={lazyParams.sortOrder}\r\n                    onFilter={onFilter} filters={lazyParams.filters} \r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords}\">\r\n                    <Column header=\"#\" body={rowIndexBodyTemplate} headerStyle={{ width: \"4rem\" }}/>\r\n                    <Column field=\"orderId\" header={t('common:order.orderId')} sortable filter body={orderIdBodyTemplate}></Column>\r\n                    <Column field=\"statusId\" header={t('common:order.status')} sortable filter body={statusBodyTemplate} filterElement={statusFilter}></Column>\r\n\r\n                    <Column field=\"productStoreId\" header={t('common:order.productStore')} sortable filter></Column>\r\n                    {/* <Column field=\"vendorPartyId\" header={t('common:order.vendorParty')} sortable filter></Column> */}\r\n                    <Column field=\"customerPartyId\" header={t('common:order.customerParty')} sortable filter></Column>\r\n                    {/* <Column field=\"orderName\" header={t('common:order.orderName')} sortable filter></Column> */}\r\n                    <Column field=\"entryDate\" header={t('common:order.entryDate')} sortable filter body={dateTimeTemplate} ></Column>\r\n                    <Column field=\"approvedDate\" header={t('common:order.approvedDate')} sortable filter body={dateTimeTemplate} ></Column>\r\n                    <Column field=\"shipBeforeDate\" header={t('common:order.shipBeforeDate')} sortable filter body={dateTimeTemplate} ></Column>\r\n                     {/* <Column field=\"enteredByPartyId\" header={t('common:order.enteredByParty')} sortable filter></Column> */}\r\n                    {/* <Column field=\"salesChannelEnumId\" header={t('common:order.salesChannelEnumId')} sortable filter ></Column> */}\r\n                    <Column field=\"partTotal\" header={t('common:order.partTotal')} sortable filter body={partTotalTemplate} ></Column>\r\n                    {/* <Column field=\"carrierPartyId\" header={t('common:order.carrierParty')} sortable filter></Column> */}\r\n                    {/* <Column field=\"shipmentMethodEnumId\" header={t('common:order.shipmentMethodEnum')} sortable filter></Column> */}\r\n                    {/* <Column field=\"facilityId\" header={t('common:order.facility')} sortable filter></Column> */}\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}