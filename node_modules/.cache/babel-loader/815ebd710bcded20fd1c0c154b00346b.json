{"ast":null,"code":"import _slicedToArray from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Const, ServiceHandle } from '../utilities';\nexport var SalesReportService = /*#__PURE__*/function () {\n  function SalesReportService() {\n    _classCallCheck(this, SalesReportService);\n  }\n\n  _createClass(SalesReportService, [{\n    key: \"olapChartTxtForWeek\",\n    value: function olapChartTxtForWeek(params) {\n      return ServiceHandle.get(Const.API.OlapChartTxtForWeek, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"olapChartColTopTorSalesExec\",\n    value: function olapChartColTopTorSalesExec(params) {\n      return ServiceHandle.get(Const.API.OlapChartColTopTorSalesExec, {\n        params: params\n      }).then(function (res) {\n        return {\n          labels: res.data.xAxis,\n          datasets: [{\n            data: res.data.yAxis,\n            backgroundColor: Const.COLOR[0],\n            barThickness: '30'\n          }]\n        };\n      });\n    }\n  }, {\n    key: \"olapChartColTorProdStoreMini\",\n    value: function olapChartColTorProdStoreMini(params) {\n      return ServiceHandle.get(Const.API.OlapChartColTorProdStoreMini, {\n        params: params\n      }).then(function (res) {\n        return {\n          labels: res.data.xAxis,\n          datasets: [{\n            data: res.data.yAxis,\n            backgroundColor: Const.COLOR[0],\n            barThickness: '30'\n          }]\n        };\n      });\n    }\n  }, {\n    key: \"olapChartColTopTorProductMini\",\n    value: function olapChartColTopTorProductMini(params) {\n      return ServiceHandle.get(Const.API.OlapChartColTopTorProductMini, {\n        params: params\n      }).then(function (res) {\n        return {\n          labels: res.data.xAxis,\n          datasets: [{\n            data: res.data.yAxis,\n            backgroundColor: Const.COLOR[0],\n            barThickness: '30'\n          }]\n        };\n      });\n    }\n  }, {\n    key: \"olapChartColTopQtyProductMini\",\n    value: function olapChartColTopQtyProductMini(params) {\n      return ServiceHandle.get(Const.API.OlapChartColTopQtyProductMini, {\n        params: params\n      }).then(function (res) {\n        return {\n          labels: res.data.xAxis,\n          datasets: [{\n            data: res.data.yAxis,\n            backgroundColor: Const.COLOR[0],\n            barThickness: '30'\n          }]\n        };\n      });\n    }\n  }, {\n    key: \"olapChartPieSynTorSales\",\n    value: function olapChartPieSynTorSales(params) {\n      return ServiceHandle.get(Const.API.OlapChartPieSynTorSales, {\n        params: params\n      }).then(function (res) {\n        var backgroundColor = [],\n            hoverBackgroundColor = [];\n        var count = 0;\n        res.data.xAxis.forEach(function () {\n          backgroundColor.push(Const.COLOR[count]);\n          hoverBackgroundColor.push(Const.LIGHTCOLOR[count]);\n          count++;\n        });\n        return {\n          labels: res.data.xAxis,\n          datasets: [{\n            data: res.data.yAxis,\n            backgroundColor: backgroundColor,\n            hoverBackgroundColor: hoverBackgroundColor\n          }]\n        };\n      });\n    }\n  }, {\n    key: \"olapChartLineSynQtyProduct\",\n    value: function olapChartLineSynQtyProduct(params) {\n      return ServiceHandle.get(Const.API.OlapChartLineSynQtyProduct, {\n        params: params\n      }).then(function (res) {\n        var datasets = [];\n        var count = 0;\n\n        for (var _i = 0, _Object$entries = Object.entries(res.data.yAxis); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n              key = _Object$entries$_i[0],\n              value = _Object$entries$_i[1];\n\n          var temp = {\n            label: key,\n            data: value,\n            fill: false,\n            borderColor: Const.COLOR[count++],\n            tension: .4\n          };\n          datasets.push(temp);\n        }\n\n        return {\n          labels: res.data.xAxis,\n          datasets: datasets\n        };\n      });\n    }\n  }, {\n    key: \"olapChartLineSynTorSales\",\n    value: function olapChartLineSynTorSales(params) {\n      return ServiceHandle.get(Const.API.OlapChartLineSynTorSales, {\n        params: params\n      }).then(function (res) {\n        var datasets = [];\n        var count = 0;\n\n        for (var _i2 = 0, _Object$entries2 = Object.entries(res.data.yAxis); _i2 < _Object$entries2.length; _i2++) {\n          var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n              key = _Object$entries2$_i[0],\n              value = _Object$entries2$_i[1];\n\n          var temp = {\n            label: key,\n            data: value,\n            fill: false,\n            borderColor: Const.COLOR[count++],\n            tension: .4\n          };\n          datasets.push(temp);\n        }\n\n        return {\n          labels: res.data.xAxis,\n          datasets: datasets\n        };\n      });\n    }\n  }, {\n    key: \"olapChartLineSynQtyOrder\",\n    value: function olapChartLineSynQtyOrder(params) {\n      return ServiceHandle.get(Const.API.OlapChartLineSynQtyOrder, {\n        params: params\n      }).then(function (res) {\n        var datasets = [];\n        var count = 0;\n\n        for (var _i3 = 0, _Object$entries3 = Object.entries(res.data.yAxis); _i3 < _Object$entries3.length; _i3++) {\n          var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n              key = _Object$entries3$_i[0],\n              value = _Object$entries3$_i[1];\n\n          var temp = {\n            label: key,\n            data: value,\n            fill: false,\n            borderColor: Const.COLOR[count++],\n            tension: .4\n          };\n          datasets.push(temp);\n        }\n\n        return {\n          labels: res.data.xAxis,\n          datasets: datasets\n        };\n      });\n    }\n  }, {\n    key: \"olapChartTxtTorOrderStatus\",\n    value: function olapChartTxtTorOrderStatus(params) {\n      return ServiceHandle.get(Const.API.OlapChartTxtTorOrderStatus, {\n        params: params\n      }).then(function (res) {\n        var data = res.data.data;\n        var values = [];\n\n        for (var _i4 = 0, _Object$entries4 = Object.entries(data); _i4 < _Object$entries4.length; _i4++) {\n          var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n              key = _Object$entries4$_i[0],\n              value = _Object$entries4$_i[1];\n\n          var temp = {\n            statusId: key,\n            orders: value\n          };\n          values.push(temp);\n        }\n\n        return values;\n      });\n    }\n  }]);\n\n  return SalesReportService;\n}();","map":{"version":3,"sources":["D:/ĐA/src/service/SalesReportService.js"],"names":["Const","ServiceHandle","SalesReportService","params","get","API","OlapChartTxtForWeek","then","res","data","OlapChartColTopTorSalesExec","labels","xAxis","datasets","yAxis","backgroundColor","COLOR","barThickness","OlapChartColTorProdStoreMini","OlapChartColTopTorProductMini","OlapChartColTopQtyProductMini","OlapChartPieSynTorSales","hoverBackgroundColor","count","forEach","push","LIGHTCOLOR","OlapChartLineSynQtyProduct","Object","entries","key","value","temp","label","fill","borderColor","tension","OlapChartLineSynTorSales","OlapChartLineSynQtyOrder","OlapChartTxtTorOrderStatus","values","statusId","orders"],"mappings":"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","sourcesContent":["import { Const, ServiceHandle } from '../utilities';\r\n\r\nexport class SalesReportService {\r\n\r\n    olapChartTxtForWeek(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartTxtForWeek, {params: params}).then((res) => res.data);\r\n    }\r\n\r\n    olapChartColTopTorSalesExec(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartColTopTorSalesExec, {params: params}).then((res) => {\r\n            return {\r\n                labels: res.data.xAxis,\r\n                datasets: [\r\n                    {\r\n                        data: res.data.yAxis,\r\n                        backgroundColor: Const.COLOR[0],\r\n                        barThickness: '30'\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    olapChartColTorProdStoreMini(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartColTorProdStoreMini, {params: params}).then((res) => {\r\n            return {\r\n                labels: res.data.xAxis,\r\n                datasets: [\r\n                    {\r\n                        data: res.data.yAxis,\r\n                        backgroundColor: Const.COLOR[0],\r\n                        barThickness: '30'\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    olapChartColTopTorProductMini(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartColTopTorProductMini, {params: params}).then((res) => {\r\n            return {\r\n                labels: res.data.xAxis,\r\n                datasets: [\r\n                    {\r\n                        data: res.data.yAxis,\r\n                        backgroundColor: Const.COLOR[0],\r\n                        barThickness: '30'\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    olapChartColTopQtyProductMini(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartColTopQtyProductMini, {params: params}).then((res) => {\r\n            return {\r\n                labels: res.data.xAxis,\r\n                datasets: [\r\n                    {\r\n                        data: res.data.yAxis,\r\n                        backgroundColor: Const.COLOR[0],\r\n                        barThickness: '30'\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    olapChartPieSynTorSales(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartPieSynTorSales, {params: params}).then((res) => {\r\n            let backgroundColor = [], hoverBackgroundColor = [];\r\n            let count = 0;\r\n            res.data.xAxis.forEach(() => {\r\n                backgroundColor.push(Const.COLOR[count]);\r\n                hoverBackgroundColor.push(Const.LIGHTCOLOR[count]);\r\n                count++;\r\n            });\r\n\r\n            return {\r\n                labels: res.data.xAxis,\r\n                datasets: [\r\n                    {\r\n                        data: res.data.yAxis,\r\n                        backgroundColor: backgroundColor,\r\n                        hoverBackgroundColor: hoverBackgroundColor\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    olapChartLineSynQtyProduct(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartLineSynQtyProduct, {params: params}).then((res) => {\r\n            let datasets = [];\r\n            let count = 0;\r\n            for (const [key, value] of Object.entries(res.data.yAxis)) {\r\n                let temp = {\r\n                    label: key,\r\n                    data: value,\r\n                    fill: false,\r\n                    borderColor: Const.COLOR[count++],\r\n                    tension: .4\r\n                }\r\n                datasets.push(temp);\r\n            }\r\n\r\n            return {\r\n                labels: res.data.xAxis,\r\n                datasets: datasets\r\n            }\r\n        });\r\n    }\r\n\r\n    olapChartLineSynTorSales(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartLineSynTorSales, {params: params}).then((res) => {\r\n            let datasets = [];\r\n            let count = 0;\r\n            for (const [key, value] of Object.entries(res.data.yAxis)) {\r\n                let temp = {\r\n                    label: key,\r\n                    data: value,\r\n                    fill: false,\r\n                    borderColor: Const.COLOR[count++],\r\n                    tension: .4\r\n                }\r\n                datasets.push(temp);\r\n            }\r\n\r\n            return {\r\n                labels: res.data.xAxis,\r\n                datasets: datasets\r\n            }\r\n        });\r\n    }\r\n\r\n    olapChartLineSynQtyOrder(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartLineSynQtyOrder, {params: params}).then((res) => {\r\n            let datasets = [];\r\n            let count = 0;\r\n            for (const [key, value] of Object.entries(res.data.yAxis)) {\r\n                let temp = {\r\n                    label: key,\r\n                    data: value,\r\n                    fill: false,\r\n                    borderColor: Const.COLOR[count++],\r\n                    tension: .4\r\n                }\r\n                datasets.push(temp);\r\n            }\r\n\r\n            return {\r\n                labels: res.data.xAxis,\r\n                datasets: datasets\r\n            }\r\n        });\r\n    }\r\n\r\n    olapChartTxtTorOrderStatus(params) {\r\n        return ServiceHandle.get(Const.API.OlapChartTxtTorOrderStatus, {params: params}).then((res) => {\r\n            let data = res.data.data;\r\n            let values = [];\r\n            for (const [key, value] of Object.entries(data)) {\r\n                let temp = {\r\n                    statusId: key,\r\n                    orders: value\r\n                }\r\n                values.push(temp);\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}