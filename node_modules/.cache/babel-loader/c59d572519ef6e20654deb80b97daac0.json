{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0110A\\\\src\\\\AppWrapper.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, withRouter, useLocation } from 'react-router-dom';\nimport { App } from './App'; // import Login from './pages/Login';\n\nimport Error from './pages/Error';\nimport NotFound from './pages/NotFound';\nimport Unauthorized from './pages/Unauthorized';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AppWrapper = function AppWrapper(props) {\n  _s();\n\n  var location = useLocation(); //   const isLogin = useSelector((state) => state.authReducer.isLogin);\n  //   const apiKey = authService.getApiKeyLocalStorage();\n  //   console.log('isLogin', isLogin, apiKey);\n\n  useEffect(function () {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  switch (props.location.pathname) {\n    // case '/login':\n    //   return <Route path=\"/login\" component={Login} />;\n    case '/error':\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/error\",\n        component: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, _this);\n\n    case '/notfound':\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notfound\",\n        component: NotFound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, _this);\n\n    case '/unauthorized':\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/unauthorized\",\n        component: Unauthorized\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, _this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, _this);\n  } // return(\n  // \t<BrowserRouter>\n  // \t<Switch>\n  // \t  <Route path={RouteBase.Login} exact component={LoginPage} />\n  // \t  <PrivateRoute path={RouteBase.Home} component={SecureRoute} />\n  // \t</Switch>\n  //   </BrowserRouter>\n  // )\n\n};\n\n_s(AppWrapper, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n\n_c = AppWrapper;\nexport default _c2 = withRouter(AppWrapper);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppWrapper\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/ĐA/src/AppWrapper.js"],"names":["React","useEffect","Route","withRouter","useLocation","App","Error","NotFound","Unauthorized","AppWrapper","props","location","window","scrollTo","pathname"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,UAAf,EAA2BC,WAA3B,QAA6C,kBAA7C;AAEA,SAASC,GAAT,QAAoB,OAApB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAC5B,MAAIC,QAAQ,GAAGP,WAAW,EAA1B,CAD4B,CAE9B;AAEA;AACA;;AAEEH,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;;AAIA,UAAQD,KAAK,CAACC,QAAN,CAAeG,QAAvB;AACE;AACA;AACA,SAAK,QAAL;AACE,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAER;AAAhC;AAAA;AAAA;AAAA;AAAA,eAAP;;AACF,SAAK,WAAL;AACE,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,eAAP;;AACF,SAAK,eAAL;AACE,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,eAAZ;AAA4B,QAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,eAAP;;AACF;AACE,0BAAO,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,eAAP;AAVJ,GAX4B,CAuB9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,CA/BD;;GAAMC,U;UACWL,W;;;KADXK,U;AAiCN,qBAAeN,UAAU,CAACM,UAAD,CAAzB","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {Route, withRouter, useLocation} from 'react-router-dom';\r\n\r\nimport { App } from './App';\r\n// import Login from './pages/Login';\r\nimport Error from './pages/Error';\r\nimport NotFound from './pages/NotFound';\r\nimport Unauthorized from './pages/Unauthorized';\r\n\r\nconst AppWrapper = (props) => {\r\n  let location = useLocation();\r\n//   const isLogin = useSelector((state) => state.authReducer.isLogin);\r\n\r\n//   const apiKey = authService.getApiKeyLocalStorage();\r\n//   console.log('isLogin', isLogin, apiKey);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [location]);\r\n\r\n  switch (props.location.pathname) {\r\n    // case '/login':\r\n    //   return <Route path=\"/login\" component={Login} />;\r\n    case '/error':\r\n      return <Route path=\"/error\" component={Error} />;\r\n    case '/notfound':\r\n      return <Route path=\"/notfound\" component={NotFound} />;\r\n    case '/unauthorized':\r\n      return <Route path=\"/unauthorized\" component={Unauthorized} />;\r\n    default:\r\n      return <App />;\r\n  }\r\n// return(\r\n// \t<BrowserRouter>\r\n// \t<Switch>\r\n// \t  <Route path={RouteBase.Login} exact component={LoginPage} />\r\n// \t  <PrivateRoute path={RouteBase.Home} component={SecureRoute} />\r\n// \t</Switch>\r\n//   </BrowserRouter>\r\n// )\r\n};\r\n\r\nexport default withRouter(AppWrapper);\r\n"]},"metadata":{},"sourceType":"module"}