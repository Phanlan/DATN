{"ast":null,"code":"import _objectSpread from \"D:/eway/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"D:/eway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/eway/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\eway\\\\src\\\\pages\\\\PersonalCustomer\\\\Detail\\\\GeneralInformation.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\eway\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useEffect, useState, useCallback, useMemo, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from \"react-router-dom\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { Button } from 'primereact/button';\nimport { CustomerService } from '../../../service/CustomerService';\nimport { GeoService } from '../../../service/GeoService';\nimport { TextWithLabel } from '../../../components/LabelWithText';\nimport { ToastContext } from '../../../App';\nimport { Const } from '../../../utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var GeneralInformation = function GeneralInformation(props) {\n  _s();\n\n  var toast = useContext(ToastContext);\n\n  var _useTranslation = useTranslation('common'),\n      t = _useTranslation.t;\n\n  var partyId = props.partyId;\n  var customerService = new CustomerService();\n  var geoService = new GeoService();\n  var history = useHistory();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      center = _useState2[0],\n      setCenter = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      person = _useState4[0],\n      setPerson = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isOpen = _useState6[0],\n      setIsOpen = _useState6[1];\n\n  useEffect(function () {\n    init(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var init = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var params, data, temp, geo, _geo, _geo2, _geo3;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = {\n              partyId: partyId\n            };\n            _context.next = 3;\n            return customerService.getPersonalCustomerDetail(params);\n\n          case 3:\n            data = _context.sent;\n\n            if (!data.person) {\n              _context.next = 29;\n              break;\n            }\n\n            temp = data.person;\n\n            if (temp.latitude && temp.longitude) {\n              setCenter({\n                lat: temp.latitude,\n                lng: temp.longitude\n              });\n            }\n\n            if (!temp.countryGeoId) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 10;\n            return geoService.getGeo(temp.countryGeoId);\n\n          case 10:\n            geo = _context.sent;\n            temp.countryName = geo.geoName;\n\n          case 12:\n            if (!temp.stateProvinceGeoId) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 15;\n            return geoService.getGeo(temp.stateProvinceGeoId);\n\n          case 15:\n            _geo = _context.sent;\n            temp.stateProvinceName = _geo.geoName;\n\n          case 17:\n            if (!temp.countyGeoId) {\n              _context.next = 22;\n              break;\n            }\n\n            _context.next = 20;\n            return geoService.getGeo(temp.countyGeoId);\n\n          case 20:\n            _geo2 = _context.sent;\n            temp.countyName = _geo2.geoName;\n\n          case 22:\n            if (!temp.wardId) {\n              _context.next = 27;\n              break;\n            }\n\n            _context.next = 25;\n            return geoService.getGeo(temp.wardId);\n\n          case 25:\n            _geo3 = _context.sent;\n            temp.wardName = _geo3.geoName;\n\n          case 27:\n            temp.fullAddress = temp.postalAddress + ', ' + temp.wardName + ', ' + temp.countyName + ', ' + temp.stateProvinceName + ', ' + temp.countryName;\n            setPerson(temp);\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  var changeStatusParty = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(disabled) {\n      var params, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              params = {\n                partyId: partyId,\n                disabled: disabled\n              };\n              _context2.next = 4;\n              return customerService.changeStatusParty(params);\n\n            case 4:\n              data = _context2.sent;\n              setPerson(_objectSpread(_objectSpread({}, person), {}, {\n                disabled: data.disabled\n              }));\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              toast.current.show({\n                severity: 'error',\n                summary: t('errorMessage'),\n                detail: _context2.t0.response.data.errors,\n                life: 5000\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [t, toast, person, partyId]);\n  var statusTag = useMemo(function () {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(person === null || person === void 0 ? void 0 : person.disabled) === 'Y' && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"p-button-danger p-mr-2 p-mb-2\",\n        onClick: function onClick(e) {\n          return changeStatusParty('N');\n        },\n        label: t('logistics.deliveryCluster.inactiveStatus')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 46\n      }, _this), (person === null || person === void 0 ? void 0 : person.disabled) !== 'Y' && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"p-button-success p-mr-2 p-mb-2\",\n        onClick: function onClick(e) {\n          return changeStatusParty('Y');\n        },\n        label: t('logistics.deliveryCluster.activeStatus')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 46\n      }, _this)]\n    }, void 0, true);\n  }, [person, t, changeStatusParty]);\n  var statusLabel = useMemo(function () {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [t('order.status'), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"(\", t('clickToChange'), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 40\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }, _this)]\n    }, void 0, true);\n  }, [t]);\n  var edit = useCallback(function () {\n    history.push(\"/sales/personalcustomer/edit/\" + partyId); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var handleToggle = useCallback(function () {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12 p-md-11\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: t('product.generalInformation')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12 p-md-1\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: t('edit'),\n          className: \"p-button-primary p-mr-2 p-mb-2\",\n          onClick: function onClick(e) {\n            return edit(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12 p-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.id'),\n          text: person === null || person === void 0 ? void 0 : person.partyId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.name'),\n          text: person === null || person === void 0 ? void 0 : person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.gender'),\n          text: person === null || person === void 0 ? void 0 : person.gender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.telecomNumber'),\n          text: person === null || person === void 0 ? void 0 : person.telecomNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.emailAddress'),\n          text: person === null || person === void 0 ? void 0 : person.emailAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.webAddress'),\n          text: person === null || person === void 0 ? void 0 : person.webAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-col-12 p-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: statusLabel,\n          text: statusTag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.countryGeoId'),\n          text: person === null || person === void 0 ? void 0 : person.countryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.stateProvinceGeoId'),\n          text: person === null || person === void 0 ? void 0 : person.stateProvinceName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.districtId'),\n          text: person === null || person === void 0 ? void 0 : person.countyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.wardId'),\n          text: person === null || person === void 0 ? void 0 : person.wardName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextWithLabel, {\n          label: t('customer.postalAddress'),\n          text: person === null || person === void 0 ? void 0 : person.postalAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid p-mt-2\",\n      children: /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: Const.GGMAPS.key,\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: {\n            width: '100%',\n            height: '400px'\n          },\n          center: center ? center : {\n            lat: 20.9934632,\n            lng: 105.7865466\n          },\n          zoom: 15,\n          children: center && /*#__PURE__*/_jsxDEV(Marker, {\n            position: center,\n            onClick: handleToggle,\n            children: isOpen && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: center,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: \"white\",\n                  border: \"1px solid #ccc\",\n                  padding: 15\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: person.fullAddress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 35\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(GeneralInformation, \"0R8W0ZXvhSFWSRsnhnAu5Uw3KkA=\", false, function () {\n  return [useTranslation, useHistory];\n});\n\n_c = GeneralInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralInformation\");","map":{"version":3,"sources":["D:/eway/src/pages/PersonalCustomer/Detail/GeneralInformation.js"],"names":["React","useEffect","useState","useCallback","useMemo","useContext","useTranslation","useHistory","GoogleMap","LoadScript","Marker","InfoWindow","Button","CustomerService","GeoService","TextWithLabel","ToastContext","Const","GeneralInformation","props","toast","t","partyId","customerService","geoService","history","center","setCenter","person","setPerson","isOpen","setIsOpen","init","params","getPersonalCustomerDetail","data","temp","latitude","longitude","lat","lng","countryGeoId","getGeo","geo","countryName","geoName","stateProvinceGeoId","stateProvinceName","countyGeoId","countyName","wardId","wardName","fullAddress","postalAddress","changeStatusParty","disabled","current","show","severity","summary","detail","response","errors","life","statusTag","e","statusLabel","edit","push","handleToggle","name","gender","telecomNumber","emailAddress","webAddress","GGMAPS","key","width","height","background","border","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useMemo, useContext } from 'react';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\n\r\nimport { Button } from 'primereact/button';\r\n\r\nimport { CustomerService } from '../../../service/CustomerService';\r\nimport { GeoService } from '../../../service/GeoService';\r\n\r\nimport { TextWithLabel } from '../../../components/LabelWithText';\r\n\r\nimport { ToastContext } from '../../../App';\r\n\r\nimport { Const } from '../../../utilities';\r\n\r\nexport const GeneralInformation = (props) => {\r\n    const toast = useContext(ToastContext);\r\n    const { t } = useTranslation('common');\r\n    const { partyId } = props; \r\n    const customerService = new CustomerService();\r\n    const geoService = new GeoService();\r\n\r\n    const history = useHistory();\r\n\r\n    const [ center, setCenter ] = useState(null);\r\n    const [ person, setPerson ] = useState(null);\r\n    const [ isOpen, setIsOpen ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        init();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const init = useCallback(async () => {\r\n        let params = {\r\n            partyId: partyId\r\n        }\r\n        let data = await customerService.getPersonalCustomerDetail(params);\r\n        if (data.person) {\r\n            let temp = data.person;\r\n\r\n            if (temp.latitude && temp.longitude) {\r\n                setCenter({lat: temp.latitude, lng: temp.longitude});\r\n            }\r\n\r\n            if (temp.countryGeoId) {\r\n                let geo = await geoService.getGeo(temp.countryGeoId);\r\n                temp.countryName = geo.geoName;\r\n            }\r\n\r\n            if (temp.stateProvinceGeoId) {\r\n                let geo = await geoService.getGeo(temp.stateProvinceGeoId);\r\n                temp.stateProvinceName = geo.geoName;\r\n            }\r\n\r\n            if (temp.countyGeoId) {\r\n                let geo = await geoService.getGeo(temp.countyGeoId);\r\n                temp.countyName = geo.geoName;\r\n            }\r\n\r\n            if (temp.wardId) {\r\n                let geo = await geoService.getGeo(temp.wardId);\r\n                temp.wardName = geo.geoName;\r\n            }\r\n\r\n            temp.fullAddress = temp.postalAddress + ', ' + temp.wardName + ', ' + temp.countyName + ', '\r\n                            + temp.stateProvinceName + ', ' + temp.countryName\r\n\r\n            setPerson(temp);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const changeStatusParty  = useCallback(async (disabled) => {\r\n        try {\r\n            let params = {\r\n                partyId: partyId,\r\n                disabled: disabled\r\n            }\r\n    \r\n            let data = await customerService.changeStatusParty(params);\r\n            setPerson({...person, disabled: data.disabled});\r\n        } catch (error) {\r\n            toast.current.show({ severity: 'error', summary: t('errorMessage'), detail: error.response.data.errors, life: 5000 });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [t, toast, person, partyId]);\r\n\r\n    const statusTag = useMemo(() => {\r\n        return (\r\n            <>\r\n                {person?.disabled === 'Y' && <Button className=\"p-button-danger p-mr-2 p-mb-2\" onClick={(e) => changeStatusParty('N')} label={t('logistics.deliveryCluster.inactiveStatus')}></Button>}\r\n                {person?.disabled !== 'Y' && <Button className=\"p-button-success p-mr-2 p-mb-2\" onClick={(e) => changeStatusParty('Y')} label={t('logistics.deliveryCluster.activeStatus')}></Button>}\r\n            </>\r\n        );\r\n    }, [person, t, changeStatusParty]);\r\n\r\n    const statusLabel = useMemo(() => {\r\n        return (\r\n            <>\r\n                {t('order.status')} <i><span>({t('clickToChange')})</span></i>\r\n            </>\r\n        );\r\n    }, [t]);\r\n\r\n    const edit = useCallback(() => {\r\n        history.push(\"/sales/personalcustomer/edit/\" + partyId);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleToggle = useCallback(() => {\r\n        setIsOpen(!isOpen);\r\n    }, [isOpen]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"p-grid p-mt-2\">\r\n                <div className=\"p-col-12 p-md-11\">\r\n                    <h5>{t('product.generalInformation')}</h5>\r\n                </div>\r\n                <div className=\"p-col-12 p-md-1\">\r\n                    <Button label={t('edit')} className=\"p-button-primary p-mr-2 p-mb-2\" onClick={(e) => edit(e)} />\r\n                </div>\r\n            </div>\r\n            <div className=\"p-grid p-mt-2\">\r\n                <div className=\"p-col-12 p-md-6\">\r\n                    <TextWithLabel label={t('customer.id')} text={person?.partyId} />\r\n                    <TextWithLabel label={t('customer.name')} text={person?.name} />\r\n                    <TextWithLabel label={t('customer.gender')} text={person?.gender} />\r\n                    <TextWithLabel label={t('customer.telecomNumber')} text={person?.telecomNumber} />\r\n                    <TextWithLabel label={t('customer.emailAddress')} text={person?.emailAddress} />\r\n                    <TextWithLabel label={t('customer.webAddress')} text={person?.webAddress} />\r\n                </div>\r\n                <div className=\"p-col-12 p-md-6\">\r\n                    <TextWithLabel label={statusLabel} text={statusTag} />\r\n                    <TextWithLabel label={t('customer.countryGeoId')} text={person?.countryName} />\r\n                    <TextWithLabel label={t('customer.stateProvinceGeoId')} text={person?.stateProvinceName} />\r\n                    <TextWithLabel label={t('customer.districtId')} text={person?.countyName} />\r\n                    <TextWithLabel label={t('customer.wardId')} text={person?.wardName} />\r\n                    <TextWithLabel label={t('customer.postalAddress')} text={person?.postalAddress} />\r\n                </div>\r\n            </div>\r\n            <div className=\"p-grid p-mt-2\">\r\n                <LoadScript googleMapsApiKey={Const.GGMAPS.key}> \r\n                    <GoogleMap\r\n                        mapContainerStyle={{width: '100%', height: '400px'}}\r\n                        center={center ? center : {lat: 20.9934632, lng: 105.7865466}}\r\n                        zoom={15}\r\n                    >\r\n                        {center &&<Marker position={center} onClick={handleToggle}>\r\n                            {\r\n                                isOpen && \r\n                                <InfoWindow position={center}>\r\n                                    <div style={{background: `white`, border: `1px solid #ccc`, padding: 15}}>\r\n                                        <span>{person.fullAddress}</span>\r\n                                    </div>\r\n                                </InfoWindow>\r\n                            }\r\n                        </Marker>}\r\n                        \r\n                    </GoogleMap>\r\n                </LoadScript>\r\n            </div>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}