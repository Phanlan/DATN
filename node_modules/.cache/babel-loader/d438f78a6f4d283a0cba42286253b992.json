{"ast":null,"code":"import _asyncToGenerator from \"D:/eway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/eway/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\eway\\\\src\\\\pages\\\\Salesman\\\\Create\\\\ContactInformation.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\eway\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { InputTextController } from '../../../components/PromotionComponent/InputTextController';\nimport { DropdownController } from '../../../components/PromotionComponent/DropdownController';\nimport { GeoService } from '../../../service/GeoService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ContactInformation = function ContactInformation(props) {\n  _s();\n\n  var control = props.control,\n      errors = props.errors;\n\n  var _useTranslation = useTranslation('common'),\n      _useTranslation2 = _slicedToArray(_useTranslation, 1),\n      t = _useTranslation2[0];\n\n  var geoService = new GeoService();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rCountries = _useState2[0],\n      setRCountries = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rStateProvinces = _useState4[0],\n      setRStateProvinces = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rDistricts = _useState6[0],\n      setRDistricts = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rWards = _useState8[0],\n      setRWards = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cCountries = _useState10[0],\n      setCCountries = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cStateProvinces = _useState12[0],\n      setCStateProvinces = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cDistricts = _useState14[0],\n      setCDistricts = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cWards = _useState16[0],\n      setCWards = _useState16[1];\n\n  var getFormErrorMessage = function getFormErrorMessage(name) {\n    var _errors$name;\n\n    return errors[name] && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 32\n    }, _this);\n  };\n\n  useEffect(function () {\n    init(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var init = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data, countries;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return geoService.getCountries([]);\n\n          case 2:\n            data = _context.sent;\n            countries = data.geoList.map(function (elm) {\n              return {\n                name: elm.geoName,\n                code: elm.geoId\n              };\n            });\n            setRCountries(countries);\n            setCCountries(countries); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  var changeRCountry = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return geoService.getGeoRegionList(e.value.code, []);\n\n            case 2:\n              data = _context2.sent;\n              setRStateProvinces(data.map(function (elm) {\n                return {\n                  name: elm.geoName,\n                  code: elm.geoId\n                };\n              })); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  var changeRStateProvinces = useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return geoService.getGeoRegionList(e.value.code, []);\n\n            case 2:\n              data = _context3.sent;\n              setRDistricts(data.map(function (elm) {\n                return {\n                  name: elm.geoName,\n                  code: elm.geoId\n                };\n              })); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), []);\n  var changeRDistrict = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return geoService.getGeoRegionList(e.value.code, []);\n\n            case 2:\n              data = _context4.sent;\n              setRWards(data.map(function (elm) {\n                return {\n                  name: elm.geoName,\n                  code: elm.geoId\n                };\n              })); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), []);\n  var changeCCountry = useCallback( /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(e) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return geoService.getGeoRegionList(e.value.code, []);\n\n            case 2:\n              data = _context5.sent;\n              setCStateProvinces(data.map(function (elm) {\n                return {\n                  name: elm.geoName,\n                  code: elm.geoId\n                };\n              })); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), []);\n  var changeCStateProvinces = useCallback( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return geoService.getGeoRegionList(e.value.code, []);\n\n            case 2:\n              data = _context6.sent;\n              setCDistricts(data.map(function (elm) {\n                return {\n                  name: elm.geoName,\n                  code: elm.geoId\n                };\n              })); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), []);\n  var changeCDistrict = useCallback( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(e) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return geoService.getGeoRegionList(e.value.code, []);\n\n            case 2:\n              data = _context7.sent;\n              setCWards(data.map(function (elm) {\n                return {\n                  name: elm.geoName,\n                  code: elm.geoId\n                };\n              })); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-field p-grid\",\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: t('permanentResidence')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"residentCountryGeoId\",\n              label: t('customer.countryGeoId'),\n              callback: changeRCountry,\n              options: rCountries,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"residentStateProvinceGeoId\",\n              label: t('customer.stateProvinceGeoId'),\n              callback: changeRStateProvinces,\n              options: rStateProvinces,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"residentDistrictId\",\n              label: t('customer.districtId'),\n              callback: changeRDistrict,\n              options: rDistricts,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"residentWardId\",\n              label: t('customer.wardId'),\n              options: rWards,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"residentTarAddress\",\n              label: t('customer.tarAddress'),\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"telecomNumber\",\n              label: t('customer.telecomNumber'),\n              checkErr: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-field p-grid\",\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: t('currentResidence')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"currentCountryGeoId\",\n              label: t('customer.countryGeoId'),\n              callback: changeCCountry,\n              options: cCountries,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"currentStateProvinceGeoId\",\n              label: t('customer.stateProvinceGeoId'),\n              callback: changeCStateProvinces,\n              options: cStateProvinces,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"currentDistrictId\",\n              label: t('customer.districtId'),\n              callback: changeCDistrict,\n              options: cDistricts,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"currentWardId\",\n              label: t('customer.wardId'),\n              options: cWards,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"currentTarAddress\",\n              label: t('customer.tarAddress'),\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"emailAddress\",\n              label: t('customer.emailAddress'),\n              checkErr: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ContactInformation, \"f8pKk8M4vWKYdhTvhZO6U2g3Svo=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ContactInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactInformation\");","map":{"version":3,"sources":["D:/eway/src/pages/Salesman/Create/ContactInformation.js"],"names":["React","useState","useEffect","useCallback","useTranslation","InputTextController","DropdownController","GeoService","ContactInformation","props","control","errors","t","geoService","rCountries","setRCountries","rStateProvinces","setRStateProvinces","rDistricts","setRDistricts","rWards","setRWards","cCountries","setCCountries","cStateProvinces","setCStateProvinces","cDistricts","setCDistricts","cWards","setCWards","getFormErrorMessage","name","message","init","getCountries","data","countries","geoList","map","elm","geoName","code","geoId","changeRCountry","e","getGeoRegionList","value","changeRStateProvinces","changeRDistrict","changeCCountry","changeCStateProvinces","changeCDistrict"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { InputTextController } from '../../../components/PromotionComponent/InputTextController';\r\nimport { DropdownController } from '../../../components/PromotionComponent/DropdownController';\r\n\r\nimport { GeoService } from '../../../service/GeoService';\r\n\r\nexport const ContactInformation = (props) => {\r\n\r\n    const { control, errors } = props;\r\n    const [t] = useTranslation('common');\r\n\r\n    const geoService = new GeoService();\r\n\r\n    const [ rCountries, setRCountries ] = useState([]);\r\n    const [ rStateProvinces, setRStateProvinces ] = useState([]); \r\n    const [ rDistricts, setRDistricts ] = useState([]); \r\n    const [ rWards, setRWards ] = useState([]); \r\n\r\n    const [ cCountries, setCCountries ] = useState([]);\r\n    const [ cStateProvinces, setCStateProvinces ] = useState([]); \r\n    const [ cDistricts, setCDistricts ] = useState([]); \r\n    const [ cWards, setCWards ] = useState([]); \r\n\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name]?.message}</small>\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const init = useCallback(async () => {\r\n        let data = await geoService.getCountries([]);\r\n\r\n        let countries = data.geoList.map((elm) => {\r\n            return {\r\n                name: elm.geoName,\r\n                code: elm.geoId\r\n            }\r\n        });\r\n        setRCountries(countries);\r\n        setCCountries(countries);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const changeRCountry = useCallback(async (e) => {\r\n        let data = await geoService.getGeoRegionList(e.value.code, []);\r\n        setRStateProvinces(data.map((elm) => {\r\n            return {\r\n                name: elm.geoName,\r\n                code: elm.geoId\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const changeRStateProvinces = useCallback(async (e) => {\r\n        let data = await geoService.getGeoRegionList(e.value.code, []);\r\n        setRDistricts(data.map((elm) => {\r\n            return {\r\n                name: elm.geoName,\r\n                code: elm.geoId\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const changeRDistrict = useCallback(async (e) => {\r\n        let data = await geoService.getGeoRegionList(e.value.code, []);\r\n        setRWards(data.map((elm) => {\r\n            return {\r\n                name: elm.geoName,\r\n                code: elm.geoId\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const changeCCountry = useCallback(async (e) => {\r\n        let data = await geoService.getGeoRegionList(e.value.code, []);\r\n        setCStateProvinces(data.map((elm) => {\r\n            return {\r\n                name: elm.geoName,\r\n                code: elm.geoId\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const changeCStateProvinces = useCallback(async (e) => {\r\n        let data = await geoService.getGeoRegionList(e.value.code, []);\r\n        setCDistricts(data.map((elm) => {\r\n            return {\r\n                name: elm.geoName,\r\n                code: elm.geoId\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const changeCDistrict = useCallback(async (e) => {\r\n        let data = await geoService.getGeoRegionList(e.value.code, []);\r\n        setCWards(data.map((elm) => {\r\n            return {\r\n                name: elm.geoName,\r\n                code: elm.geoId\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"p-grid\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card p-fluid\">\r\n                    <div className=\"p-grid\">\r\n                        <div className=\"p-col-12 p-md-6\">\r\n                            <div className=\"p-field p-grid\">\r\n                                <h6>{t('permanentResidence')}</h6>\r\n                            </div>\r\n                        \r\n                            <DropdownController id='residentCountryGeoId' label={t('customer.countryGeoId')} callback={changeRCountry} \r\n                                options={rCountries} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <DropdownController id='residentStateProvinceGeoId' label={t('customer.stateProvinceGeoId')} callback={changeRStateProvinces} \r\n                                options={rStateProvinces} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <DropdownController id='residentDistrictId' label={t('customer.districtId')} callback={changeRDistrict} \r\n                                options={rDistricts} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <DropdownController id='residentWardId' label={t('customer.wardId')} \r\n                                options={rWards} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <InputTextController id='residentTarAddress' label={t('customer.tarAddress')}\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <InputTextController id='telecomNumber' label={t('customer.telecomNumber')} checkErr\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        </div>\r\n\r\n                        <div className=\"p-col-12 p-md-6\">\r\n                            <div className=\"p-field p-grid\">\r\n                                <h6>{t('currentResidence')}</h6>\r\n                            </div>\r\n                            <DropdownController id='currentCountryGeoId' label={t('customer.countryGeoId')} callback={changeCCountry} \r\n                                options={cCountries} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <DropdownController id='currentStateProvinceGeoId' label={t('customer.stateProvinceGeoId')} callback={changeCStateProvinces} \r\n                                options={cStateProvinces} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <DropdownController id='currentDistrictId' label={t('customer.districtId')} callback={changeCDistrict} \r\n                                options={cDistricts} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <DropdownController id='currentWardId' label={t('customer.wardId')} \r\n                                options={cWards} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <InputTextController id='currentTarAddress' label={t('customer.tarAddress')}\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                            \r\n                            <InputTextController id='emailAddress' label={t('customer.emailAddress')} checkErr\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}