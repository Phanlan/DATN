{"ast":null,"code":"import _classCallCheck from \"D:/eway/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/eway/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Const, ServiceHandle } from '../utilities';\nexport var OrderService = /*#__PURE__*/function () {\n  function OrderService() {\n    _classCallCheck(this, OrderService);\n  }\n\n  _createClass(OrderService, [{\n    key: \"approveOrder\",\n    value: function approveOrder(params) {\n      return ServiceHandle.post(Const.API.ApproveOrder, params).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"cancelOrder\",\n    value: function cancelOrder(params) {\n      return ServiceHandle.post(Const.API.CancelOrder_Sales, params).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getOrderList\",\n    value: function getOrderList(params) {\n      return ServiceHandle.get(Const.API.GetOrderList, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getOrderDetail\",\n    value: function getOrderDetail(params) {\n      return ServiceHandle.get(Const.API.GetOrderDetail, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"editOrder\",\n    value: function editOrder(params) {\n      return ServiceHandle.post(Const.API.EditOrder, params).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"createOrder\",\n    value: function createOrder(params) {\n      return ServiceHandle.post(Const.API.CreateOrder, params).then(function (res) {\n        return res.data;\n      });\n    } // getStatusItems(params) {\n    //     return ServiceHandle.get(Const.API.GetStatusItems, { params: params })\n    //     .then((res) => res.data);\n    // }\n    //############### /rest/s1/mantle/orders\n\n    /**\r\n     * \r\n     * @param {*} params \r\n     * @returns Page{orderList, totalRecords}\r\n     */\n\n  }, {\n    key: \"getOrders\",\n    value: function getOrders(params) {\n      return ServiceHandle.get(Const.API.Orders, {\n        params: params\n      }).then(function (res) {\n        return {\n          orderList: res.data,\n          totalRecords: res.headers['x-total-count']\n        };\n      });\n    }\n    /**\r\n     * \r\n     * @param {*} orderId \r\n     * @returns \r\n     */\n\n  }, {\n    key: \"getOrder\",\n    value: function getOrder(orderId) {\n      return ServiceHandle.get(Const.API.Orders + \"/\".concat(orderId)).then(function (res) {\n        return res.data;\n      });\n    }\n    /**\r\n     * \r\n     * @param {*} orderId \r\n     * @returns \r\n     */\n\n  }, {\n    key: \"getOrderDisplayInfo\",\n    value: function getOrderDisplayInfo(orderId) {\n      return ServiceHandle.get(Const.API.Orders + \"/\".concat(orderId, \"/displayInfo\")).then(function (res) {\n        return res.data;\n      });\n    }\n    /**\r\n     * Get all shipments of order part\r\n     * @param {*} orderId \r\n     * @param {*} orderPartSeqId \r\n     * @returns \r\n     */\n\n  }, {\n    key: \"getShipments\",\n    value: function getShipments(orderId, orderPartSeqId, param) {\n      return ServiceHandle.get(Const.API.Logistic.Orders + \"/\".concat(orderId, \"/parts/\").concat(orderPartSeqId, \"/shipments\"), param).then(function (res) {\n        return {\n          shipmentList: res.data.shipmentList,\n          totalRecords: res.data.shipmentListCount\n        };\n      });\n    }\n  }, {\n    key: \"checkShipment\",\n    value: function checkShipment(orderId, orderPartSeqId) {\n      return ServiceHandle.get(Const.API.Logistic.Orders + \"/\".concat(orderId, \"/parts/\").concat(orderPartSeqId, \"/shipments/check\")).then(function (res) {\n        return res;\n      });\n    }\n  }, {\n    key: \"quickCreateShipment\",\n    value: function quickCreateShipment(orderId, orderPartSeqId, facilityId) {\n      return ServiceHandle.post(Const.API.Logistic.Orders + \"/\".concat(orderId, \"/parts/\").concat(orderPartSeqId, \"/shipments/quick\"), {\n        \"orderId\": orderId,\n        \"orderPartSeqId\": orderPartSeqId,\n        \"facilityId\": facilityId\n      }).then(function (res) {\n        console.log(\"res ...\", res);\n        return res;\n      });\n    }\n  }]);\n\n  return OrderService;\n}();","map":{"version":3,"sources":["D:/eway/src/service/OrderService.js"],"names":["Const","ServiceHandle","OrderService","params","post","API","ApproveOrder","then","res","data","CancelOrder_Sales","get","GetOrderList","GetOrderDetail","EditOrder","CreateOrder","Orders","orderList","totalRecords","headers","orderId","orderPartSeqId","param","Logistic","shipmentList","shipmentListCount","facilityId","console","log"],"mappings":"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","sourcesContent":["import { Const, ServiceHandle } from '../utilities';\r\n\r\nexport class OrderService {\r\n    approveOrder(params) {\r\n        return ServiceHandle.post(Const.API.ApproveOrder, params)\r\n            .then(res => res.data);\r\n    }\r\n\r\n    cancelOrder(params) {\r\n        return ServiceHandle.post(Const.API.CancelOrder_Sales, params)\r\n            .then(res => res.data);\r\n    }\r\n\r\n    getOrderList(params) {\r\n        return ServiceHandle.get(Const.API.GetOrderList, { params: params })\r\n            .then(res => res.data);\r\n    }\r\n\r\n    getOrderDetail(params) {\r\n        return ServiceHandle.get(Const.API.GetOrderDetail, { params: params })\r\n            .then(res => res.data);\r\n    }\r\n\r\n    editOrder(params) {\r\n        return ServiceHandle.post(Const.API.EditOrder, params).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    createOrder(params) {\r\n        return ServiceHandle.post(Const.API.CreateOrder, params).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    // getStatusItems(params) {\r\n    //     return ServiceHandle.get(Const.API.GetStatusItems, { params: params })\r\n    //     .then((res) => res.data);\r\n    // }\r\n\r\n\r\n\r\n    //############### /rest/s1/mantle/orders\r\n    /**\r\n     * \r\n     * @param {*} params \r\n     * @returns Page{orderList, totalRecords}\r\n     */\r\n     getOrders(params) {\r\n        return ServiceHandle.get(Const.API.Orders, { params: params }).then(res => {\r\n            return {\r\n                orderList: res.data,\r\n                totalRecords: res.headers['x-total-count']\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} orderId \r\n     * @returns \r\n     */\r\n     getOrder(orderId) {\r\n        return ServiceHandle.get(Const.API.Orders + `/${orderId}`).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} orderId \r\n     * @returns \r\n     */\r\n     getOrderDisplayInfo(orderId) {\r\n        return ServiceHandle.get(Const.API.Orders + `/${orderId}/displayInfo`).then(res => {\r\n            return res.data\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * Get all shipments of order part\r\n     * @param {*} orderId \r\n     * @param {*} orderPartSeqId \r\n     * @returns \r\n     */\r\n     getShipments(orderId, orderPartSeqId, param) {\r\n        return ServiceHandle.get(Const.API.Logistic.Orders + `/${orderId}/parts/${orderPartSeqId}/shipments`, param).then(res => {\r\n            return {\r\n                shipmentList: res.data.shipmentList,\r\n                totalRecords: res.data.shipmentListCount\r\n            }\r\n        });\r\n    }\r\n\r\n    checkShipment(orderId, orderPartSeqId) {\r\n        return ServiceHandle.get(Const.API.Logistic.Orders + `/${orderId}/parts/${orderPartSeqId}/shipments/check`).then(res => {\r\n            return res;\r\n        });\r\n    }\r\n\r\n    quickCreateShipment(orderId, orderPartSeqId, facilityId) {\r\n        return ServiceHandle.post(Const.API.Logistic.Orders + `/${orderId}/parts/${orderPartSeqId}/shipments/quick`\r\n                                ,{\"orderId\": orderId, \"orderPartSeqId\":orderPartSeqId, \"facilityId\": facilityId }\r\n                                ).then(res => {\r\n                                    console.log(\"res ...\", res);\r\n            return res;\r\n        });\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}