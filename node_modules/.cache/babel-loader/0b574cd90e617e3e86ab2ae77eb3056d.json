{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\\\u0110A\\\\src\\\\pages\\\\Salesman\\\\Create\\\\GeneralInformation.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\\\u0110A\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useCallback, useContext, useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { InputTextController } from '../../../components/PromotionComponent/InputTextController';\nimport { DropdownController } from '../../../components/PromotionComponent/DropdownController';\nimport { CalendarController } from '../../../components/PromotionComponent/CalendarController';\nimport { PasswordController } from '../../../components/PromotionComponent/PasswordController';\nimport { CommonService } from '../../../service/CommonService';\nimport { UserProfileContext } from '../../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var GeneralInformation = function GeneralInformation(props) {\n  _s();\n\n  var control = props.control,\n      errors = props.errors;\n\n  var _useTranslation = useTranslation(),\n      _useTranslation2 = _slicedToArray(_useTranslation, 1),\n      t = _useTranslation2[0];\n\n  var userProfile = useContext(UserProfileContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userGroups = _useState2[0],\n      setUserGroups = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listProductStoreId = _useState4[0],\n      setListProductStoreId = _useState4[1];\n\n  var init = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var commonService, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commonService = new CommonService();\n            _context.next = 3;\n            return commonService.getUserGroupList('UgtGsourcesUsers');\n\n          case 3:\n            data = _context.sent;\n            setUserGroups(data.map(function (elm) {\n              return {\n                name: t('userGroup:' + elm.userGroupId),\n                code: elm.userGroupId\n              };\n            }));\n            _context.next = 7;\n            return commonService.getProductStores(userProfile.info.partyId);\n\n          case 7:\n            data = _context.sent;\n            setListProductStoreId(data.productStoreList.map(function (elm) {\n              return {\n                name: elm.productStoreId,\n                code: elm.productStoreId\n              };\n            }));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [userProfile.info.partyId, t]);\n  useEffect(function () {\n    init(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  var getFormErrorMessage = function getFormErrorMessage(name) {\n    var _errors$name;\n\n    return errors[name] && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 32\n    }, _this);\n  };\n\n  var genders = [{\n    name: t('common:male'),\n    code: 'M'\n  }, {\n    name: t('common:female'),\n    code: 'F'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"partyCode\",\n              label: t('common:salesman.id'),\n              checkErr: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"fullName\",\n              label: t('common:salesman.fullName'),\n              checkErr: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"gender\",\n              label: t('common:salesman.gender'),\n              options: genders,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(CalendarController, {\n              id: \"birthDate\",\n              label: t('common:salesman.birthDate'),\n              showIcon: true,\n              monthNavigator: true,\n              yearNavigator: true,\n              yearRange: \"1950:2030\",\n              showButtonBar: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"userGroupId\",\n              label: t('common:salesman.userGroup'),\n              options: userGroups,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"productStoreId\",\n              label: t('common:productStore'),\n              options: listProductStoreId,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"username\",\n              label: t('common:userAccount.username'),\n              checkErr: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(PasswordController, {\n              id: \"newPassword\",\n              label: t('common:userAccount.password'),\n              checkErr: true,\n              type: \"password\",\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(PasswordController, {\n              id: \"newPasswordVerify\",\n              label: t('common:userAccount.passwordVerify'),\n              checkErr: true,\n              type: \"password\",\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(GeneralInformation, \"XwqYiYtVvVBw3S/PHrPaQgOB1Rg=\", false, function () {\n  return [useTranslation];\n});\n\n_c = GeneralInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralInformation\");","map":{"version":3,"sources":["D:/ƒêA/src/pages/Salesman/Create/GeneralInformation.js"],"names":["React","useCallback","useContext","useState","useEffect","useTranslation","InputTextController","DropdownController","CalendarController","PasswordController","CommonService","UserProfileContext","GeneralInformation","props","control","errors","t","userProfile","userGroups","setUserGroups","listProductStoreId","setListProductStoreId","init","commonService","getUserGroupList","data","map","elm","name","userGroupId","code","getProductStores","info","partyId","productStoreList","productStoreId","getFormErrorMessage","message","genders"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { InputTextController } from '../../../components/PromotionComponent/InputTextController';\r\nimport { DropdownController } from '../../../components/PromotionComponent/DropdownController';\r\nimport { CalendarController } from '../../../components/PromotionComponent/CalendarController';\r\nimport { PasswordController } from '../../../components/PromotionComponent/PasswordController';\r\n\r\nimport { CommonService } from '../../../service/CommonService';\r\nimport { UserProfileContext } from '../../../App';\r\n\r\nexport const GeneralInformation = (props) => {\r\n    const { control, errors } = props;\r\n    const [ t ] = useTranslation();\r\n    const userProfile = useContext(UserProfileContext);\r\n\r\n    const [userGroups, setUserGroups] = useState([]);\r\n    const [listProductStoreId, setListProductStoreId] = useState([]);\r\n\r\n    const init = useCallback(async () => {\r\n        const commonService = new CommonService();\r\n        let data = await commonService.getUserGroupList('UgtGsourcesUsers');\r\n        setUserGroups(data.map(elm => {\r\n            return {\r\n                name: t('userGroup:' + elm.userGroupId),\r\n                code: elm.userGroupId\r\n            }\r\n        }));\r\n\r\n        data = await commonService.getProductStores(userProfile.info.partyId);\r\n        setListProductStoreId(data.productStoreList.map((elm) => {\r\n            return {\r\n                name: elm.productStoreId,\r\n                code: elm.productStoreId\r\n            }\r\n        }));\r\n    }, [userProfile.info.partyId, t]);\r\n\r\n    useEffect(() => {\r\n        init();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name]?.message}</small>\r\n    };\r\n    \r\n    const genders = [\r\n        {name: t('common:male'), code: 'M'},\r\n        {name: t('common:female'), code: 'F'}\r\n    ];\r\n\r\n    return (\r\n        <div className=\"p-grid\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card p-fluid\">\r\n                    <div className=\"p-grid\">\r\n                        <div className=\"p-col-12 p-md-6\">\r\n                            <InputTextController id='partyCode' label={t('common:salesman.id')} checkErr\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <InputTextController id='fullName' label={t('common:salesman.fullName')} checkErr\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        \r\n                            <DropdownController id='gender' label={t('common:salesman.gender')} \r\n                                options={genders} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        \r\n                            <CalendarController id='birthDate' label={t('common:salesman.birthDate')} showIcon monthNavigator yearNavigator yearRange=\"1950:2030\"\r\n                                showButtonBar control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        \r\n                            <DropdownController id='userGroupId' label={t('common:salesman.userGroup')} \r\n                                options={userGroups} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <DropdownController id='productStoreId' label={t('common:productStore')} \r\n                                options={listProductStoreId} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        </div>\r\n\r\n                        <div className=\"p-col-12 p-md-6\">\r\n                            <InputTextController id='username' label={t('common:userAccount.username')} checkErr\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <PasswordController id='newPassword' label={t('common:userAccount.password')} checkErr type=\"password\"\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        \r\n                            <PasswordController id='newPasswordVerify' label={t('common:userAccount.passwordVerify')} checkErr type=\"password\"\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}