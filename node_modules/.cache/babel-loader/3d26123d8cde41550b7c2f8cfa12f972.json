{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\\\u0110A\\\\src\\\\pages\\\\Salesman\\\\Edit\\\\GeneralInformation.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\\\u0110A\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useCallback, useContext, useState, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { InputTextController } from '../../../components/PromotionComponent/InputTextController';\nimport { DropdownController } from '../../../components/PromotionComponent/DropdownController';\nimport { CalendarController } from '../../../components/PromotionComponent/CalendarController';\nimport { PasswordController } from '../../../components/PromotionComponent/PasswordController';\nimport { CommonService } from '../../../service/CommonService';\nimport { SalesmanService } from '../../../service/SalesmanService';\nimport { UserProfileContext } from '../../../App';\nimport { ToastContext } from '../../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var GeneralInformation = function GeneralInformation(props) {\n  _s();\n\n  var control = props.control,\n      errors = props.errors,\n      partyId = props.partyId,\n      setLoading = props.setLoading,\n      setValue = props.setValue;\n\n  var _useTranslation = useTranslation(),\n      _useTranslation2 = _slicedToArray(_useTranslation, 1),\n      t = _useTranslation2[0];\n\n  var userProfile = useContext(UserProfileContext);\n  var toast = useContext(ToastContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userGroups = _useState2[0],\n      setUserGroups = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listProductStoreId = _useState4[0],\n      setListProductStoreId = _useState4[1];\n\n  var genders = useMemo(function () {\n    return [{\n      name: t('common:male'),\n      code: 'M'\n    }, {\n      name: t('common:female'),\n      code: 'F'\n    }]; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var init = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var salesmanService, data, commonService, _userGroups, groupId, productStores, storeId;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n            salesmanService = new SalesmanService();\n            _context.next = 5;\n            return salesmanService.getSaleEmployeeDetail({\n              partyId: partyId\n            });\n\n          case 5:\n            data = _context.sent;\n            setValue('partyCode', data.employee.partyCode);\n            setValue('fullName', data.employee.fullName);\n            setValue('gender', genders.find(function (elm) {\n              return elm.code === data.employee.gender;\n            }));\n            setValue('birthDate', new Date(data.employee.birthDate));\n            setValue('partyCode', data.employee.partyCode);\n            setValue('username', data.userAccount.username); // usergroup\n\n            commonService = new CommonService();\n            _context.next = 15;\n            return commonService.getUserGroupList('UgtGsourcesUsers');\n\n          case 15:\n            data = _context.sent;\n            _userGroups = data.map(function (elm) {\n              return {\n                name: t('userGroup:' + elm.userGroupId),\n                code: elm.userGroupId\n              };\n            });\n            _context.next = 19;\n            return commonService.getUserGroupMember(partyId);\n\n          case 19:\n            data = _context.sent;\n            groupId = data.userGroups[0].userGroupId;\n            setUserGroups(_userGroups);\n            setValue('userGroupId', _userGroups.find(function (elm) {\n              return elm.code === groupId;\n            })); // get product store\n\n            _context.next = 25;\n            return commonService.getProductStores(userProfile.info.partyId);\n\n          case 25:\n            data = _context.sent;\n            productStores = data.productStoreList.map(function (elm) {\n              return {\n                name: elm.storeName,\n                code: elm.productStoreId\n              };\n            });\n            _context.next = 29;\n            return commonService.getProductStores(partyId);\n\n          case 29:\n            data = _context.sent;\n            storeId = data.productStoreList[0].productStoreId;\n            setListProductStoreId(productStores);\n            setValue('productStoreId', productStores.find(function (elm) {\n              return elm.code === storeId;\n            }));\n            _context.next = 38;\n            break;\n\n          case 35:\n            _context.prev = 35;\n            _context.t0 = _context[\"catch\"](1);\n            toast.current.show({\n              severity: 'error',\n              summary: t('errorMessage'),\n              detail: _context.t0,\n              life: 5000\n            });\n\n          case 38:\n            _context.prev = 38;\n            setLoading(false);\n            return _context.finish(38);\n\n          case 41:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 35, 38, 41]]);\n  })), [userProfile.info.partyId, t, toast, setLoading, partyId, genders, setValue]);\n  useEffect(function () {\n    init(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  var getFormErrorMessage = function getFormErrorMessage(name) {\n    var _errors$name;\n\n    return errors[name] && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 32\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"partyCode\",\n              label: t('common:salesman.id'),\n              checkErr: true,\n              disabled: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"fullName\",\n              label: t('common:salesman.fullName'),\n              checkErr: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"gender\",\n              label: t('common:salesman.gender'),\n              options: genders,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(CalendarController, {\n              id: \"birthDate\",\n              label: t('common:salesman.birthDate'),\n              showIcon: true,\n              monthNavigator: true,\n              yearNavigator: true,\n              yearRange: \"1950:2030\",\n              showButtonBar: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"userGroupId\",\n              label: t('common:salesman.userGroup'),\n              options: userGroups,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(DropdownController, {\n              id: \"productStoreId\",\n              label: t('common:productStore'),\n              options: listProductStoreId,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(InputTextController, {\n              id: \"username\",\n              label: t('common:userAccount.username'),\n              disabled: true,\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(PasswordController, {\n              id: \"newPassword\",\n              label: t('common:userAccount.password'),\n              type: \"password\",\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(PasswordController, {\n              id: \"newPasswordVerify\",\n              label: t('common:userAccount.passwordVerify'),\n              type: \"password\",\n              control: control,\n              getFormErrorMessage: getFormErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(GeneralInformation, \"HXM1f4Mh83oY2tBannQFdCiFwuw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = GeneralInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralInformation\");","map":{"version":3,"sources":["D:/ĐA/src/pages/Salesman/Edit/GeneralInformation.js"],"names":["React","useCallback","useContext","useState","useEffect","useMemo","useTranslation","InputTextController","DropdownController","CalendarController","PasswordController","CommonService","SalesmanService","UserProfileContext","ToastContext","GeneralInformation","props","control","errors","partyId","setLoading","setValue","t","userProfile","toast","userGroups","setUserGroups","listProductStoreId","setListProductStoreId","genders","name","code","init","salesmanService","getSaleEmployeeDetail","data","employee","partyCode","fullName","find","elm","gender","Date","birthDate","userAccount","username","commonService","getUserGroupList","map","userGroupId","getUserGroupMember","groupId","getProductStores","info","productStores","productStoreList","storeName","productStoreId","storeId","current","show","severity","summary","detail","life","getFormErrorMessage","message"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState, useEffect, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { InputTextController } from '../../../components/PromotionComponent/InputTextController';\r\nimport { DropdownController } from '../../../components/PromotionComponent/DropdownController';\r\nimport { CalendarController } from '../../../components/PromotionComponent/CalendarController';\r\nimport { PasswordController } from '../../../components/PromotionComponent/PasswordController';\r\n\r\nimport { CommonService } from '../../../service/CommonService';\r\nimport { SalesmanService } from '../../../service/SalesmanService';\r\n\r\nimport { UserProfileContext } from '../../../App';\r\nimport { ToastContext } from '../../../App';\r\n\r\nexport const GeneralInformation = (props) => {\r\n    const { control, errors, partyId, setLoading, setValue } = props;\r\n    const [ t ] = useTranslation();\r\n    const userProfile = useContext(UserProfileContext);\r\n    const toast = useContext(ToastContext);\r\n\r\n    const [userGroups, setUserGroups] = useState([]);\r\n    const [listProductStoreId, setListProductStoreId] = useState([]);\r\n\r\n    const genders = useMemo(() => {\r\n        return [\r\n            {name: t('common:male'), code: 'M'},\r\n            {name: t('common:female'), code: 'F'}\r\n        ]\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const init = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const salesmanService = new SalesmanService();\r\n            let data = await salesmanService.getSaleEmployeeDetail({partyId: partyId});\r\n\r\n            setValue('partyCode', data.employee.partyCode);\r\n            setValue('fullName', data.employee.fullName);\r\n            setValue('gender', genders.find(elm => elm.code === data.employee.gender));\r\n            setValue('birthDate', new Date(data.employee.birthDate));\r\n            setValue('partyCode', data.employee.partyCode);\r\n\r\n            setValue('username', data.userAccount.username);\r\n\r\n            // usergroup\r\n            const commonService = new CommonService();\r\n            data = await commonService.getUserGroupList('UgtGsourcesUsers');\r\n            let userGroups = data.map(elm => {\r\n                return {\r\n                    name: t('userGroup:' + elm.userGroupId),\r\n                    code: elm.userGroupId\r\n                }\r\n            });\r\n\r\n            data = await commonService.getUserGroupMember(partyId);\r\n            let groupId = data.userGroups[0].userGroupId;\r\n\r\n            setUserGroups(userGroups);\r\n            setValue('userGroupId', userGroups.find(elm => elm.code === groupId));\r\n\r\n            // get product store\r\n            data = await commonService.getProductStores(userProfile.info.partyId);\r\n            let productStores = data.productStoreList.map((elm) => {\r\n                return {\r\n                    name: elm.storeName,\r\n                    code: elm.productStoreId\r\n                }\r\n            });\r\n            data = await commonService.getProductStores(partyId);\r\n            let storeId = data.productStoreList[0].productStoreId;\r\n\r\n            setListProductStoreId(productStores);\r\n            setValue('productStoreId', productStores.find(elm => elm.code === storeId));\r\n        } catch (error) {\r\n            toast.current.show({ severity: 'error', summary: t('errorMessage'), detail: error, life: 5000 });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [userProfile.info.partyId, t, toast, setLoading, partyId, genders, setValue]);\r\n\r\n    useEffect(() => {\r\n        init();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const getFormErrorMessage = (name) => {\r\n        return errors[name] && <small className=\"p-error\">{errors[name]?.message}</small>\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-grid\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"card p-fluid\">\r\n                    <div className=\"p-grid\">\r\n                        <div className=\"p-col-12 p-md-6\">\r\n                            <InputTextController id='partyCode' label={t('common:salesman.id')} checkErr disabled\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <InputTextController id='fullName' label={t('common:salesman.fullName')} checkErr\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        \r\n                            <DropdownController id='gender' label={t('common:salesman.gender')} \r\n                                options={genders} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        \r\n                            <CalendarController id='birthDate' label={t('common:salesman.birthDate')} showIcon monthNavigator yearNavigator yearRange=\"1950:2030\"\r\n                                showButtonBar control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        \r\n                            <DropdownController id='userGroupId' label={t('common:salesman.userGroup')} \r\n                                options={userGroups} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <DropdownController id='productStoreId' label={t('common:productStore')} \r\n                                options={listProductStoreId} control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        </div>\r\n\r\n                        <div className=\"p-col-12 p-md-6\">\r\n                            <InputTextController id='username' label={t('common:userAccount.username')} disabled\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n\r\n                            <PasswordController id='newPassword' label={t('common:userAccount.password')} type=\"password\"\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        \r\n                            <PasswordController id='newPasswordVerify' label={t('common:userAccount.passwordVerify')} type=\"password\"\r\n                                control={control} getFormErrorMessage={getFormErrorMessage} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}