{"ast":null,"code":"import _slicedToArray from \"D:/\\u0110A/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\\\u0110A\\\\src\\\\components\\\\company-table\\\\CompanyTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport React, { Component, useEffect, useState } from 'react';\nimport CompanyService from './CompanyService';\nimport './CompanyTable.css'; // import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CompanyTable = function CompanyTable() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      companies = _useState2[0],\n      setCompanies = _useState2[1]; // isChange = (event) => {\n  //     const name = event.target.name;\n  //     const value = event.target.value;\n  //     console.log(name);\n  //     console.log(value);\n  //     this.setState({\n  //         [name]: value\n  //     })\n  // }\n  // changeButton = (id) => {\n  //     if (id === 0) {\n  //         return <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={(name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => this.addNewCompany(\n  //             name = this.state.name,\n  //             taxCode = this.state.taxCode,\n  //             authorizedCapital = this.state.authorizedCapital,\n  //             fieldOfActivity = this.state.fieldOfActivity,\n  //             floor = this.state.floor,\n  //             hotline = this.state.hotline,\n  //             area = this.state.area,\n  //             numberOfEmployee = this.state.numberOfEmployee)\n  //         }>Add New</button>\n  //     } else {\n  //         return <button type=\"button\" className=\"btn btn-warning\" data-bs-dismiss=\"modal\" onClick={(id, name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => this.editCompany(\n  //             id = this.state.id,\n  //             name = this.state.name,\n  //             taxCode = this.state.taxCode,\n  //             authorizedCapital = this.state.authorizedCapital,\n  //             fieldOfActivity = this.state.fieldOfActivity,\n  //             floor = this.state.floor,\n  //             hotline = this.state.hotline,\n  //             area = this.state.area,\n  //             numberOfEmployee = this.state.numberOfEmployee)}>Update</button>\n  //     }\n  // }\n  // getName = (nameLike) => {\n  //     const value = nameLike.target.value;\n  //     // console.log(name);\n  //     // console.log(value);\n  //     this.setState({\n  //         name: value\n  //     })\n  // }\n  // searchName = () => {\n  //     // console.log(value);\n  //     // console.log(this.state)\n  //     CompanyService.searchByName(this.state.name).then((response) => {\n  //         this.setState({ companies: response.data.data })\n  //     });\n  // }\n  // addNewCompany = (name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => {\n  //     if (name === \"\" || taxCode == \"\" || authorizedCapital === \"\" || fieldOfActivity === \"\" || floor === \"\" || hotline === \"\" || area === \"\" || numberOfEmployee === \"\") {\n  //         toast.error('Please fill all the empty!!')\n  //     }\n  //     else {\n  //         var company = {};\n  //         company.name = name;\n  //         company.taxCode = taxCode;\n  //         company.authorizedCapital = parseFloat(authorizedCapital);\n  //         company.fieldOfActivity = fieldOfActivity;\n  //         company.floor = floor;\n  //         company.hotline = hotline;\n  //         company.area = parseFloat(area);\n  //         company.numberOfEmployee = parseInt(numberOfEmployee);\n  //         console.log(company)\n  //         CompanyService.createCompany(company).then(() => {\n  //             this.componentDidMount();\n  //         })\n  //         toast.success('Added Company successfully!!!');\n  //         this.setState({\n  //             id: 0,\n  //             name: \"\",\n  //             taxCode: \"\",\n  //             authorizedCapital: 0.0,\n  //             fieldOfActivity: \"\",\n  //             floor: \"\",\n  //             hotline: \"\",\n  //             area: 0.0,\n  //             numberOfEmployee: 0\n  //         });\n  //     }\n  // }\n  // editCompany = (id, name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => {\n  //     var company = {};\n  //     company.id = parseInt(id);\n  //     company.name = name;\n  //     company.taxCode = taxCode;\n  //     company.authorizedCapital = parseFloat(authorizedCapital);\n  //     company.fieldOfActivity = fieldOfActivity;\n  //     company.floor = floor;\n  //     company.hotline = hotline;\n  //     company.area = parseFloat(area);\n  //     company.numberOfEmployee = parseInt(numberOfEmployee);\n  //     CompanyService.updateCompany(company.id, company).then(() => {\n  //         this.componentDidMount();\n  //     })\n  //     toast.info('Updated Company successfully!!!');\n  //     this.setState({\n  //         id: 0,\n  //         name: \"\",\n  //         taxCode: \"\",\n  //         authorizedCapital: 0.0,\n  //         fieldOfActivity: \"\",\n  //         floor: \"\",\n  //         hotline: \"\",\n  //         area: 0.0,\n  //         numberOfEmployee: 0\n  //     });\n  // }\n  // getCompany = (company) => {\n  //     this.setState({\n  //         id: company.id,\n  //         name: company.name,\n  //         taxCode: company.taxCode,\n  //         authorizedCapital: company.authorizedCapital,\n  //         fieldOfActivity: company.fieldOfActivity,\n  //         floor: company.floor,\n  //         hotline: company.hotline,\n  //         area: company.area,\n  //         numberOfEmployee: company.numberOfEmployee\n  //     });\n  // }\n  // deleteCompany = (id) => {\n  //     CompanyService.deleteCompany(parseInt(id)).then(() => {\n  //         this.componentDidMount();\n  //     });\n  //     toast.error('Deleted Company successfully!!!');\n  // }\n  // componentDidMount() {\n  //     CompanyService.getAllCompany().then((response) => {\n  //         this.setState({ companies: response.data.data })\n  //     })\n  // }\n\n\n  useEffect(function () {\n    CompanyService.getAllCompany().then(function (response) {\n      setCompanies(response.data.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"lan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        value: companies,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"name\",\n          header: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"taxCode\",\n          header: \"TaxCode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"authorizedCapital\",\n          header: \"Authorized capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"activity\",\n          header: \"Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"quantity\",\n          header: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"floor\",\n          header: \"Floor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"hotline\",\n          header: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"area\",\n          header: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          header: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 13\n  }, _this);\n};\n\n_s(CompanyTable, \"fvSMykEKVRSxSgZ7G/ZC4cRqlrw=\");\n\n_c = CompanyTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyTable\");","map":{"version":3,"sources":["D:/ƒêA/src/components/company-table/CompanyTable.js"],"names":["Column","DataTable","React","Component","useEffect","useState","CompanyService","CompanyTable","companies","setCompanies","getAllCompany","then","response","data"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,cAAP,MAA4B,kBAA5B;AACA,OAAO,oBAAP,C,CACA;AACA;;;AAEA,OAAO,IAAOC,YAAY,GAAC,SAAbA,YAAa,GAAO;AAAA;;AAC9B,kBAAkCF,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB,iBAD8B,CAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,cAAc,CAACI,aAAf,GAA+BC,IAA/B,CAAoC,UAACC,QAAD,EAAc;AAC9CH,MAAAA,YAAY,CAACG,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAZ;AACH,KAFD;AAIH,GALQ,EAKN,EALM,CAAT;AAMI,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,aADJ,eAsHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtHJ,eAuHI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEL,SAAlB;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,MAAM,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,MAAM,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,mBAAd;AAAkC,UAAA,MAAM,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,UAAd;AAAyB,UAAA,MAAM,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,iBAJJ,eAKI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,UAAd;AAAyB,UAAA,MAAM,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,iBALJ,eAMI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAsB,UAAA,MAAM,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,iBANJ,eAOI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,MAAM,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,iBAPJ,eAQI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,MAAM,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,iBARJ,eASI,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,iBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAvHJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAuIH,CA/RE;;GAAOD,Y;;KAAAA,Y","sourcesContent":["import { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport React, { Component, useEffect, useState } from 'react';\nimport CompanyService  from './CompanyService'\nimport './CompanyTable.css';\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nexport const  CompanyTable=() =>  {\n    const [companies, setCompanies] = useState([]);\n\n    // isChange = (event) => {\n    //     const name = event.target.name;\n    //     const value = event.target.value;\n    //     console.log(name);\n    //     console.log(value);\n    //     this.setState({\n    //         [name]: value\n    //     })\n    // }\n    // changeButton = (id) => {\n    //     if (id === 0) {\n    //         return <button type=\"button\" className=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={(name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => this.addNewCompany(\n    //             name = this.state.name,\n    //             taxCode = this.state.taxCode,\n    //             authorizedCapital = this.state.authorizedCapital,\n    //             fieldOfActivity = this.state.fieldOfActivity,\n    //             floor = this.state.floor,\n    //             hotline = this.state.hotline,\n    //             area = this.state.area,\n    //             numberOfEmployee = this.state.numberOfEmployee)\n    //         }>Add New</button>\n    //     } else {\n    //         return <button type=\"button\" className=\"btn btn-warning\" data-bs-dismiss=\"modal\" onClick={(id, name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => this.editCompany(\n    //             id = this.state.id,\n    //             name = this.state.name,\n    //             taxCode = this.state.taxCode,\n    //             authorizedCapital = this.state.authorizedCapital,\n    //             fieldOfActivity = this.state.fieldOfActivity,\n    //             floor = this.state.floor,\n    //             hotline = this.state.hotline,\n    //             area = this.state.area,\n    //             numberOfEmployee = this.state.numberOfEmployee)}>Update</button>\n    //     }\n    // }\n\n\n    // getName = (nameLike) => {\n    //     const value = nameLike.target.value;\n    //     // console.log(name);\n    //     // console.log(value);\n    //     this.setState({\n    //         name: value\n    //     })\n\n    // }\n\n\n    // searchName = () => {\n    //     // console.log(value);\n    //     // console.log(this.state)\n    //     CompanyService.searchByName(this.state.name).then((response) => {\n    //         this.setState({ companies: response.data.data })\n    //     });\n    // }\n\n    // addNewCompany = (name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => {\n    //     if (name === \"\" || taxCode == \"\" || authorizedCapital === \"\" || fieldOfActivity === \"\" || floor === \"\" || hotline === \"\" || area === \"\" || numberOfEmployee === \"\") {\n    //         toast.error('Please fill all the empty!!')\n    //     }\n    //     else {\n    //         var company = {};\n    //         company.name = name;\n    //         company.taxCode = taxCode;\n    //         company.authorizedCapital = parseFloat(authorizedCapital);\n    //         company.fieldOfActivity = fieldOfActivity;\n    //         company.floor = floor;\n    //         company.hotline = hotline;\n    //         company.area = parseFloat(area);\n    //         company.numberOfEmployee = parseInt(numberOfEmployee);\n    //         console.log(company)\n    //         CompanyService.createCompany(company).then(() => {\n    //             this.componentDidMount();\n    //         })\n    //         toast.success('Added Company successfully!!!');\n    //         this.setState({\n    //             id: 0,\n    //             name: \"\",\n    //             taxCode: \"\",\n    //             authorizedCapital: 0.0,\n    //             fieldOfActivity: \"\",\n    //             floor: \"\",\n    //             hotline: \"\",\n    //             area: 0.0,\n    //             numberOfEmployee: 0\n    //         });\n    //     }\n    // }\n\n    // editCompany = (id, name, taxCode, authorizedCapital, fieldOfActivity, floor, hotline, area, numberOfEmployee) => {\n    //     var company = {};\n    //     company.id = parseInt(id);\n    //     company.name = name;\n    //     company.taxCode = taxCode;\n    //     company.authorizedCapital = parseFloat(authorizedCapital);\n    //     company.fieldOfActivity = fieldOfActivity;\n    //     company.floor = floor;\n    //     company.hotline = hotline;\n    //     company.area = parseFloat(area);\n    //     company.numberOfEmployee = parseInt(numberOfEmployee);\n    //     CompanyService.updateCompany(company.id, company).then(() => {\n    //         this.componentDidMount();\n    //     })\n    //     toast.info('Updated Company successfully!!!');\n    //     this.setState({\n    //         id: 0,\n    //         name: \"\",\n    //         taxCode: \"\",\n    //         authorizedCapital: 0.0,\n    //         fieldOfActivity: \"\",\n    //         floor: \"\",\n    //         hotline: \"\",\n    //         area: 0.0,\n    //         numberOfEmployee: 0\n    //     });\n    // }\n\n    // getCompany = (company) => {\n    //     this.setState({\n    //         id: company.id,\n    //         name: company.name,\n    //         taxCode: company.taxCode,\n    //         authorizedCapital: company.authorizedCapital,\n    //         fieldOfActivity: company.fieldOfActivity,\n    //         floor: company.floor,\n    //         hotline: company.hotline,\n    //         area: company.area,\n    //         numberOfEmployee: company.numberOfEmployee\n    //     });\n    // }\n\n    // deleteCompany = (id) => {\n    //     CompanyService.deleteCompany(parseInt(id)).then(() => {\n    //         this.componentDidMount();\n    //     });\n    //     toast.error('Deleted Company successfully!!!');\n    // }\n\n    // componentDidMount() {\n    //     CompanyService.getAllCompany().then((response) => {\n    //         this.setState({ companies: response.data.data })\n    //     })\n    // }\n    \n    useEffect(() => {\n        CompanyService.getAllCompany().then((response) => {\n            setCompanies(response.data.data)\n        })\n        \n    }, [])\n        return (\n            <div>\n                <main>\n                    {/* form add new Company\n                    <div className=\"modal fade\" id=\"formCompany\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog\">\n                            <div className=\"modal-content\">\n                                <div className=\"modal-header\">\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Company Infomation</h5>\n                                    <br />\n                                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    <form>\n                                        <div className=\"mb-3\">\n                                            <label for=\"code\" className=\"form-label\">Name</label>\n                                            <input value={this.state.name} type=\"text\" onChange={(event) => this.isChange(event)} name=\"name\" className=\"form-control\" id=\"name\" />\n                                        </div>\n                                        <div className=\"mb-3\">\n                                            <label for=\"name\" className=\"form-label\">Tax Code</label>\n                                            <input value={this.state.taxCode} type=\"text\" onChange={(event) => this.isChange(event)} name=\"taxCode\" className=\"form-control\" id=\"taxCode\" />\n                                        </div>\n                                        <div className=\"mb-3\">\n                                            <label for=\"dateOfBirth\" className=\"form-label\">Authorized Capital</label>\n                                            <input value={this.state.authorizedCapital} type=\"text\" onChange={(event) => this.isChange(event)} name=\"authorizedCapital\" className=\"form-control\" id=\"authorizedCapital\" />\n                                        </div>\n                                        <div className=\"mb-3\">\n                                            <label for=\"address\" className=\"form-label\">Field Of Activity</label>\n                                            <input value={this.state.fieldOfActivity} type=\"text\" onChange={(event) => this.isChange(event)} name=\"fieldOfActivity\" className=\"form-control\" id=\"fieldOfActivity\" />\n                                        </div>\n                                        <div className=\"mb-3\">\n                                            <label for=\"phone\" className=\"form-label\">Floor</label>\n                                            <input value={this.state.floor} type=\"text\" onChange={(event) => this.isChange(event)} name=\"floor\" className=\"form-control\" id=\"floor\" />\n                                        </div>\n                                        <div className=\"mb-3\">\n                                            <label for=\"position\" className=\"form-label\">Hotline</label>\n                                            <input value={this.state.hotline} type=\"text\" onChange={(event) => this.isChange(event)} name=\"hotline\" className=\"form-control\" id=\"hotline\" />\n                                        </div>\n                                        <div className=\"mb-3\">\n                                            <label for=\"level\" className=\"form-label\">Area</label>\n                                            <input value={this.state.area} type=\"text\" onChange={(event) => this.isChange(event)} name=\"area\" className=\"form-control\" id=\"area\" />\n                                        </div>\n                                    </form>\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                                    {this.changeButton(this.state.id)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"container-fluid px-4\">\n                        <h1 className=\"mt-1\">Companies Table</h1>\n                        <br />\n                        <div className=\"card mb-4\">\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9\">\n                                        <button type=\"button\" className=\"btn btn btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#formCompany\">Add new Company</button>\n                                    </div>\n                                    <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\n                                        <form className=\"d-none d-md-inline-block form-inline ms-auto me-0 me-md-3 my-2 my-md-0\" >\n                                            <div className=\"input-group\">\n                                                <input onChange={(event) => this.getName(event)} className=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search for...\" aria-describedby=\"btnNavbarSearch\" />\n                                                <button onClick={() => this.searchName(this.state.name)} className=\"btn btn-primary\" id=\"btnNavbarSearch\" type=\"button\"><i className=\"fas fa-search\"></i></button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card mb-4\">\n                            <div className=\"card-header\">\n                                <i className=\"fas fa-table me-1\"></i>\n                                DataTable Company\n                            </div>\n                            <div className=\"card-body\">\n                                <table className=\"table table-striped\">\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>TaxCode</th>\n                                            <th>Authorized capital</th>\n                                            <th>Activity</th>\n                                            <th>Quantity</th>\n                                            <th>Floor</th>\n                                            <th>Phone Number</th>\n                                            <th>Address</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.companies.map((company) => (\n                                                <tr key={company.id}>\n                                                    <td> {company.name} </td>\n                                                    <td> {company.taxCode} </td>\n                                                    <td> {company.authorizedCapital} </td>\n                                                    <td> {company.fieldOfActivity} </td>\n                                                    <td> {company.numberOfEmployee} </td>\n                                                    <td> {company.floor} </td>\n                                                    <td> {company.hotline} </td>\n                                                    <td> {company.area} </td>\n                                                    <td>\n                                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.deleteCompany(company.id)}>Delete</button>\n                                                        <button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#formCompany\" onClick={() => this.getCompany(company)}>Edit</button>\n                                                        <button type=\"button\" className=\"btn btn-warning\">\n                                                            <a id=\"viewDetail\" href={`/company-detail/${company.id}`}>view Detail</a>\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                            ))\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div> */}\n                </main>\n                <h2>lan</h2>\n                <div className=\"card\">\n                    <DataTable value={companies} >\n                        <Column field=\"name\" header=\"Name\"></Column>\n                        <Column field=\"taxCode\" header=\"TaxCode\"></Column>\n                        <Column field=\"authorizedCapital\" header=\"Authorized capital\"></Column>\n                        <Column field=\"activity\" header=\"Activity\"></Column>\n                        <Column field=\"quantity\" header=\"Quantity\"></Column>\n                        <Column field=\"floor\" header=\"Floor\"></Column>\n                        <Column field=\"hotline\" header=\"Phone Number\"></Column>\n                        <Column field=\"area\" header=\"Address\"></Column>\n                        <Column header=\"Action\"></Column>\n                    </DataTable>\n                </div>\n            </div>\n        );\n    }\n\n"]},"metadata":{},"sourceType":"module"}