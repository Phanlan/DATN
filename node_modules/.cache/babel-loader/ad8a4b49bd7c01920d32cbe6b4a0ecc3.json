{"ast":null,"code":"import _objectSpread from \"D:/eway/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"D:/eway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/eway/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\eway\\\\src\\\\components\\\\logistics\\\\DeliveryCluster\\\\AddDeliveryCluster.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\eway\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { useHistory } from 'react-router-dom';\nimport { Dropdown } from 'primereact/dropdown';\nimport { useForm, Controller } from 'react-hook-form';\nimport { classNames } from 'primereact/utils';\nimport { Dialog } from 'primereact/dialog';\nimport 'primeflex/primeflex.css';\nimport { PartyService } from '../../../service/PartyService';\nimport { DeliveryClusterService } from '../../../service/DeliveryClusterService';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var AddDeliveryCluster = function AddDeliveryCluster() {\n  _s();\n\n  var history = useHistory();\n  var toast = useRef();\n\n  var _useTranslation = useTranslation('common'),\n      t = _useTranslation.t;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      customers = _useState2[0],\n      setCustomers = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCustomers = _useState4[0],\n      setSelectedCustomers = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      totalRecords = _useState6[0],\n      setTotalRecords = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showMessage = _useState8[0],\n      setShowMessage = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      shipper = _useState10[0],\n      setShipper = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      parties = _useState12[0],\n      setParties = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState({\n    first: 0,\n    rows: 10,\n    page: 0,\n    sortField: null,\n    sortOrder: null,\n    filters: {}\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      lazyParams = _useState16[0],\n      setLazyParams = _useState16[1];\n\n  var loadLazyTimeout = null;\n  var defaultValues = {\n    clusterCode: '',\n    shipper: '',\n    clusterName: '',\n    description: ''\n  };\n  useEffect(function () {\n    var loadLazyData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var deliveryClusterService;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                deliveryClusterService = new DeliveryClusterService();\n                setLoading(true);\n\n                if (loadLazyTimeout) {\n                  clearTimeout(loadLazyTimeout);\n                } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n                loadLazyTimeout = setTimeout(function () {\n                  deliveryClusterService.getCandidateCustomers({\n                    pageNoLimit: 'true'\n                  }).then(function (data) {\n                    setCustomers(data.customerList);\n                    setTotalRecords(data.totalRecords);\n                    setLoading(false);\n                  });\n                }, 250);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function loadLazyData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    loadLazyData();\n  }, [lazyParams]);\n  useEffect(function () {\n    var partyService = new PartyService();\n    partyService.search({\n      roleTypeId: 'Shipper',\n      pageNoLimit: true\n    }).then(function (data) {\n      setParties(data.documentList);\n    });\n  }, []);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      errors = _useForm.formState.errors,\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset;\n\n  var onSubmit = function onSubmit(data) {\n    var deliveryClusterService = new DeliveryClusterService();\n\n    if (selectedCustomers.length === 0) {\n      alert(t('common:valid.agencyValidFieldRequire'));\n      return;\n    } // let clusterId = '';\n\n\n    var params = {\n      deliveryClusterCode: data.clusterCode,\n      deliveryClusterName: data.clusterName,\n      description: data.description,\n      executorId: data.shipper,\n      statusId: 'Y',\n      customers: [{}]\n    };\n    params.customers = selectedCustomers.map(function (item) {\n      return {\n        partyId: item.partyId\n      };\n    });\n    deliveryClusterService.createDeliveryCluster(params).then(function (response) {\n      setShowMessage(true);\n      reset();\n      setSelectedCustomers([]);\n    }).catch(function (error) {\n      var errorCode = error.response.data.errorCode;\n      var errorMessage = error.response.data.errors;\n\n      if (errorCode) {\n        toast.current.show({\n          severity: 'error',\n          summary: 'Error Message',\n          detail: errorMessage,\n          sticky: true\n        });\n      }\n    });\n  };\n\n  var getFormErrorMessage = function getFormErrorMessage(name) {\n    return errors[name] && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"p-error\",\n      children: errors[name].message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 28\n    }, _this);\n  };\n\n  var addressBodyTemplate = function addressBodyTemplate(rowData) {\n    var address = rowData.address1 + ', ' + rowData.wardName + ', ' + rowData.countryName;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var onSort = function onSort(event) {\n    var _lazyParams = _objectSpread(_objectSpread({}, lazyParams), event);\n\n    setLazyParams(_lazyParams);\n  };\n\n  var footer = /*#__PURE__*/_jsxDEV(Button, {\n    label: \"Ok\",\n    onClick: function onClick() {\n      return history.push('/logistics/poscluster');\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 18\n  }, _this);\n\n  var shipperOptionTemplate = function shipperOptionTemplate(option) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"[\", option.partyId, \"] \", option.combinedName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Dialog, {\n          visible: showMessage,\n          onHide: function onHide() {\n            return setShowMessage(false);\n          },\n          showHeader: false,\n          style: {\n            width: '30vw'\n          },\n          footer: footer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"pi pi-check-circle\",\n              style: {\n                fontSize: '5rem',\n                color: 'var(--green-500)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\" \", t('common:logistics.addDeliveryCluster.noticeContent'), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                lineHeight: 1.5,\n                textIndent: '1rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: t('logistics.addDeliveryCluster.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-col-12 p-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-field p-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"firstname3\",\n                  className: \"p-col-fixed required\",\n                  style: {\n                    width: '100px'\n                  },\n                  children: t('logistics.addDeliveryCluster.clusterCode')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-col-12 p-md-10\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"p-float-label\",\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"clusterCode\",\n                      control: control,\n                      rules: {\n                        required: t('common:valid.validFieldRequire')\n                      },\n                      render: function render(_ref2) {\n                        var field = _ref2.field,\n                            fieldState = _ref2.fieldState;\n                        return /*#__PURE__*/_jsxDEV(InputText, _objectSpread(_objectSpread({\n                          id: field.name\n                        }, field), {}, {\n                          autoFocus: true,\n                          className: classNames({\n                            'p-invalid': fieldState.invalid\n                          }),\n                          style: {\n                            width: '50%'\n                          }\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 27\n                        }, _this);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, _this), getFormErrorMessage('clusterCode')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-field p-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"lastname3\",\n                  className: \"p-col-fixed required\",\n                  style: {\n                    width: '100px'\n                  },\n                  children: t('logistics.addDeliveryCluster.clusterName')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-col-12 p-md-10\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"p-float-label\",\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"clusterName\",\n                      control: control,\n                      rules: {\n                        required: t('common:valid.validFieldRequire')\n                      },\n                      render: function render(_ref3) {\n                        var field = _ref3.field,\n                            fieldState = _ref3.fieldState;\n                        return /*#__PURE__*/_jsxDEV(InputText, _objectSpread(_objectSpread({\n                          id: field.name\n                        }, field), {}, {\n                          className: classNames({\n                            'p-invalid': fieldState.invalid\n                          }),\n                          style: {\n                            width: '50%'\n                          }\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 27\n                        }, _this);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 21\n                  }, _this), getFormErrorMessage('clusterName')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-col-12 p-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-field p-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"firstname3\",\n                  className: \"p-col-fixed required\",\n                  style: {\n                    width: '100px'\n                  },\n                  children: t('logistics.addDeliveryCluster.shipperName')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-col-12 p-md-10\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"p-float-label\",\n                    children: /*#__PURE__*/_jsxDEV(Controller, {\n                      name: \"shipper\",\n                      control: control,\n                      rules: {\n                        required: t('common:valid.validFieldRequire')\n                      },\n                      render: function render(_ref4) {\n                        var field = _ref4.field,\n                            fieldState = _ref4.fieldState;\n                        return /*#__PURE__*/_jsxDEV(Dropdown, _objectSpread(_objectSpread({\n                          id: \"shipper\",\n                          style: {\n                            width: '50%'\n                          },\n                          options: parties,\n                          value: shipper,\n                          optionValue: \"partyId\",\n                          optionLabel: \"combinedName\",\n                          itemTemplate: shipperOptionTemplate,\n                          filter: true,\n                          showClear: true,\n                          filterBy: \"combinedName\",\n                          onChange: function onChange(e) {\n                            return setShipper(e.value);\n                          },\n                          appendTo: document.body\n                        }, field), {}, {\n                          className: classNames({\n                            'p-invalid': fieldState.invalid\n                          })\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 231,\n                          columnNumber: 27\n                        }, _this);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, _this), getFormErrorMessage('shipper')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-field p-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"lastname3\",\n                  className: \"p-col-fixed \",\n                  style: {\n                    width: '100px'\n                  },\n                  children: t('logistics.addDeliveryCluster.description')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-col-12 p-md-10\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"p-float-label\",\n                    children: /*#__PURE__*/_jsxDEV(InputTextarea, {\n                      style: {\n                        width: '50%'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 21\n                  }, _this), getFormErrorMessage('description')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-grid table-demo\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: t('common:logistics.addDeliveryCluster.customerList')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(DataTable, {\n                value: customers,\n                dataKey: \"partyId\",\n                emptyMessage: t('logistics.addDeliveryCluster.emptyMessage'),\n                showGridlines: true,\n                rowHover: true,\n                loading: loading,\n                totalRecords: totalRecords,\n                resizableColumns: true,\n                paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords}\",\n                onSort: onSort,\n                sortField: lazyParams.sortField,\n                paginator: true,\n                first: lazyParams.first,\n                rows: lazyParams.rows,\n                rowsPerPageOptions: [5, 10, 25, 50, 100],\n                sortOrder: lazyParams.sortOrder,\n                selection: selectedCustomers,\n                onSelectionChange: function onSelectionChange(e) {\n                  return setSelectedCustomers(e.value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Column, {\n                  selectionMode: \"multiple\",\n                  headerStyle: {\n                    width: '3em'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Column, {\n                  field: \"partyId\",\n                  sortable: true,\n                  header: t('logistics.addDeliveryCluster.customerCode')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Column, {\n                  field: \"toName\",\n                  sortablesortable: true,\n                  header: t('logistics.addDeliveryCluster.customerName')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Column, {\n                  body: addressBodyTemplate,\n                  header: t('logistics.addDeliveryCluster.address')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-d-flex p-jc-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-mr-2\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              label: t('logistics.addDeliveryCluster.btnSave'),\n              icon: \"pi pi-save\",\n              className: \"p-mt-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AddDeliveryCluster, \"PGAumL43oKg9jtGvxzbIaQQiC7w=\", false, function () {\n  return [useHistory, useTranslation, useForm];\n});\n\n_c = AddDeliveryCluster;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDeliveryCluster\");","map":{"version":3,"sources":["D:/eway/src/components/logistics/DeliveryCluster/AddDeliveryCluster.js"],"names":["React","useState","useEffect","useRef","DataTable","Column","InputText","useTranslation","Button","Toast","useHistory","Dropdown","useForm","Controller","classNames","Dialog","PartyService","DeliveryClusterService","InputTextarea","AddDeliveryCluster","history","toast","t","customers","setCustomers","selectedCustomers","setSelectedCustomers","totalRecords","setTotalRecords","showMessage","setShowMessage","shipper","setShipper","parties","setParties","loading","setLoading","first","rows","page","sortField","sortOrder","filters","lazyParams","setLazyParams","loadLazyTimeout","defaultValues","clusterCode","clusterName","description","loadLazyData","deliveryClusterService","clearTimeout","setTimeout","getCandidateCustomers","pageNoLimit","then","data","customerList","partyService","search","roleTypeId","documentList","control","errors","formState","handleSubmit","reset","onSubmit","length","alert","params","deliveryClusterCode","deliveryClusterName","executorId","statusId","map","item","partyId","createDeliveryCluster","response","catch","error","errorCode","errorMessage","current","show","severity","summary","detail","sticky","getFormErrorMessage","name","message","addressBodyTemplate","rowData","address","address1","wardName","countryName","onSort","event","_lazyParams","footer","push","shipperOptionTemplate","option","combinedName","width","fontSize","color","lineHeight","textIndent","required","field","fieldState","invalid","e","value","document","body"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Button} from 'primereact/button';\r\nimport {Toast} from 'primereact/toast';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {useForm, Controller} from 'react-hook-form';\r\nimport {classNames} from 'primereact/utils';\r\nimport {Dialog} from 'primereact/dialog';\r\nimport 'primeflex/primeflex.css';\r\nimport {PartyService} from '../../../service/PartyService';\r\nimport {DeliveryClusterService} from '../../../service/DeliveryClusterService';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\n\r\nexport const AddDeliveryCluster = () => {\r\n  const history = useHistory();\r\n  const toast = useRef();\r\n  const {t} = useTranslation('common');\r\n  const [customers, setCustomers] = useState([]);\r\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [shipper, setShipper] = useState();\r\n  const [parties, setParties] = useState(null);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [lazyParams, setLazyParams] = useState({\r\n    first: 0,\r\n    rows: 10,\r\n    page: 0,\r\n    sortField: null,\r\n    sortOrder: null,\r\n    filters: {},\r\n  });\r\n\r\n  let loadLazyTimeout = null;\r\n\r\n  const defaultValues = {\r\n    clusterCode: '',\r\n    shipper: '',\r\n    clusterName: '',\r\n    description: '',\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadLazyData = async () => {\r\n      const deliveryClusterService = new DeliveryClusterService();\r\n\r\n      setLoading(true);\r\n      if (loadLazyTimeout) {\r\n        clearTimeout(loadLazyTimeout);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      loadLazyTimeout = setTimeout(() => {\r\n        deliveryClusterService.getCandidateCustomers({pageNoLimit: 'true'}).then((data) => {\r\n          setCustomers(data.customerList);\r\n          setTotalRecords(data.totalRecords);\r\n          setLoading(false);\r\n        });\r\n      }, 250);\r\n    };\r\n\r\n    loadLazyData();\r\n  }, [lazyParams]);\r\n\r\n  useEffect(() => {\r\n    const partyService = new PartyService();\r\n    partyService.search({roleTypeId: 'Shipper', pageNoLimit: true}).then((data) => {\r\n      setParties(data.documentList);\r\n    });\r\n  }, []);\r\n\r\n  const {\r\n    control,\r\n    formState: {errors},\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({defaultValues});\r\n\r\n  const onSubmit = (data) => {\r\n    const deliveryClusterService = new DeliveryClusterService();\r\n\r\n    if (selectedCustomers.length === 0) {\r\n      alert(t('common:valid.agencyValidFieldRequire'));\r\n      return;\r\n    }\r\n\r\n    \r\n    // let clusterId = '';\r\n    let params = {\r\n      deliveryClusterCode: data.clusterCode,\r\n      deliveryClusterName: data.clusterName,\r\n      description: data.description,\r\n      executorId: data.shipper,\r\n      statusId: 'Y',\r\n      customers: [{}],\r\n    };\r\n\r\n    params.customers = selectedCustomers.map((item) => ({partyId: item.partyId}));\r\n\r\n     deliveryClusterService\r\n      .createDeliveryCluster(params)\r\n      .then(function (response) {\r\n        setShowMessage(true);\r\n        reset();\r\n        setSelectedCustomers([]);\r\n      })\r\n      .catch(function (error) {\r\n        let errorCode = error.response.data.errorCode;\r\n        let errorMessage = error.response.data.errors;\r\n        if (errorCode) {\r\n          toast.current.show({severity: 'error', summary: 'Error Message', detail: errorMessage, sticky: true});\r\n        }\r\n      });\r\n  };\r\n\r\n  const getFormErrorMessage = (name) => {\r\n    return errors[name] && <small className=\"p-error\">{errors[name].message}</small>;\r\n  };\r\n\r\n  const addressBodyTemplate = (rowData) => {\r\n    let address = rowData.address1 + ', ' + rowData.wardName + ', ' + rowData.countryName;\r\n    return (\r\n      <React.Fragment>\r\n        <span>{address}</span>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const onSort = (event) => {\r\n    let _lazyParams = {...lazyParams, ...event};\r\n    setLazyParams(_lazyParams);\r\n  };\r\n\r\n  const footer = <Button label=\"Ok\" onClick={() => history.push('/logistics/poscluster')} />;\r\n\r\n  const shipperOptionTemplate = (option) => {\r\n    return (\r\n      <span>\r\n        [{option.partyId}] {option.combinedName}\r\n      </span>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Toast ref={toast} />\r\n      <div className=\"card\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Dialog\r\n            visible={showMessage}\r\n            onHide={() => setShowMessage(false)}\r\n            showHeader={false}\r\n            style={{width: '30vw'}}\r\n            footer={footer}\r\n          >\r\n            <div className=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\r\n              <i className=\"pi pi-check-circle\" style={{fontSize: '5rem', color: 'var(--green-500)'}}></i>\r\n              <h5> {t('common:logistics.addDeliveryCluster.noticeContent')} </h5>\r\n              <p style={{lineHeight: 1.5, textIndent: '1rem'}}></p>\r\n            </div>\r\n          </Dialog>\r\n          <div className=\"p-col-12\">\r\n            <h5>{t('logistics.addDeliveryCluster.title')}</h5>\r\n          </div>\r\n          <div className=\"p-col-12\">\r\n            <div className=\"p-grid\">\r\n              <div className=\"p-col-12 p-md-6\">\r\n                <div className=\"p-field p-grid\">\r\n                  <label htmlFor=\"firstname3\" className=\"p-col-fixed required\" style={{width: '100px'}}>\r\n                    {t('logistics.addDeliveryCluster.clusterCode')}\r\n                  </label>\r\n                  <div className=\"p-col-12 p-md-10\">\r\n                    <span className=\"p-float-label\">\r\n                      <Controller\r\n                        name=\"clusterCode\"\r\n                        control={control}\r\n                        rules={{required: t('common:valid.validFieldRequire')}}\r\n                        render={({field, fieldState}) => (\r\n                          <InputText\r\n                            id={field.name}\r\n                            {...field}\r\n                            autoFocus\r\n                            className={classNames({'p-invalid': fieldState.invalid})}\r\n                            style={{width: '50%'}}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </span>\r\n                    {getFormErrorMessage('clusterCode')}\r\n                  </div>\r\n                </div>\r\n                <div className=\"p-field p-grid\">\r\n                  <label htmlFor=\"lastname3\" className=\"p-col-fixed required\" style={{width: '100px'}}>\r\n                    {t('logistics.addDeliveryCluster.clusterName')}\r\n                  </label>\r\n                  <div className=\"p-col-12 p-md-10\">\r\n                    <span className=\"p-float-label\">\r\n                      <Controller\r\n                        name=\"clusterName\"\r\n                        control={control}\r\n                        rules={{required: t('common:valid.validFieldRequire')}}\r\n                        render={({field, fieldState}) => (\r\n                          <InputText\r\n                            id={field.name}\r\n                            {...field}\r\n                            className={classNames({'p-invalid': fieldState.invalid})}\r\n                            style={{width: '50%'}}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </span>\r\n                    {getFormErrorMessage('clusterName')}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-col-12 p-md-6\">\r\n                <div className=\"p-field p-grid\">\r\n                  <label htmlFor=\"firstname3\" className=\"p-col-fixed required\" style={{width: '100px'}}>\r\n                    {t('logistics.addDeliveryCluster.shipperName')}\r\n                  </label>\r\n                  <div className=\"p-col-12 p-md-10\">\r\n                    <span className=\"p-float-label\">\r\n                      <Controller\r\n                        name=\"shipper\"\r\n                        control={control}\r\n                        rules={{required: t('common:valid.validFieldRequire')}}\r\n                        render={({field, fieldState}) => (\r\n                          <Dropdown\r\n                            id=\"shipper\"\r\n                            style={{width: '50%'}}\r\n                            options={parties}\r\n                            value={shipper}\r\n                            optionValue=\"partyId\"\r\n                            optionLabel=\"combinedName\"\r\n                            itemTemplate={shipperOptionTemplate}\r\n                            filter\r\n                            showClear\r\n                            filterBy=\"combinedName\"\r\n                            onChange={(e) => setShipper(e.value)}\r\n                            appendTo={document.body}\r\n                            {...field}\r\n                            className={classNames({'p-invalid': fieldState.invalid})}\r\n                          ></Dropdown>\r\n                        )}\r\n                      />\r\n                    </span>\r\n                    {getFormErrorMessage('shipper')}\r\n                  </div>\r\n                </div>\r\n                <div className=\"p-field p-grid\">\r\n                  <label htmlFor=\"lastname3\" className=\"p-col-fixed \" style={{width: '100px'}}>\r\n                    {t('logistics.addDeliveryCluster.description')}\r\n                  </label>\r\n                  <div className=\"p-col-12 p-md-10\">\r\n                    <span className=\"p-float-label\">\r\n                      <InputTextarea style={{width: '50%'}} />\r\n                    </span>\r\n                    {getFormErrorMessage('description')}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-grid table-demo\">\r\n            <div className=\"p-col-12\">\r\n              <div>\r\n                <h6>{t('common:logistics.addDeliveryCluster.customerList')}</h6>\r\n\r\n                <DataTable\r\n                  value={customers}\r\n                  dataKey=\"partyId\"\r\n                  emptyMessage={t('logistics.addDeliveryCluster.emptyMessage')}\r\n                  showGridlines\r\n                  rowHover\r\n                  loading={loading}\r\n                  totalRecords={totalRecords}\r\n                  resizableColumns\r\n                  paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                  currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords}\"\r\n                  onSort={onSort}\r\n                  sortField={lazyParams.sortField}\r\n                  paginator\r\n                  first={lazyParams.first}\r\n                  rows={lazyParams.rows}\r\n                  rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n                  sortOrder={lazyParams.sortOrder}\r\n                  selection={selectedCustomers}\r\n                  onSelectionChange={(e) => setSelectedCustomers(e.value)}\r\n                >\r\n                  <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\r\n                  <Column field=\"partyId\" sortable header={t('logistics.addDeliveryCluster.customerCode')} />\r\n                  <Column field=\"toName\" sortablesortable header={t('logistics.addDeliveryCluster.customerName')} />\r\n\r\n                  <Column body={addressBodyTemplate} header={t('logistics.addDeliveryCluster.address')} />\r\n                </DataTable>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-d-flex p-jc-center\">\r\n            <div className=\"p-mr-2\">\r\n              <Button\r\n                type=\"submit\"\r\n                label={t('logistics.addDeliveryCluster.btnSave')}\r\n                icon=\"pi pi-save\"\r\n                className=\"p-mt-2\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}