{"ast":null,"code":"import _objectSpread from \"D:/eway/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"D:/eway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/eway/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\eway\\\\src\\\\components\\\\facility\\\\FacilityList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\eway\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { Dropdown } from 'primereact/dropdown';\nimport { TabView, TabPanel } from 'primereact/tabview';\nimport { FacilityService } from '../../service/FacilityService';\nimport { FacilityInfo } from './FacilityInfo';\nimport { FacilityPostalAddressList } from './FacilityPostalAddressList';\nimport { FacilityTelecomNumberList } from './FacilityTelecomNumberList';\nimport { EnumService } from '../../service/EnumService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var FacilityList = function FacilityList() {\n  _s();\n\n  var emptyFacility = {\n    \"facilityId\": \"\",\n    // \"pseudoId\": \"\",\n    \"facilityTypeEnumId\": \"\",\n    \"parentFacilityId\": \"\",\n    \"statusId\": \"\",\n    \"ownerPartyId\": \"\",\n    \"facilityName\": \"\",\n    \"facilitySize\": 0,\n    \"facilitySizeUomId\": \"\",\n    \"openedDate\": \"\",\n    \"closedDate\": \"\",\n    \"description\": \"\",\n    \"geoId\": \"\",\n    \"geoPointId\": \"\",\n    \"countyGeoId\": \"\",\n    \"stateGeoId\": \"\",\n    \"defaultDaysToShip\": 0,\n    \"toName\": \"\",\n    \"attnName\": \"\",\n    \"address1\": \"\",\n    \"unitNumber\": \"\",\n    \"city\": \"\",\n    \"cityGeoId\": \"\",\n    \"stateProvinceGeoId\": \"\",\n    \"countryGeoId\": \"\",\n    \"postalCode\": \"\",\n    \"postalCodeExt\": \"\"\n  };\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      facilities = _useState2[0],\n      setFacilities = _useState2[1];\n\n  var _useState3 = useState(emptyFacility),\n      _useState4 = _slicedToArray(_useState3, 2),\n      facility = _useState4[0],\n      setFacility = _useState4[1]; // const [selectedFacility, setSelectedFacility] = useState(null); // for single selection  onSelectionChange={(e) => setSelectedFacility(e.value)} \n  // const [submitted, setSubmitted] = useState(false);\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      createFacilityDialog = _useState6[0],\n      setCreateFacilityDialog = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      facilityDetailDialog = _useState8[0],\n      setFacilityDetailDialog = _useState8[1];\n\n  var toast = useRef(null);\n  var dt = useRef(null);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // table lazy\n\n\n  var _useState9 = useState({\n    first: 0,\n    rows: 10,\n    page: 0,\n    filters: {},\n    // presort\n    sortField: \"facilityId\",\n    sortOrder: -1\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lazyParams = _useState10[0],\n      setLazyParams = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      totalRecords = _useState14[0],\n      setTotalRecords = _useState14[1];\n\n  var loadLazyTimeout = null; //\n\n  var _useState15 = useState([{}]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      facilityTypes = _useState16[0],\n      setFacilityTypes = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedFacilityType = _useState18[0],\n      setSelectedFacilityType = _useState18[1]; //\n\n\n  useEffect(function () {\n    var enumService = new EnumService();\n\n    var getFacilityTypes = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                enumService.getFacilityTypes().then(function (data) {\n                  setFacilityTypes(data.enumList);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getFacilityTypes() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getFacilityTypes();\n    return function () {\n      setFacilityTypes([{}]);\n    };\n  }, []);\n  useEffect(function () {\n    var facilityService = new FacilityService();\n\n    var loadLazyData = function loadLazyData() {\n      setLoading(true);\n\n      if (loadLazyTimeout) {\n        clearTimeout(loadLazyTimeout);\n      } //imitate delay of a backend call\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n      loadLazyTimeout = setTimeout(function () {\n        facilityService.getFacilities(transformRequest()).then(function (data) {\n          setTotalRecords(data.totalRecords);\n          setFacilities(data.facilityList);\n          setLoading(false);\n        });\n      }, Math.random() * 1000 + 250);\n    };\n\n    loadLazyData();\n  }, [lazyParams]);\n\n  var transformRequest = function transformRequest() {\n    var params = {\n      pageIndex: lazyParams.page,\n      pageSize: lazyParams.rows\n    }; // sort object\n\n    if (lazyParams.sortOrder) {\n      params['orderByField'] = (lazyParams.sortOrder === -1 ? \"-\" : \"\") + lazyParams.sortField; // simple for single sort\n    } // filters object\n\n\n    if (lazyParams.filters) {\n      for (var _i = 0, _Object$entries = Object.entries(lazyParams.filters); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        params[key] = value.value; // equal for all\n      }\n    }\n\n    return params;\n  };\n\n  var openNew = function openNew() {\n    setFacility(emptyFacility); // setSubmitted(false);\n\n    setCreateFacilityDialog(true);\n  };\n\n  var hideDialog = function hideDialog() {\n    // setSubmitted(false);\n    setCreateFacilityDialog(false);\n  };\n\n  var detailFacility = function detailFacility(facility) {\n    setFacility(_objectSpread({}, facility));\n    setFacilityDetailDialog(true);\n  };\n\n  var onPage = function onPage(event) {\n    var _lazyParams = _objectSpread(_objectSpread({}, lazyParams), event);\n\n    setLazyParams(_lazyParams);\n  };\n\n  var onSort = function onSort(event) {\n    var _lazyParams = _objectSpread(_objectSpread({}, lazyParams), event);\n\n    setLazyParams(_lazyParams);\n  };\n\n  var onFilter = function onFilter(event) {\n    var _lazyParams = _objectSpread(_objectSpread({}, lazyParams), event);\n\n    _lazyParams['first'] = 0;\n    setLazyParams(_lazyParams);\n  };\n\n  var onFacilityTypeChange = function onFacilityTypeChange(e) {\n    dt.current.filter(e.value, 'facilityTypeEnumId', 'equals');\n    setSelectedFacilityType(e.value);\n  };\n\n  var rowIndexBodyTemplate = function rowIndexBodyTemplate(rowData, props) {\n    var index = parseInt(props.rowIndex + 1);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var facilityTypeBodyTemplate = function facilityTypeBodyTemplate(rowData) {\n    var _facilityTypes$find;\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: facilityTypes === null || facilityTypes === void 0 ? void 0 : (_facilityTypes$find = facilityTypes.find(function (facilityType) {\n          return facilityType.enumId === rowData.facilityTypeEnumId;\n        })) === null || _facilityTypes$find === void 0 ? void 0 : _facilityTypes$find.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var facilityIdBodyTemplate = function facilityIdBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"p-button-link\",\n        onClick: function onClick(e) {\n          return detailFacility(rowData);\n        },\n        style: {\n          color: '#2196f3'\n        },\n        children: [\" \", rowData.facilityId, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var facilityTypeFilter = /*#__PURE__*/_jsxDEV(Dropdown, {\n    value: selectedFacilityType,\n    options: facilityTypes,\n    optionLabel: \"description\",\n    optionValue: \"enumId\",\n    onChange: onFacilityTypeChange,\n    placeholder: \"Select a type\",\n    className: \"p-column-filter\",\n    showClear: true,\n    filter: true,\n    filterBy: \"description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 32\n  }, _this);\n\n  var leftContents = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"p-m-0\",\n      children: t('common:facility.facilities')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, _this);\n\n  var rightContents = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      label: t('common:facility.new'),\n      icon: \"pi pi-plus\",\n      className: \"p-button p-mr-2\",\n      onClick: openNew\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datatable-crud\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: toast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        left: leftContents,\n        right: rightContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(DataTable, {\n        ref: dt,\n        value: facilities,\n        lazy: true,\n        dataKey: \"facilityId\",\n        selectionMode: \"single\",\n        paginator: true,\n        first: lazyParams.first,\n        rows: lazyParams.rows,\n        totalRecords: totalRecords,\n        onPage: onPage,\n        onSort: onSort,\n        sortField: lazyParams.sortField,\n        sortOrder: lazyParams.sortOrder,\n        onFilter: onFilter,\n        filters: lazyParams.filters,\n        loading: loading,\n        rowsPerPageOptions: [10, 25, 50, 100],\n        paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n        currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords}\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          header: \"#\",\n          body: rowIndexBodyTemplate,\n          headerStyle: {\n            width: \"4rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"facilityId\",\n          header: t('common:facility.facilityId'),\n          sortable: true,\n          filter: true,\n          body: facilityIdBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"facilityName\",\n          header: t('common:facility.facilityName'),\n          sortable: true,\n          filter: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"facilityTypeEnumId\",\n          header: t('common:facility.facilityTypeEnumId'),\n          sortable: true,\n          filter: true,\n          body: facilityTypeBodyTemplate,\n          filterElement: facilityTypeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"ownerPartyId\",\n          header: t('common:facility.ownerPartyId'),\n          sortable: true,\n          filter: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      visible: createFacilityDialog,\n      style: {\n        width: '70vw'\n      },\n      header: t('common:facility.create'),\n      modal: true,\n      maximizable: true,\n      onHide: hideDialog,\n      children: /*#__PURE__*/_jsxDEV(FacilityInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      visible: facilityDetailDialog,\n      style: {\n        width: '70vw'\n      },\n      header: t('common:facility.detail'),\n      modal: true,\n      maximizable: true,\n      onHide: function onHide(e) {\n        return setFacilityDetailDialog(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(TabView, {\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          header: t('common:facility.basicInfo'),\n          children: facility && /*#__PURE__*/_jsxDEV(FacilityInfo, {\n            facilityId: facility.facilityId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 42\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          header: t('common:facility.address'),\n          children: facility && /*#__PURE__*/_jsxDEV(FacilityPostalAddressList, {\n            facilityId: facility.facilityId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 42\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          header: t('common:facility.phone'),\n          children: facility && /*#__PURE__*/_jsxDEV(FacilityTelecomNumberList, {\n            facilityId: facility.facilityId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 42\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FacilityList, \"5aclpuwOBeFVcSklTt9u8q9dSbw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = FacilityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilityList\");","map":{"version":3,"sources":["D:/eway/src/components/facility/FacilityList.js"],"names":["React","useState","useEffect","useRef","useTranslation","DataTable","Column","Toast","Button","Toolbar","Dialog","Dropdown","TabView","TabPanel","FacilityService","FacilityInfo","FacilityPostalAddressList","FacilityTelecomNumberList","EnumService","FacilityList","emptyFacility","facilities","setFacilities","facility","setFacility","createFacilityDialog","setCreateFacilityDialog","facilityDetailDialog","setFacilityDetailDialog","toast","dt","t","first","rows","page","filters","sortField","sortOrder","lazyParams","setLazyParams","loading","setLoading","totalRecords","setTotalRecords","loadLazyTimeout","facilityTypes","setFacilityTypes","selectedFacilityType","setSelectedFacilityType","enumService","getFacilityTypes","then","data","enumList","facilityService","loadLazyData","clearTimeout","setTimeout","getFacilities","transformRequest","facilityList","Math","random","params","pageIndex","pageSize","Object","entries","key","value","openNew","hideDialog","detailFacility","onPage","event","_lazyParams","onSort","onFilter","onFacilityTypeChange","e","current","filter","rowIndexBodyTemplate","rowData","props","index","parseInt","rowIndex","facilityTypeBodyTemplate","find","facilityType","enumId","facilityTypeEnumId","description","facilityIdBodyTemplate","color","facilityId","facilityTypeFilter","leftContents","rightContents","width"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,oBAAlC;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAC9B,MAAIC,aAAa,GAAG;AAChB,kBAAc,EADE;AAEhB;AACA,0BAAsB,EAHN;AAIhB,wBAAoB,EAJJ;AAKhB,gBAAY,EALI;AAMhB,oBAAgB,EANA;AAOhB,oBAAgB,EAPA;AAQhB,oBAAgB,CARA;AAShB,yBAAqB,EATL;AAUhB,kBAAc,EAVE;AAWhB,kBAAc,EAXE;AAYhB,mBAAe,EAZC;AAahB,aAAS,EAbO;AAchB,kBAAc,EAdE;AAehB,mBAAe,EAfC;AAgBhB,kBAAc,EAhBE;AAiBhB,yBAAqB,CAjBL;AAkBhB,cAAU,EAlBM;AAmBhB,gBAAY,EAnBI;AAoBhB,gBAAY,EApBI;AAqBhB,kBAAc,EArBE;AAsBhB,YAAQ,EAtBQ;AAuBhB,iBAAa,EAvBG;AAwBhB,0BAAsB,EAxBN;AAyBhB,oBAAgB,EAzBA;AA0BhB,kBAAc,EA1BE;AA2BhB,qBAAiB;AA3BD,GAApB;;AA8BA,kBAAoCnB,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAOoB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAgCrB,QAAQ,CAACmB,aAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB,iBAhC8B,CAiC9B;AAEA;;;AACA,mBAAwDvB,QAAQ,CAAC,KAAD,CAAhE;AAAA;AAAA,MAAOwB,oBAAP;AAAA,MAA6BC,uBAA7B;;AACA,mBAAwDzB,QAAQ,CAAC,KAAD,CAAhE;AAAA;AAAA,MAAO0B,oBAAP;AAAA,MAA6BC,uBAA7B;;AAEA,MAAMC,KAAK,GAAG1B,MAAM,CAAC,IAAD,CAApB;AACA,MAAM2B,EAAE,GAAG3B,MAAM,CAAC,IAAD,CAAjB;;AACA,wBAAcC,cAAc,EAA5B;AAAA,MAAQ2B,CAAR,mBAAQA,CAAR,CAzC8B,CA2C9B;;;AACA,mBAAoC9B,QAAQ,CAAC;AACzC+B,IAAAA,KAAK,EAAE,CADkC;AAEzCC,IAAAA,IAAI,EAAE,EAFmC;AAGzCC,IAAAA,IAAI,EAAE,CAHmC;AAIzCC,IAAAA,OAAO,EAAE,EAJgC;AAKzC;AACAC,IAAAA,SAAS,EAAE,YAN8B;AAOzCC,IAAAA,SAAS,EAAE,CAAC;AAP6B,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AASA,oBAA8BtC,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOuC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAAwCxC,QAAQ,CAAC,CAAD,CAAhD;AAAA;AAAA,MAAOyC,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAIC,eAAe,GAAG,IAAtB,CAvD8B,CAyD9B;;AACA,oBAA0C3C,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlD;AAAA;AAAA,MAAO4C,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAAwD7C,QAAQ,CAAC,EAAD,CAAhE;AAAA;AAAA,MAAO8C,oBAAP;AAAA,MAA6BC,uBAA7B,kBA3D8B,CA6D9B;;;AAEA9C,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAM+C,WAAW,GAAG,IAAI/B,WAAJ,EAApB;;AAEA,QAAMgC,gBAAgB;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AACrBD,gBAAAA,WAAW,CAACC,gBAAZ,GAA+BC,IAA/B,CAAoC,UAAAC,IAAI,EAAI;AAACN,kBAAAA,gBAAgB,CAACM,IAAI,CAACC,QAAN,CAAhB;AAAgC,iBAA7E;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAhBH,gBAAgB;AAAA;AAAA;AAAA,OAAtB;;AAIAA,IAAAA,gBAAgB;AAChB,WAAO,YAAO;AACVJ,MAAAA,gBAAgB,CAAC,CAAC,EAAD,CAAD,CAAhB;AACH,KAFD;AAGH,GAXQ,EAWP,EAXO,CAAT;AAaA5C,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMoD,eAAe,GAAG,IAAIxC,eAAJ,EAAxB;;AAEA,QAAMyC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBd,MAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAIG,eAAJ,EAAqB;AACjBY,QAAAA,YAAY,CAACZ,eAAD,CAAZ;AACH,OALsB,CAOvB;AACA;;;AACAA,MAAAA,eAAe,GAAGa,UAAU,CAAC,YAAM;AAC3BH,QAAAA,eAAe,CAACI,aAAhB,CAA8BC,gBAAgB,EAA9C,EAAkDR,IAAlD,CAAuD,UAAAC,IAAI,EAAI;AAC/DT,UAAAA,eAAe,CAACS,IAAI,CAACV,YAAN,CAAf;AACApB,UAAAA,aAAa,CAAC8B,IAAI,CAACQ,YAAN,CAAb;AACAnB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH,SAJG;AAKP,OAN2B,EAMzBoB,IAAI,CAACC,MAAL,KAAgB,IAAhB,GAAuB,GANE,CAA5B;AAOH,KAhBD;;AAkBAP,IAAAA,YAAY;AACf,GAtBQ,EAsBP,CAACjB,UAAD,CAtBO,CAAT;;AAwBA,MAAMqB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,QAAII,MAAM,GAAG;AACTC,MAAAA,SAAS,EAAE1B,UAAU,CAACJ,IADb;AAET+B,MAAAA,QAAQ,EAAE3B,UAAU,CAACL;AAFZ,KAAb,CAD2B,CAK3B;;AACA,QAAGK,UAAU,CAACD,SAAd,EAAwB;AACpB0B,MAAAA,MAAM,CAAC,cAAD,CAAN,GAAyB,CAACzB,UAAU,CAACD,SAAX,KAAyB,CAAC,CAA1B,GAA6B,GAA7B,GAAiC,EAAlC,IAAwCC,UAAU,CAACF,SAA5E,CADoB,CACkE;AACzF,KAR0B,CAS3B;;;AACA,QAAGE,UAAU,CAACH,OAAd,EAAsB;AAClB,yCAAyB+B,MAAM,CAACC,OAAP,CAAe7B,UAAU,CAACH,OAA1B,CAAzB,qCAA6D;AAAxD;AAAA,YAAKiC,GAAL;AAAA,YAAUC,KAAV;;AACDN,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcC,KAAK,CAACA,KAApB,CADyD,CAC7B;AAC/B;AACJ;;AACD,WAAON,MAAP;AACH,GAhBD;;AAkBA,MAAMO,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB9C,IAAAA,WAAW,CAACJ,aAAD,CAAX,CADkB,CAElB;;AACAM,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,GAJD;;AAMA,MAAM6C,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB;AACA7C,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACH,GAHD;;AAKA,MAAM8C,cAAc,GAAG,SAAjBA,cAAiB,CAACjD,QAAD,EAAc;AACjCC,IAAAA,WAAW,mBAAKD,QAAL,EAAX;AACAK,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,GAHD;;AAKA,MAAM6C,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,QAAIC,WAAW,mCAAQrC,UAAR,GAAuBoC,KAAvB,CAAf;;AACAnC,IAAAA,aAAa,CAACoC,WAAD,CAAb;AACH,GAHD;;AAKA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACF,KAAD,EAAW;AACtB,QAAIC,WAAW,mCAAQrC,UAAR,GAAuBoC,KAAvB,CAAf;;AACAnC,IAAAA,aAAa,CAACoC,WAAD,CAAb;AACH,GAHD;;AAKA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAACH,KAAD,EAAW;AACxB,QAAIC,WAAW,mCAAQrC,UAAR,GAAuBoC,KAAvB,CAAf;;AACAC,IAAAA,WAAW,CAAC,OAAD,CAAX,GAAuB,CAAvB;AACApC,IAAAA,aAAa,CAACoC,WAAD,CAAb;AACH,GAJD;;AAMA,MAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,CAAD,EAAO;AAChCjD,IAAAA,EAAE,CAACkD,OAAH,CAAWC,MAAX,CAAkBF,CAAC,CAACV,KAApB,EAA2B,oBAA3B,EAAiD,QAAjD;AACArB,IAAAA,uBAAuB,CAAC+B,CAAC,CAACV,KAAH,CAAvB;AACH,GAHD;;AAKA,MAAMa,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD,EAAUC,KAAV,EAAoB;AAC7C,QAAIC,KAAK,GAAGC,QAAQ,CAACF,KAAK,CAACG,QAAN,GAAiB,CAAlB,CAApB;AACA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI;AAAA,kBAAOF;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ;AAKH,GAPD;;AASA,MAAMG,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACL,OAAD,EAAa;AAAA;;AAC1C,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACQ;AAAA,kBACKtC,aADL,aACKA,aADL,8CACKA,aAAa,CAAE4C,IAAf,CAAoB,UAAAC,YAAY;AAAA,iBAAIA,YAAY,CAACC,MAAb,KAAwBR,OAAO,CAACS,kBAApC;AAAA,SAAhC,CADL,wDACK,oBAAyFC;AAD9F;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,aADJ;AAOH,GARD;;AAUA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACX,OAAD,EAAa;AACxC,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,OAAO,EAAE,iBAACJ,CAAD;AAAA,iBAAOP,cAAc,CAACW,OAAD,CAArB;AAAA,SAAzC;AAAyE,QAAA,KAAK,EAAE;AAACY,UAAAA,KAAK,EAAE;AAAR,SAAhF;AAAA,wBAAsGZ,OAAO,CAACa,UAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ;AAKH,GAND;;AAQA,MAAMC,kBAAkB,gBAAG,QAAC,QAAD;AAAU,IAAA,KAAK,EAAElD,oBAAjB;AAAuC,IAAA,OAAO,EAAEF,aAAhD;AAA+D,IAAA,WAAW,EAAC,aAA3E;AAAyF,IAAA,WAAW,EAAC,QAArG;AAA8G,IAAA,QAAQ,EAAEiC,oBAAxH;AAA8I,IAAA,WAAW,EAAC,eAA1J;AAA0K,IAAA,SAAS,EAAC,iBAApL;AAAsM,IAAA,SAAS,MAA/M;AAAgN,IAAA,MAAM,MAAtN;AAAuN,IAAA,QAAQ,EAAC;AAAhO;AAAA;AAAA;AAAA;AAAA,WAA3B;;AAEA,MAAMoB,YAAY,gBACd,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBnE,CAAC,CAAC,4BAAD;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;;AAMA,MAAMoE,aAAa,gBACf,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEpE,CAAC,CAAC,qBAAD,CAAhB;AAAyC,MAAA,IAAI,EAAC,YAA9C;AAA2D,MAAA,SAAS,EAAC,iBAArE;AAAuF,MAAA,OAAO,EAAEuC;AAAhG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAEzC;AAAZ;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEqE,YAAf;AAA6B,QAAA,KAAK,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,GAAG,EAAErE,EAAhB;AAAoB,QAAA,KAAK,EAAET,UAA3B;AAAuC,QAAA,IAAI,MAA3C;AAA4C,QAAA,OAAO,EAAC,YAApD;AACI,QAAA,aAAa,EAAC,QADlB;AAEI,QAAA,SAAS,MAFb;AAEc,QAAA,KAAK,EAAEiB,UAAU,CAACN,KAFhC;AAEuC,QAAA,IAAI,EAAEM,UAAU,CAACL,IAFxD;AAE8D,QAAA,YAAY,EAAES,YAF5E;AAE0F,QAAA,MAAM,EAAE+B,MAFlG;AAGI,QAAA,MAAM,EAAEG,MAHZ;AAGoB,QAAA,SAAS,EAAEtC,UAAU,CAACF,SAH1C;AAGqD,QAAA,SAAS,EAAEE,UAAU,CAACD,SAH3E;AAII,QAAA,QAAQ,EAAEwC,QAJd;AAIwB,QAAA,OAAO,EAAEvC,UAAU,CAACH,OAJ5C;AAIqD,QAAA,OAAO,EAAEK,OAJ9D;AAKI,QAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,CALxB;AAMI,QAAA,iBAAiB,EAAC,sGANtB;AAOI,QAAA,yBAAyB,EAAC,6CAP9B;AAAA,gCAQI,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,GAAf;AAAmB,UAAA,IAAI,EAAE0C,oBAAzB;AAA+C,UAAA,WAAW,EAAE;AAAEkB,YAAAA,KAAK,EAAE;AAAT;AAA5D;AAAA;AAAA;AAAA;AAAA,iBARJ,eASI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,YAAd;AAA2B,UAAA,MAAM,EAAErE,CAAC,CAAC,4BAAD,CAApC;AAAoE,UAAA,QAAQ,MAA5E;AAA6E,UAAA,MAAM,MAAnF;AAAoF,UAAA,IAAI,EAAE+D;AAA1F;AAAA;AAAA;AAAA;AAAA,iBATJ,eAUI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,cAAd;AAA6B,UAAA,MAAM,EAAE/D,CAAC,CAAC,8BAAD,CAAtC;AAAwE,UAAA,QAAQ,MAAhF;AAAiF,UAAA,MAAM;AAAvF;AAAA;AAAA;AAAA;AAAA,iBAVJ,eAWI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,oBAAd;AAAmC,UAAA,MAAM,EAAEA,CAAC,CAAC,oCAAD,CAA5C;AAAoF,UAAA,QAAQ,MAA5F;AAA6F,UAAA,MAAM,MAAnG;AAAoG,UAAA,IAAI,EAAEyD,wBAA1G;AAAoI,UAAA,aAAa,EAAES;AAAnJ;AAAA;AAAA;AAAA;AAAA,iBAXJ,eAYI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,cAAd;AAA6B,UAAA,MAAM,EAAElE,CAAC,CAAC,8BAAD,CAAtC;AAAwE,UAAA,QAAQ,MAAhF;AAAiF,UAAA,MAAM;AAAvF;AAAA;AAAA;AAAA;AAAA,iBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAoBI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,oBAAjB;AAAuC,MAAA,KAAK,EAAE;AAAE2E,QAAAA,KAAK,EAAE;AAAT,OAA9C;AAAiE,MAAA,MAAM,EAAErE,CAAC,CAAC,wBAAD,CAA1E;AAAsG,MAAA,KAAK,MAA3G;AAA4G,MAAA,WAAW,MAAvH;AAAwH,MAAA,MAAM,EAAEwC,UAAhI;AAAA,6BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aApBJ,eAwBI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE5C,oBAAjB;AAAuC,MAAA,KAAK,EAAE;AAAEyE,QAAAA,KAAK,EAAE;AAAT,OAA9C;AAAiE,MAAA,MAAM,EAAErE,CAAC,CAAC,wBAAD,CAA1E;AAAsG,MAAA,KAAK,MAA3G;AAA4G,MAAA,WAAW,MAAvH;AAAwH,MAAA,MAAM,EAAE,gBAACgD,CAAD;AAAA,eAAOnD,uBAAuB,CAAC,KAAD,CAA9B;AAAA,OAAhI;AAAA,6BACQ,QAAC,OAAD;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,MAAM,EAAEG,CAAC,CAAC,2BAAD,CAAnB;AAAA,oBACKR,QAAQ,iBAAI,QAAC,YAAD;AAAc,YAAA,UAAU,EAAEA,QAAQ,CAACyE;AAAnC;AAAA;AAAA;AAAA;AAAA;AADjB;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII,QAAC,QAAD;AAAU,UAAA,MAAM,EAAEjE,CAAC,CAAC,yBAAD,CAAnB;AAAA,oBACKR,QAAQ,iBAAI,QAAC,yBAAD;AAA2B,YAAA,UAAU,EAAEA,QAAQ,CAACyE;AAAhD;AAAA;AAAA;AAAA;AAAA;AADjB;AAAA;AAAA;AAAA;AAAA,iBAJJ,eAOI,QAAC,QAAD;AAAU,UAAA,MAAM,EAAEjE,CAAC,CAAC,uBAAD,CAAnB;AAAA,oBACKR,QAAQ,iBAAI,QAAC,yBAAD;AAA2B,YAAA,UAAU,EAAEA,QAAQ,CAACyE;AAAhD;AAAA;AAAA;AAAA;AAAA;AADjB;AAAA;AAAA;AAAA;AAAA,iBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,aAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAyCH,CA7OM;;GAAM7E,Y;UAyCKf,c;;;KAzCLe,Y","sourcesContent":["\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { TabView, TabPanel } from 'primereact/tabview';\r\n\r\nimport { FacilityService } from '../../service/FacilityService';\r\nimport { FacilityInfo } from './FacilityInfo';\r\nimport { FacilityPostalAddressList } from './FacilityPostalAddressList';\r\nimport { FacilityTelecomNumberList } from './FacilityTelecomNumberList';\r\nimport { EnumService } from '../../service/EnumService';\r\n\r\nexport const FacilityList = () => {\r\n    let emptyFacility = {\r\n        \"facilityId\": \"\",\r\n        // \"pseudoId\": \"\",\r\n        \"facilityTypeEnumId\": \"\",\r\n        \"parentFacilityId\": \"\",\r\n        \"statusId\": \"\",\r\n        \"ownerPartyId\": \"\",\r\n        \"facilityName\": \"\",\r\n        \"facilitySize\": 0,\r\n        \"facilitySizeUomId\": \"\",\r\n        \"openedDate\": \"\",\r\n        \"closedDate\": \"\",\r\n        \"description\": \"\",\r\n        \"geoId\": \"\",\r\n        \"geoPointId\": \"\",\r\n        \"countyGeoId\": \"\",\r\n        \"stateGeoId\": \"\",\r\n        \"defaultDaysToShip\": 0,\r\n        \"toName\": \"\",\r\n        \"attnName\": \"\",\r\n        \"address1\": \"\",\r\n        \"unitNumber\": \"\",\r\n        \"city\": \"\",\r\n        \"cityGeoId\": \"\",\r\n        \"stateProvinceGeoId\": \"\",\r\n        \"countryGeoId\": \"\",\r\n        \"postalCode\": \"\",\r\n        \"postalCodeExt\": \"\",\r\n    };\r\n\r\n    const [facilities, setFacilities] = useState(null);\r\n    const [facility, setFacility] = useState(emptyFacility);\r\n    // const [selectedFacility, setSelectedFacility] = useState(null); // for single selection  onSelectionChange={(e) => setSelectedFacility(e.value)} \r\n\r\n    // const [submitted, setSubmitted] = useState(false);\r\n    const [createFacilityDialog, setCreateFacilityDialog] = useState(false);\r\n    const [facilityDetailDialog, setFacilityDetailDialog] = useState(false);\r\n\r\n    const toast = useRef(null);\r\n    const dt = useRef(null);\r\n    const { t } = useTranslation();\r\n\r\n    // table lazy\r\n    const [lazyParams, setLazyParams] = useState({\r\n        first: 0,\r\n        rows: 10,\r\n        page: 0,\r\n        filters: {},\r\n        // presort\r\n        sortField: \"facilityId\",\r\n        sortOrder: -1\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    let loadLazyTimeout = null;\r\n\r\n    //\r\n    const [facilityTypes, setFacilityTypes] = useState([{}]);\r\n    const [selectedFacilityType, setSelectedFacilityType] = useState({});\r\n\r\n    //\r\n\r\n    useEffect(() => {\r\n        const enumService = new EnumService();\r\n\r\n        const getFacilityTypes = async() =>{\r\n            enumService.getFacilityTypes().then(data => {setFacilityTypes(data.enumList)});\r\n        }\r\n\r\n        getFacilityTypes();\r\n        return ()  => {\r\n            setFacilityTypes([{}]);\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        const facilityService = new FacilityService();\r\n\r\n        const loadLazyData = () => {\r\n            setLoading(true);\r\n    \r\n            if (loadLazyTimeout) {\r\n                clearTimeout(loadLazyTimeout);\r\n            }\r\n    \r\n            //imitate delay of a backend call\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            loadLazyTimeout = setTimeout(() => {\r\n                    facilityService.getFacilities(transformRequest()).then(data => {\r\n                    setTotalRecords(data.totalRecords);\r\n                    setFacilities(data.facilityList);\r\n                    setLoading(false);\r\n                });\r\n            }, Math.random() * 1000 + 250);\r\n        }\r\n\r\n        loadLazyData();\r\n    },[lazyParams]);\r\n\r\n    const transformRequest = () => {\r\n        let params = {\r\n            pageIndex: lazyParams.page,\r\n            pageSize: lazyParams.rows\r\n        }\r\n        // sort object\r\n        if(lazyParams.sortOrder){\r\n            params['orderByField'] = (lazyParams.sortOrder === -1? \"-\":\"\") + lazyParams.sortField // simple for single sort\r\n        }\r\n        // filters object\r\n        if(lazyParams.filters){\r\n            for (let [key, value] of Object.entries(lazyParams.filters)) {\r\n                params[key] = value.value ; // equal for all\r\n            }\r\n        }\r\n        return params;\r\n    }\r\n\r\n    const openNew = () => {\r\n        setFacility(emptyFacility);\r\n        // setSubmitted(false);\r\n        setCreateFacilityDialog(true);\r\n    }\r\n\r\n    const hideDialog = () => {\r\n        // setSubmitted(false);\r\n        setCreateFacilityDialog(false);\r\n    }\r\n\r\n    const detailFacility = (facility) => {\r\n        setFacility({...facility});\r\n        setFacilityDetailDialog(true);\r\n    }\r\n\r\n    const onPage = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onSort = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onFilter = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        _lazyParams['first'] = 0;\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onFacilityTypeChange = (e) => {\r\n        dt.current.filter(e.value, 'facilityTypeEnumId', 'equals');\r\n        setSelectedFacilityType(e.value);\r\n    }\r\n    \r\n    const rowIndexBodyTemplate = (rowData, props) => {\r\n        let index = parseInt(props.rowIndex + 1);\r\n        return (\r\n            <React.Fragment>\r\n                <span>{index}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const facilityTypeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                    <span>\r\n                        {facilityTypes?.find(facilityType => facilityType.enumId === rowData.facilityTypeEnumId)?.description}\r\n                    </span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const facilityIdBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-button-link\" onClick={(e) => detailFacility(rowData)} style={{color: '#2196f3'}}> {rowData.facilityId} </span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const facilityTypeFilter = <Dropdown value={selectedFacilityType} options={facilityTypes} optionLabel=\"description\" optionValue=\"enumId\" onChange={onFacilityTypeChange} placeholder=\"Select a type\" className=\"p-column-filter\" showClear filter filterBy=\"description\"/>;\r\n\r\n    const leftContents = (\r\n        <React.Fragment>\r\n            <h5 className='p-m-0'>{t('common:facility.facilities')}</h5>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const rightContents = (\r\n        <React.Fragment>\r\n            <Button label={t('common:facility.new')} icon=\"pi pi-plus\" className=\"p-button p-mr-2\" onClick={openNew} />\r\n        </React.Fragment>\r\n    );\r\n \r\n    return (\r\n        <div className=\"datatable-crud\">\r\n            <div className=\"card\">\r\n                <Toast ref={toast} />\r\n                <Toolbar left={leftContents} right={rightContents} />\r\n                <DataTable ref={dt} value={facilities} lazy dataKey=\"facilityId\"\r\n                    selectionMode=\"single\"\r\n                    paginator first={lazyParams.first} rows={lazyParams.rows} totalRecords={totalRecords} onPage={onPage}\r\n                    onSort={onSort} sortField={lazyParams.sortField} sortOrder={lazyParams.sortOrder}\r\n                    onFilter={onFilter} filters={lazyParams.filters} loading={loading}\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords}\">\r\n                    <Column header=\"#\" body={rowIndexBodyTemplate} headerStyle={{ width: \"4rem\" }}/>\r\n                    <Column field=\"facilityId\" header={t('common:facility.facilityId')} sortable filter body={facilityIdBodyTemplate}></Column>\r\n                    <Column field=\"facilityName\" header={t('common:facility.facilityName')} sortable filter></Column>\r\n                    <Column field=\"facilityTypeEnumId\" header={t('common:facility.facilityTypeEnumId')} sortable filter body={facilityTypeBodyTemplate} filterElement={facilityTypeFilter} ></Column>\r\n                    <Column field=\"ownerPartyId\" header={t('common:facility.ownerPartyId')} sortable filter></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={createFacilityDialog} style={{ width: '70vw' }} header={t('common:facility.create')} modal maximizable onHide={hideDialog}>\r\n                <FacilityInfo />\r\n            </Dialog>\r\n\r\n            <Dialog visible={facilityDetailDialog} style={{ width: '70vw' }} header={t('common:facility.detail')} modal maximizable onHide={(e) => setFacilityDetailDialog(false)}>\r\n                    <TabView>\r\n                        <TabPanel header={t('common:facility.basicInfo')}>\r\n                            {facility && <FacilityInfo facilityId={facility.facilityId}/>}\r\n                        </TabPanel>\r\n                        <TabPanel header={t('common:facility.address')}>\r\n                            {facility && <FacilityPostalAddressList facilityId={facility.facilityId}/>}\r\n                        </TabPanel>\r\n                        <TabPanel header={t('common:facility.phone')}>\r\n                            {facility && <FacilityTelecomNumberList facilityId={facility.facilityId}/>}\r\n                        </TabPanel>\r\n                    </TabView>\r\n            </Dialog>\r\n\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}