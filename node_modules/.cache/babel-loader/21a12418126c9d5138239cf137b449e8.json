{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0110A\\\\src\\\\components\\\\utils\\\\DateFormat.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var DateFormat = function DateFormat(props) {\n  _s();\n\n  var value = props.value,\n      onlyDate = props.onlyDate;\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var format = function format() {\n    var format = 'DD/MM/YYYY HH:mm';\n    format = i18n.language === \"vi\" ? 'DD/MM/YYYY HH:mm' : 'MM/DD/YYYY HH:mm';\n\n    if (onlyDate) {\n      format = i18n.language === \"vi\" ? 'DD/MM/YYYY' : 'MM/DD/YYYY';\n    }\n\n    return format;\n  };\n\n  new Intl.NumberFormat(i18n.language === \"vi\" ? \"vi-VN\" : \"en-US\", {}).format(value);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: value != null && /*#__PURE__*/_jsxDEV(Moment, {\n      format: format(),\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 31\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(DateFormat, \"9F94k15HcPTZUlG5WJ6hySC2iEY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DateFormat;\nDateFormat.propTypes = {\n  value: PropTypes.number,\n  onlyDate: PropTypes.bool\n};\nDateFormat.defaultProps = {\n  onlyDate: false\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DateFormat\");","map":{"version":3,"sources":["D:/ĐA/src/components/utils/DateFormat.js"],"names":["React","PropTypes","useTranslation","Moment","DateFormat","props","value","onlyDate","i18n","format","language","Intl","NumberFormat","propTypes","number","bool","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAEnC,MAAOC,KAAP,GAA0BD,KAA1B,CAAOC,KAAP;AAAA,MAAcC,QAAd,GAA0BF,KAA1B,CAAcE,QAAd;;AAEA,wBAAeL,cAAc,EAA7B;AAAA,MAAOM,IAAP,mBAAOA,IAAP;;AAEA,MAAMC,MAAM,GAAG,kBAAM;AACnB,QAAIA,MAAM,GAAG,kBAAb;AACAA,IAAAA,MAAM,GAAGD,IAAI,CAACE,QAAL,KAAkB,IAAlB,GAAwB,kBAAxB,GAA4C,kBAArD;;AACA,QAAGH,QAAH,EAAY;AACVE,MAAAA,MAAM,GAAGD,IAAI,CAACE,QAAL,KAAkB,IAAlB,GAAwB,YAAxB,GAAsC,YAA/C;AACD;;AACD,WAAOD,MAAP;AACD,GAPD;;AAQE,MAAIE,IAAI,CAACC,YAAT,CAAsBJ,IAAI,CAACE,QAAL,KAAkB,IAAlB,GAAyB,OAAzB,GAAmC,OAAzD,EAAkE,EAAlE,EAAsED,MAAtE,CAA6EH,KAA7E;AAEF,sBACI;AAAA,cAAOA,KAAK,IAAI,IAAT,iBAAiB,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEG,MAAM,EAAtB;AAAA,gBAA2BH;AAA3B;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,WADJ;AAGD,CAnBM;;GAAMF,U;UAIIF,c;;;KAJJE,U;AAqBbA,UAAU,CAACS,SAAX,GAAwB;AACtBP,EAAAA,KAAK,EAAEL,SAAS,CAACa,MADK;AAEtBP,EAAAA,QAAQ,EAAEN,SAAS,CAACc;AAFE,CAAxB;AAKAX,UAAU,CAACY,YAAX,GAA0B;AACxBT,EAAAA,QAAQ,EAAE;AADc,CAA1B","sourcesContent":["import React, { } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useTranslation} from 'react-i18next';\r\nimport Moment from 'react-moment';\r\n\r\nexport const DateFormat = (props) => {\r\n\r\n  const {value, onlyDate} = props;\r\n\r\n  const {i18n} = useTranslation();\r\n\r\n  const format = () => {\r\n    let format = 'DD/MM/YYYY HH:mm';\r\n    format = i18n.language === \"vi\"? 'DD/MM/YYYY HH:mm': 'MM/DD/YYYY HH:mm';\r\n    if(onlyDate){\r\n      format = i18n.language === \"vi\"? 'DD/MM/YYYY': 'MM/DD/YYYY';\r\n    }\r\n    return format;\r\n  }\r\n    new Intl.NumberFormat(i18n.language === \"vi\" ? \"vi-VN\" : \"en-US\", {}).format(value);\r\n\r\n  return (\r\n      <span>{value != null && <Moment format={format()}>{value}</Moment>}</span>\r\n  );\r\n}\r\n\r\nDateFormat.propTypes  = {\r\n  value: PropTypes.number,\r\n  onlyDate: PropTypes.bool\r\n};\r\n\r\nDateFormat.defaultProps = {\r\n  onlyDate: false\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}