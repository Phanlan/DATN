{"ast":null,"code":"import _asyncToGenerator from \"D:/eway/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/eway/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\eway\\\\src\\\\pages\\\\SalesDashboard\\\\ProductValueBarChart.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"D:\\\\eway\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'primereact/button';\nimport { BarChart } from '../../components/Report';\nimport { SalesReportService } from '../../service/SalesReportService';\nimport { DialogDateProduct } from './Dialog/DialogDateProduct';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var ProductValueBarChart = function ProductValueBarChart(props) {\n  _s();\n\n  var options = props.options,\n      cycles = props.cycles,\n      storeItems = props.storeItems,\n      height = props.height;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      display = _useState4[0],\n      setDisplay = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      top = _useState6[0],\n      setTop = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filter = _useState8[0],\n      setFilter = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      store = _useState10[0],\n      setStore = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      option = _useState12[0],\n      setOption = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      cycle = _useState14[0],\n      setCycle = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fromDate = _useState16[0],\n      setFromDate = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      toDate = _useState18[0],\n      setToDate = _useState18[1];\n\n  var _useTranslation = useTranslation('common'),\n      _useTranslation2 = _slicedToArray(_useTranslation, 1),\n      t = _useTranslation2[0];\n\n  var tops = [{\n    name: 5,\n    code: 5\n  }, {\n    name: 10,\n    code: 10\n  }, {\n    name: 15,\n    code: 15\n  }, {\n    name: 20,\n    code: 20\n  }];\n  var filters = [{\n    name: t('report.highestQuantity'),\n    code: 'desc'\n  }, {\n    name: t('report.lowestQuantity'),\n    code: 'asc'\n  }];\n  var init = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var endDate, startDate, salesReportService, params, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setOption({\n              name: t('report.option'),\n              code: 'option'\n            });\n            setCycle({\n              name: t('report.week'),\n              code: 'week'\n            });\n            setTop({\n              name: 5,\n              code: 5\n            });\n            setFilter({\n              name: t('report.highestQuantity'),\n              code: 'desc'\n            });\n            endDate = new Date();\n            startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\n            setToDate(endDate);\n            setFromDate(startDate);\n            salesReportService = new SalesReportService();\n            params = {\n              startDate: startDate.toISOString().slice(0, 10),\n              endDate: endDate.toISOString().slice(0, 10),\n              dateType: 'week'\n            };\n            _context.next = 12;\n            return salesReportService.olapChartColTopTorProductMini(params);\n\n          case 12:\n            res = _context.sent;\n            res.datasets[0].label = t('report.salesValue');\n            setData(res); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  useEffect(function () {\n    init(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var search = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var salesReportService, params, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            salesReportService = new SalesReportService();\n            params = {\n              startDate: fromDate.toISOString().slice(0, 10),\n              endDate: toDate.toISOString().slice(0, 10),\n              dateType: cycle.code,\n              productStoreId: store === null || store === void 0 ? void 0 : store.code,\n              top: top === null || top === void 0 ? void 0 : top.code,\n              sort: filter === null || filter === void 0 ? void 0 : filter.code\n            };\n            _context2.next = 4;\n            return salesReportService.olapChartColTopTorProductMini(params);\n\n          case 4:\n            res = _context2.sent;\n            res.datasets[0].label = t('report.salesValue');\n            setData(res);\n            setDisplay(false);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [fromDate, toDate, cycle, store, top, filter, t]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card height-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: t('report.olapChartColTopTorProductMini')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: \"pi pi-cog\",\n          onClick: function onClick() {\n            return setDisplay(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(BarChart, {\n        data: data,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(DialogDateProduct, {\n      tops: tops,\n      filters: filters,\n      cycles: cycles,\n      storeItems: storeItems,\n      search: search,\n      options: options,\n      display: display,\n      setDisplay: setDisplay,\n      store: store,\n      setStore: setStore,\n      option: option,\n      setOption: setOption,\n      cycle: cycle,\n      setCycle: setCycle,\n      fromDate: fromDate,\n      setFromDate: setFromDate,\n      toDate: toDate,\n      setToDate: setToDate,\n      top: top,\n      setTop: setTop,\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ProductValueBarChart, \"AFGH94ZvhnfOEdQGD4WsgEGE080=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ProductValueBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductValueBarChart\");","map":{"version":3,"sources":["D:/eway/src/pages/SalesDashboard/ProductValueBarChart.js"],"names":["React","useCallback","useEffect","useState","useTranslation","Button","BarChart","SalesReportService","DialogDateProduct","ProductValueBarChart","props","options","cycles","storeItems","height","data","setData","display","setDisplay","top","setTop","filter","setFilter","store","setStore","option","setOption","cycle","setCycle","fromDate","setFromDate","toDate","setToDate","t","tops","name","code","filters","init","endDate","Date","startDate","getFullYear","getMonth","salesReportService","params","toISOString","slice","dateType","olapChartColTopTorProductMini","res","datasets","label","search","productStoreId","sort"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Button } from 'primereact/button';\r\n\r\nimport { BarChart } from '../../components/Report';\r\n\r\nimport { SalesReportService } from '../../service/SalesReportService';\r\n\r\nimport { DialogDateProduct } from './Dialog/DialogDateProduct';\r\n\r\nexport const ProductValueBarChart = (props) => {\r\n    const { options, cycles, storeItems, height } = props;\r\n\r\n    const [data, setData ] = useState({});\r\n    const [display, setDisplay] = useState(false);\r\n\r\n    const [top, setTop] = useState({});\r\n    const [filter, setFilter] = useState();\r\n    const [store, setStore] = useState({});\r\n    const [option, setOption] = useState();\r\n    const [cycle, setCycle] = useState({});\r\n    const [fromDate, setFromDate] = useState(null);\r\n    const [toDate, setToDate] = useState(null);\r\n\r\n    const [ t ] = useTranslation('common');\r\n\r\n    const tops = [{name: 5, code: 5}, {name: 10, code: 10}, {name: 15, code: 15}, {name: 20, code: 20}];\r\n    const filters = [{name: t('report.highestQuantity'), code: 'desc'}, {name: t('report.lowestQuantity'), code: 'asc'}]\r\n\r\n    const init = useCallback(async () => {\r\n\r\n        setOption({ name: t('report.option'), code: 'option' });\r\n        setCycle({ name: t('report.week'), code: 'week' });\r\n        setTop({name: 5, code: 5});\r\n        setFilter({name: t('report.highestQuantity'), code: 'desc'});\r\n\r\n        let endDate = new Date();\r\n        let startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1);\r\n        setToDate(endDate);\r\n        setFromDate(startDate);\r\n\r\n        const salesReportService = new SalesReportService();\r\n\r\n        let params = {\r\n            startDate: startDate.toISOString().slice(0,10), \r\n            endDate: endDate.toISOString().slice(0,10),\r\n            dateType: 'week'\r\n        }\r\n        let res = await salesReportService.olapChartColTopTorProductMini(params);\r\n        res.datasets[0].label = t('report.salesValue');\r\n        setData(res);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const search = useCallback(async () => {\r\n        const salesReportService = new SalesReportService();\r\n\r\n        let params = {\r\n            startDate: fromDate.toISOString().slice(0,10), \r\n            endDate: toDate.toISOString().slice(0,10),\r\n            dateType: cycle.code,\r\n            productStoreId: store?.code,\r\n            top: top?.code,\r\n            sort: filter?.code\r\n        }\r\n        let res = await salesReportService.olapChartColTopTorProductMini(params);\r\n        res.datasets[0].label = t('report.salesValue');\r\n        setData(res);\r\n        setDisplay(false);\r\n    }, [fromDate, toDate, cycle, store, top, filter, t]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card height-100\">\r\n                <div className=\"card-header\">\r\n                    <h5>{t('report.olapChartColTopTorProductMini')}</h5>\r\n                    <Button icon=\"pi pi-cog\" onClick={() => setDisplay(true)} />\r\n                </div>\r\n                <BarChart data={data} height={height} />\r\n            </div>\r\n\r\n            <DialogDateProduct \r\n                tops={tops} filters={filters}\r\n                cycles={cycles} storeItems={storeItems} \r\n                search={search} options={options} \r\n                display={display} setDisplay={setDisplay} \r\n                store={store} setStore={setStore} \r\n                option={option} setOption={setOption} \r\n                cycle={cycle} setCycle={setCycle} \r\n                fromDate={fromDate} setFromDate={setFromDate} \r\n                toDate={toDate} setToDate={setToDate} \r\n                top={top} setTop={setTop} \r\n                filter={filter} setFilter={setFilter} \r\n            />\r\n        </>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}