{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\\\u0110A\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(checkAuthSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(authSaga);\n\nimport { put, takeEvery } from '@redux-saga/core/effects';\nimport { isEmpty } from 'lodash-es';\nimport authService from '../../service/authService';\nimport { checkAuth, loginSuccess } from './action';\n\nfunction checkAuthSaga() {\n  var apiKey;\n  return _regeneratorRuntime.wrap(function checkAuthSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          apiKey = authService.getApiKeyLocalStorage();\n          console.log('aaaaaa', apiKey);\n\n          if (isEmpty(apiKey)) {\n            _context.next = 5;\n            break;\n          }\n\n          _context.next = 5;\n          return put(loginSuccess());\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport function authSaga() {\n  return _regeneratorRuntime.wrap(function authSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(checkAuth, checkAuthSaga);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["D:/ƒêA/src/redux/authen/saga.js"],"names":["checkAuthSaga","authSaga","put","takeEvery","isEmpty","authService","checkAuth","loginSuccess","apiKey","getApiKeyLocalStorage","console","log"],"mappings":";;oDAKUA,a;qDAQOC,Q;;AAbjB,SAAQC,GAAR,EAAaC,SAAb,QAA6B,0BAA7B;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,SAAR,EAAmBC,YAAnB,QAAsC,UAAtC;;AAEA,SAAUP,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACQQ,UAAAA,MADR,GACiBH,WAAW,CAACI,qBAAZ,EADjB;AAEEC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;;AAFF,cAGOJ,OAAO,CAACI,MAAD,CAHd;AAAA;AAAA;AAAA;;AAAA;AAII,iBAAMN,GAAG,CAACK,YAAY,EAAb,CAAT;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,OAAO,SAAUN,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,SAAS,CAACG,SAAD,EAAYN,aAAZ,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {put, takeEvery} from '@redux-saga/core/effects';\r\nimport {isEmpty} from 'lodash-es';\r\nimport authService from '../../service/authService';\r\nimport {checkAuth, loginSuccess} from './action';\r\n\r\nfunction* checkAuthSaga() {\r\n  const apiKey = authService.getApiKeyLocalStorage();\r\n  console.log('aaaaaa', apiKey);\r\n  if (!isEmpty(apiKey)) {\r\n    yield put(loginSuccess());\r\n  }\r\n}\r\n\r\nexport function* authSaga() {\r\n  yield takeEvery(checkAuth, checkAuthSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}