{"ast":null,"code":"import _classCallCheck from \"D:/eway/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/eway/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Const, ServiceHandle } from '../utilities';\nexport var POSService = /*#__PURE__*/function () {\n  function POSService() {\n    _classCallCheck(this, POSService);\n  }\n\n  _createClass(POSService, [{\n    key: \"getCustomerInfo\",\n    value: function getCustomerInfo(params) {\n      return ServiceHandle.get(Const.API.GetCustomerInfo_POS, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getOrderDetail\",\n    value: function getOrderDetail(params) {\n      return ServiceHandle.get(Const.API.GetOrderDetail_POS, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getOrderList\",\n    value: function getOrderList(params) {\n      return ServiceHandle.get(Const.API.GetOrderList_POS, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getPromoList\",\n    value: function getPromoList(params) {\n      return ServiceHandle.get(Const.API.GetPromoList_POS, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getPromoDetail\",\n    value: function getPromoDetail(params) {\n      return ServiceHandle.get(Const.API.GetPromoDetail_POS, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getPromoRules\",\n    value: function getPromoRules(params) {\n      return ServiceHandle.get(Const.API.GetPromoRules, {\n        params: params\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"quickSearch\",\n    value: function quickSearch(documentType, queryString) {\n      return ServiceHandle.get(Const.API.SearchProducts, {\n        params: {\n          documentType: documentType,\n          queryString: queryString\n        }\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"addOrderItem\",\n    value: function addOrderItem(productStoreId, customerPartyId, orderId, productId, quantity) {\n      return ServiceHandle.get(Const.API.AddOrderItem, {\n        params: {\n          productStoreId: productStoreId,\n          salesChannelEnumId: 'ScPos',\n          customerPartyId: customerPartyId,\n          orderId: orderId,\n          productId: productId,\n          quantity: quantity\n        }\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n    /*delete OrderItem by sending quantity 0*/\n\n  }, {\n    key: \"updateOrderItem\",\n    value: function updateOrderItem(orderId, orderItemSeqId, quantity) {\n      return ServiceHandle.post(Const.API.UpdateOrderItem, {\n        orderId: orderId,\n        orderItemSeqId: orderItemSeqId,\n        quantity: quantity\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getOrderHeader\",\n    value: function getOrderHeader(orderId) {\n      return ServiceHandle.get(Const.API.GetOrderHeader, {\n        params: {\n          orderId: orderId\n        }\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getOrderItemList\",\n    value: function getOrderItemList(orderId) {\n      return ServiceHandle.get(Const.API.GetOrderItemList, {\n        params: {\n          orderId: orderId\n        }\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getPaymentInstrumentOptions\",\n    value: function getPaymentInstrumentOptions() {\n      return ServiceHandle.get(Const.API.GetPaymentInstrumentOptions, {}).then(function (res) {\n        return res.data;\n      });\n    }\n    /*\r\n    getPaymentTypeOptions(){\r\n        return ServiceHandle.get('http://localhost:8080/rest/s1/pos/getPaymentTypeOptions',{})\r\n        .then(res => res.data);\r\n        \r\n    }\r\n    */\n\n  }, {\n    key: \"addOrderPartPayment\",\n    value: function addOrderPartPayment(orderId, paymentInstrumentEnumId, amount) {\n      return ServiceHandle.post(Const.API.AddOrderPartPayment, {\n        orderId: orderId,\n        paymentInstrumentEnumId: paymentInstrumentEnumId,\n        amount: amount\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getTentativeOrderIfAny\",\n    value: function getTentativeOrderIfAny(customerPartyId, productStoreId) {\n      return ServiceHandle.get(Const.API.GetTentativeOrderIfAny, {\n        params: {\n          customerPartyId: customerPartyId,\n          productStoreId: productStoreId\n        }\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"updateOrderCustomerPartyId\",\n    value: function updateOrderCustomerPartyId(orderId, customerPartyId) {\n      return ServiceHandle.post(Const.API.UpdateOrderCustomerPartyId, {\n        orderId: orderId,\n        customerPartyId: customerPartyId\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"holdOrder\",\n    value: function holdOrder(orderId) {\n      return ServiceHandle.post(Const.API.HoldOrder, {\n        orderId: orderId\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"reopenOrder\",\n    value: function reopenOrder(orderId) {\n      return ServiceHandle.post(Const.API.ReopenOrder, {\n        orderId: orderId\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"cancelOrder\",\n    value: function cancelOrder(orderId) {\n      return ServiceHandle.post(Const.API.CancelOrder, {\n        orderId: orderId\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"completeOrder\",\n    value: function completeOrder(orderId, paymentId) {\n      return ServiceHandle.post(Const.API.CompleteOrder, {\n        orderId: orderId,\n        paymentId: paymentId\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"getHeldOrderList\",\n    value: function getHeldOrderList() {\n      return ServiceHandle.get(Const.API.GetHeldOrderList, {}).then(function (res) {\n        return res.data;\n      });\n    }\n  }, {\n    key: \"deleteOrderItem\",\n    value: function deleteOrderItem(orderItemSeqId, orderId, orderPartSeqId) {\n      return ServiceHandle.get(Const.API.DeleteOrderItem, {\n        params: {\n          orderItemSeqId: orderItemSeqId,\n          orderId: orderId,\n          orderPartSeqId: orderPartSeqId\n        }\n      }).then(function (res) {\n        return res.data;\n      });\n    }\n  }]);\n\n  return POSService;\n}();","map":{"version":3,"sources":["D:/eway/src/service/POSService.js"],"names":["Const","ServiceHandle","POSService","params","get","API","GetCustomerInfo_POS","then","res","data","GetOrderDetail_POS","GetOrderList_POS","GetPromoList_POS","GetPromoDetail_POS","GetPromoRules","documentType","queryString","SearchProducts","productStoreId","customerPartyId","orderId","productId","quantity","AddOrderItem","salesChannelEnumId","orderItemSeqId","post","UpdateOrderItem","GetOrderHeader","GetOrderItemList","GetPaymentInstrumentOptions","paymentInstrumentEnumId","amount","AddOrderPartPayment","GetTentativeOrderIfAny","UpdateOrderCustomerPartyId","HoldOrder","ReopenOrder","CancelOrder","paymentId","CompleteOrder","GetHeldOrderList","orderPartSeqId","DeleteOrderItem"],"mappings":"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","sourcesContent":["import { Const, ServiceHandle } from '../utilities';\r\n\r\nexport class POSService {\r\n\r\n    getCustomerInfo(params) {\r\n        return ServiceHandle.get(Const.API.GetCustomerInfo_POS, { params: params })\r\n            .then(res => res.data);\r\n    }\r\n\r\n    getOrderDetail(params) {\r\n        return ServiceHandle.get(Const.API.GetOrderDetail_POS, { params: params })\r\n            .then(res => res.data);\r\n    }\r\n\r\n    getOrderList(params) {\r\n        return ServiceHandle.get(Const.API.GetOrderList_POS, { params: params })\r\n            .then(res => res.data);\r\n    }\r\n\r\n    getPromoList(params) {\r\n        return ServiceHandle.get(Const.API.GetPromoList_POS,{params:params})\r\n            .then(res => res.data);\r\n        \r\n    }\r\n\r\n    getPromoDetail(params) {\r\n        return ServiceHandle.get(Const.API.GetPromoDetail_POS,{params:params})\r\n            .then(res => res.data);\r\n        \r\n    }\r\n\r\n    getPromoRules(params) {\r\n        return ServiceHandle.get(Const.API.GetPromoRules,{params:params})\r\n            .then(res => res.data);\r\n        \r\n    }\r\n\r\n    quickSearch(documentType, queryString){\r\n        return ServiceHandle.get(Const.API.SearchProducts,{params:{documentType:documentType,queryString:queryString}})\r\n            .then(res => res.data);\r\n    }\r\n\r\n    addOrderItem(productStoreId, customerPartyId, orderId, productId, quantity){\r\n        return ServiceHandle.get(Const.API.AddOrderItem,{params:{productStoreId:productStoreId, salesChannelEnumId:'ScPos', customerPartyId:customerPartyId, orderId:orderId, productId:productId, quantity:quantity}})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    /*delete OrderItem by sending quantity 0*/\r\n    updateOrderItem(orderId,orderItemSeqId,quantity){\r\n        return ServiceHandle.post(Const.API.UpdateOrderItem,{orderId:orderId,orderItemSeqId:orderItemSeqId,quantity:quantity})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    getOrderHeader(orderId){\r\n        return ServiceHandle.get(Const.API.GetOrderHeader,{params:{orderId:orderId}})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    getOrderItemList(orderId){\r\n        return ServiceHandle.get(Const.API.GetOrderItemList,{params:{orderId:orderId}})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    getPaymentInstrumentOptions(){\r\n        return ServiceHandle.get(Const.API.GetPaymentInstrumentOptions,{})\r\n        .then(res => res.data);\r\n    }\r\n    /*\r\n    getPaymentTypeOptions(){\r\n        return ServiceHandle.get('http://localhost:8080/rest/s1/pos/getPaymentTypeOptions',{})\r\n        .then(res => res.data);\r\n        \r\n    }\r\n    */\r\n    addOrderPartPayment(orderId, paymentInstrumentEnumId, amount){\r\n        return ServiceHandle.post(Const.API.AddOrderPartPayment,{orderId:orderId, paymentInstrumentEnumId:paymentInstrumentEnumId, amount:amount})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    getTentativeOrderIfAny(customerPartyId, productStoreId){\r\n        return ServiceHandle.get(Const.API.GetTentativeOrderIfAny,{params:{customerPartyId:customerPartyId, productStoreId:productStoreId}})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    updateOrderCustomerPartyId(orderId, customerPartyId){\r\n        return ServiceHandle.post(Const.API.UpdateOrderCustomerPartyId,{orderId:orderId, customerPartyId:customerPartyId})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    holdOrder(orderId){\r\n        return ServiceHandle.post(Const.API.HoldOrder,{orderId:orderId})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    reopenOrder(orderId){\r\n        return ServiceHandle.post(Const.API.ReopenOrder,{orderId:orderId})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    cancelOrder(orderId){\r\n        return ServiceHandle.post(Const.API.CancelOrder,{orderId:orderId})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    completeOrder(orderId, paymentId){\r\n        return ServiceHandle.post(Const.API.CompleteOrder,{orderId:orderId, paymentId:paymentId})\r\n        .then(res => res.data);\r\n    }\r\n    \r\n    getHeldOrderList(){\r\n        return ServiceHandle.get(Const.API.GetHeldOrderList,{})\r\n        .then(res => res.data);\r\n    }\r\n\r\n    deleteOrderItem(orderItemSeqId, orderId ,orderPartSeqId){\r\n        return ServiceHandle.get(Const.API.DeleteOrderItem,{\r\n        params:{\r\n        orderItemSeqId: orderItemSeqId,\r\n        orderId: orderId,\r\n        orderPartSeqId: orderPartSeqId}})\r\n        .then(res => res.data);\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}